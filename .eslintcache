[{"D:\\PROJECTS\\frontgold\\src\\index.js":"1","D:\\PROJECTS\\frontgold\\src\\App.js":"2","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js":"3","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js":"4","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js":"5","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js":"6","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js":"7","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js":"8","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js":"9","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js":"10","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js":"11","D:\\PROJECTS\\frontgold\\src\\api\\index.js":"12","D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js":"13","D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js":"14","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js":"15","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js":"16","D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js":"17","D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js":"18","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js":"19","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js":"20","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js":"21","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js":"22","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js":"23","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js":"24","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js":"25","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js":"26","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js":"27","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js":"28","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js":"29","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js":"30","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js":"31","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js":"32","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js":"33","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashCard.js":"34","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashPie.js":"35","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTodayTable.js":"36","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardStatusMonitoring.js":"37","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusTableReducer.js":"38","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusListReducer.js":"39","D:\\PROJECTS\\frontgold\\src\\reducers\\RouteTableReducer.js":"40","D:\\PROJECTS\\frontgold\\src\\actions\\StatusActions.js":"41","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashRoutes.js":"42","D:\\PROJECTS\\frontgold\\src\\components\\pages\\users\\RouteInfo.js":"43","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashShipment.js":"44","D:\\PROJECTS\\frontgold\\src\\reducers\\ShipmentReducer.js":"45"},{"size":1656,"mtime":1611676024289,"results":"46","hashOfConfig":"47"},{"size":1853,"mtime":1611756950541,"results":"48","hashOfConfig":"47"},{"size":3646,"mtime":1611214801730,"results":"49","hashOfConfig":"47"},{"size":3156,"mtime":1610609959039,"results":"50","hashOfConfig":"47"},{"size":4037,"mtime":1611691255209,"results":"51","hashOfConfig":"47"},{"size":7624,"mtime":1611759945765,"results":"52","hashOfConfig":"47"},{"size":1893,"mtime":1611676193169,"results":"53","hashOfConfig":"47"},{"size":12471,"mtime":1611576914021,"results":"54","hashOfConfig":"47"},{"size":2683,"mtime":1611686522104,"results":"55","hashOfConfig":"47"},{"size":8353,"mtime":1611679661090,"results":"56","hashOfConfig":"47"},{"size":5295,"mtime":1610603191118,"results":"57","hashOfConfig":"47"},{"size":4587,"mtime":1611758793871,"results":"58","hashOfConfig":"47"},{"size":638,"mtime":1611759141421,"results":"59","hashOfConfig":"47"},{"size":259,"mtime":1609223499265,"results":"60","hashOfConfig":"47"},{"size":273,"mtime":1609608821128,"results":"61","hashOfConfig":"47"},{"size":604,"mtime":1609889429429,"results":"62","hashOfConfig":"47"},{"size":530,"mtime":1611403910296,"results":"63","hashOfConfig":"47"},{"size":486,"mtime":1611674429591,"results":"64","hashOfConfig":"47"},{"size":1554,"mtime":1611750975462,"results":"65","hashOfConfig":"47"},{"size":3857,"mtime":1611685043711,"results":"66","hashOfConfig":"47"},{"size":5385,"mtime":1611752987246,"results":"67","hashOfConfig":"47"},{"size":1642,"mtime":1611752661559,"results":"68","hashOfConfig":"47"},{"size":980,"mtime":1611674420362,"results":"69","hashOfConfig":"47"},{"size":4750,"mtime":1611680489938,"results":"70","hashOfConfig":"47"},{"size":9064,"mtime":1611685701534,"results":"71","hashOfConfig":"47"},{"size":3677,"mtime":1611761488219,"results":"72","hashOfConfig":"47"},{"size":479,"mtime":1610289807696,"results":"73","hashOfConfig":"47"},{"size":886,"mtime":1610639967552,"results":"74","hashOfConfig":"47"},{"size":156,"mtime":1610040170685,"results":"75","hashOfConfig":"47"},{"size":188,"mtime":1610040379997,"results":"76","hashOfConfig":"47"},{"size":13735,"mtime":1611756909391,"results":"77","hashOfConfig":"47"},{"size":5211,"mtime":1611755800510,"results":"78","hashOfConfig":"47"},{"size":5698,"mtime":1611760835648,"results":"79","hashOfConfig":"47"},{"size":393,"mtime":1611177347058,"results":"80","hashOfConfig":"47"},{"size":2441,"mtime":1611659429141,"results":"81","hashOfConfig":"47"},{"size":2449,"mtime":1611672781512,"results":"82","hashOfConfig":"47"},{"size":14780,"mtime":1611748524751,"results":"83","hashOfConfig":"47"},{"size":183,"mtime":1611403823526,"results":"84","hashOfConfig":"47"},{"size":180,"mtime":1611403855905,"results":"85","hashOfConfig":"47"},{"size":180,"mtime":1611403854495,"results":"86","hashOfConfig":"47"},{"size":1066,"mtime":1611759039640,"results":"87","hashOfConfig":"47"},{"size":1542,"mtime":1611690954389,"results":"88","hashOfConfig":"47"},{"size":1679,"mtime":1611758279974,"results":"89","hashOfConfig":"47"},{"size":1886,"mtime":1611759825946,"results":"90","hashOfConfig":"47"},{"size":189,"mtime":1611759013810,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"17d0ngb",{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"95"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"95"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"95"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"95"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"95"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"95"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"95"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"95"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"95"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"95"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"95"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"95"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"95"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"95"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PROJECTS\\frontgold\\src\\index.js",["207","208"],"import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\n\nimport { Provider } from \"react-redux\"\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport reducers from \"./reducers/RootReducer\"\n\nimport {\n  transitions,\n  positions,\n  types,\n  Provider as AlertProvider,\n} from \"react-alert\"\n// import AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: \"top right\",\n  timeout: 3000,\n  // offset: '70px',\n  // you can also just use 'scale'\n\n  transition: transitions.SCALE,\n  containerStyle: {\n    zIndex: 80000,\n  },\n}\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n    {/* <button onClick={close}>X</button> */}\n  </div>\n)\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n// store.subscribe(() => {\n//   // const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n//   // console.log(cachedCreds.token)\n//   console.log(store.getState())\n// })\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AlertProvider template={AlertTemplate} {...options}>\n        <App />\n      </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["209","210"],"D:\\PROJECTS\\frontgold\\src\\App.js",["211","212","213","214","215"],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js",["216","217"],"import React from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { SideBarDataAdmin, SideBarDataStaff } from \"./SideBarData\"\r\nimport { IconContext } from \"react-icons\"\r\nimport SideBarMenu from \"./SideBarMenu\"\r\nimport * as RiIcons from \"react-icons/ri\"\r\nimport { GiConsoleController } from \"react-icons/gi\"\r\n\r\nfunction MyNavbar({\r\n  sidebar,\r\n  setSidebar,\r\n  isAdmin,\r\n  setIsAdmin,\r\n  handleLogout,\r\n  history,\r\n  isMain,\r\n}) {\r\n  const showSidebar = () => setSidebar(!sidebar)\r\n\r\n  const handleClick = () => {\r\n    handleLogout()\r\n    window.localStorage.clear()\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"white\" }}>\r\n        <div className=\"navbar\">\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n\r\n          {isAdmin ? (\r\n            <div\r\n              onClick={() => {\r\n                setIsAdmin(!isAdmin)\r\n              }}\r\n            >\r\n              <FaIcons.FaUserTie style={{ fontSize: \"30px\" }} />\r\n              <span style={{ color: \"white\", marginRight: \"10px\" }}>Admin</span>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onClick={() => {\r\n                setIsAdmin(!isAdmin)\r\n              }}\r\n            >\r\n              <FaIcons.FaUserInjured style={{ fontSize: \"30px\" }} />\r\n              <span style={{ color: \"white\", marginRight: \"10px\" }}>Staff</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\">\r\n            {/* <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose onClick={showSidebar}/>\r\n                        </Link>\r\n                    </li> */}\r\n            {isAdmin\r\n              ? SideBarDataAdmin.map((item, index) => {\r\n                  if (isMain) {\r\n                    if (item.title !== \"Orders\") {\r\n                      return (\r\n                        <SideBarMenu\r\n                          item={item}\r\n                          key={index}\r\n                          isMain={isMain}\r\n                          showSidebar={showSidebar}\r\n                        />\r\n                      )\r\n                    }\r\n                  } else {\r\n                    return (\r\n                      <SideBarMenu\r\n                        item={item}\r\n                        key={index}\r\n                        isMain={isMain}\r\n                        showSidebar={showSidebar}\r\n                      />\r\n                    )\r\n                  }\r\n                })\r\n              : SideBarDataStaff.map((item, index) => {\r\n                  return (\r\n                    <SideBarMenu\r\n                      item={item}\r\n                      key={index}\r\n                      showSidebar={showSidebar}\r\n                    />\r\n                  )\r\n                })}\r\n            {/* {SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                           <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    })} */}\r\n\r\n            <li\r\n              style={{ display: \"block\", width: \"100%\" }}\r\n              className=\"nav-text\"\r\n              onClick={handleClick}\r\n            >\r\n              <RiIcons.RiLogoutBoxLine />\r\n              <span>LOGOUT</span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(MyNavbar)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js",["218"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as IoIcons from 'react-icons/io'\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GiIcons from 'react-icons/gi';\r\nimport * as VscIcons from 'react-icons/vsc';\r\n\r\n\r\nexport const SideBarDataAdmin = [\r\n    {\r\n        title: 'Dashboard',\r\n        path: '/',\r\n        icon: <RiIcons.RiDashboardLine />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Items',\r\n        path: '#',\r\n        icon: <GiIcons.GiGloves />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Add Item',\r\n                path: '/items/add',\r\n                icon: <FaIcons.FaPlus />\r\n            },\r\n            {\r\n                title: 'View Items',\r\n                path: '/items/view',\r\n                icon: <IoIcons.IoIosPaper />\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Orders',\r\n        path: '#',\r\n        icon: <VscIcons.VscGear />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Create PO',\r\n                path: '/process/isr',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n           \r\n            {\r\n                title: 'View PO',\r\n                path: '/po/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            \r\n        ]\r\n    },\r\n    {\r\n        title: 'Barcodes',\r\n        path: '#',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Generate Barcodes',\r\n                path: '/process/po',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'View Barcodes',\r\n                path: '/barcodes/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'Barcode Scan',\r\n                path: '/process/scan',\r\n                icon: <FaIcons.FaBarcode />,\r\n                class_name: 'nav-text',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Admin Page',\r\n        path: '/adminpage',\r\n        icon: <FaIcons.FaUsers />,\r\n        class_name: 'nav-text',\r\n    },\r\n]\r\n\r\nexport const SideBarDataStaff = [\r\n    // {\r\n    //     title: 'Home',\r\n    //     path: '/',\r\n    //     icon: <AiIcons.AiFillHome />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n    {\r\n        title: 'Barcode Scan',\r\n        path: '/process/scan',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Routing Info',\r\n        path: '/info',\r\n        icon: <FaIcons.FaBook />,\r\n        class_name: 'nav-text',\r\n    },\r\n    // {\r\n    //     title: 'Logs',\r\n    //     path: '/logs',\r\n    //     icon: <FaIcons.FaBook />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n]","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js",["219","220","221"],"import React, { useEffect, useState } from \"react\"\r\nimport { Route, Switch, withRouter } from \"react-router-dom\"\r\nimport Dashboard from \"./dashboard/Dashboard\"\r\nimport AddItem from \"./items/AddItem\"\r\nimport PageUnavailable from \"./home/PageUnavailable\"\r\nimport Home from \"./home/Home\"\r\nimport BarcodeScan from \"./process/BarcodeScan.js/BarcodeScan\"\r\nimport ISR from \"./process/ISR/ISR\"\r\nimport PO from \"./process/PO/PO\"\r\nimport SignIn from \"../auth/SignIn\"\r\nimport ViewItems from \"./items/ViewItems\"\r\nimport ViewBarcodes from \"./process/PO/ViewBarcodes\"\r\nimport ViewDetails from \"./process/ISR/ViewDetails\"\r\nimport DashRoutes from \"./dashboard/DashRoutes\"\r\nimport RouteInfo from \"./users/RouteInfo\"\r\n\r\nfunction Pages({ sidebar, history, setSidebar, isMain }) {\r\n  const [cachedCreds, setCachedCreds] = useState(null)\r\n\r\n  history.listen((location, action) => {\r\n    // console.log(history)\r\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n    setCachedCreds(cacheCreds)\r\n  })\r\n\r\n  useEffect(() => {\r\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n    setCachedCreds(cacheCreds)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={sidebar ? \"main-container-active\" : \"main-container\"}>\r\n      {cachedCreds ? (\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? Dashboard\r\n                : () => {\r\n                    window.location.href =\r\n                      window.location.protocol +\r\n                      \"//\" +\r\n                      window.location.host +\r\n                      \"/process/scan\"\r\n                  }\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/items/add\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => <AddItem isMain={isMain} />\r\n                : PageUnavailable\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/process/isr\"\r\n            component={cachedCreds.is_Admin ? ISR : PageUnavailable}\r\n          />\r\n          {/* <Route exact path=\"/signin\" component={cachedCreds ? PageUnavailable :  SignIn } /> */}\r\n          <Route\r\n            exact\r\n            path=\"/process/scan\"\r\n            component={cachedCreds.is_Admin ? BarcodeScan : BarcodeScan}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/process/po\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => <PO setSidebar={setSidebar} sidebar={sidebar} />\r\n                : PageUnavailable\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/items/view\"\r\n            component={cachedCreds.is_Admin ? ViewItems : PageUnavailable}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/po/view\"\r\n            component={cachedCreds.is_Admin ? ViewDetails : PageUnavailable}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/barcodes/view\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => <ViewBarcodes isMain={isMain} />\r\n                : PageUnavailable\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/info\"\r\n            component={cachedCreds.is_Admin ? RouteInfo : RouteInfo}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/adminpage\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => {\r\n                    window.location.href =\r\n                      window.location.protocol +\r\n                      \"//\" +\r\n                      window.location.hostname +\r\n                      \":8000\" +\r\n                      \"/admin\"\r\n                    return <h4>Session Expired</h4>\r\n                  }\r\n                : PageUnavailable\r\n            }\r\n          />\r\n        </Switch>\r\n      ) : (\r\n        <p>Loading..</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Pages)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js",["222","223","224","225","226"],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js",["227","228"],"import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction SideBarMenu({ item, showSidebar, isMain }) {\r\n  const [subnav, setSubnav] = useState(false)\r\n  const showSubnav = () => setSubnav(!subnav)\r\n\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={item.path}\r\n        className={item.class_name}\r\n        onClick={item.subNav && showSubnav}\r\n      >\r\n        <div>\r\n          {item.icon}\r\n          <span>{item.title}</span>\r\n        </div>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </Link>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          if (isMain) {\r\n            if (item.title !== \"Generate Barcodes\") {\r\n              return (\r\n                <Link\r\n                  to={item.path}\r\n                  key={index}\r\n                  className=\"sub-links\"\r\n                  onClick={\r\n                    item.path === \"/process/scan\" || item.path === \"/process/po\"\r\n                      ? () => showSidebar()\r\n                      : null\r\n                  }\r\n                >\r\n                  {item.icon}\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              )\r\n            }\r\n          } else {\r\n            return (\r\n              <Link\r\n                to={item.path}\r\n                key={index}\r\n                className=\"sub-links\"\r\n                onClick={\r\n                  item.path === \"/process/scan\" || item.path === \"/process/po\"\r\n                    ? () => showSidebar()\r\n                    : null\r\n                }\r\n              >\r\n                {item.icon}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            )\r\n          }\r\n        })}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default SideBarMenu\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js",["229"],"import React, { useEffect, useState } from \"react\"\r\nimport { Form, Container, Row, Col, Button, Image } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addItem } from \"../../../actions/ItemActions\"\r\nimport Gears from \"../../../assets/img/gir2.png\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as BiIcons from \"react-icons/bi\"\r\n\r\nimport { useAlert } from \"react-alert\"\r\n\r\nfunction AddItem({ isMain }) {\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n\r\n  const [ItemClass, setItemClass] = useState({\r\n    process: [],\r\n    customer: \"\",\r\n    style: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    console.log(ItemClass)\r\n  }, [ItemClass])\r\n\r\n  const handleFormChange = (e) => {\r\n    setItemClass({\r\n      ...ItemClass,\r\n      [e.target.id]: e.target.value.toUpperCase(),\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let checkboxes = document.querySelectorAll(\"input[type=checkbox]:checked\")\r\n    if (checkboxes.length) {\r\n      const res = await dispatch(addItem(ItemClass))\r\n      console.log(res)\r\n      if (res) {\r\n        alert.show(\r\n          <div className=\"alert-suc\">\r\n            <FaIcons.FaCheck /> The Item has been added!\r\n          </div>\r\n        )\r\n      } else {\r\n        alert.show(\r\n          <div className=\"alert-err\">\r\n            <BiIcons.BiError /> Unable to add the Item!\r\n          </div>\r\n        )\r\n      }\r\n      document.getElementById(\"form-add-item\").reset()\r\n    } else {\r\n      alert.show(\r\n        <div className=\"alert-err\">\r\n          <BiIcons.BiError /> No Selected Process!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleClear = () => {\r\n    document.getElementById(\"form-add-item\").reset()\r\n  }\r\n  const handleChange = (e) => {\r\n    let processList = []\r\n    let checkboxes = document.querySelectorAll(\"input[type=checkbox]:checked\")\r\n    for (let i = 0; i < checkboxes.length; i++) {\r\n      processList.push(checkboxes[i].value)\r\n    }\r\n    setItemClass({\r\n      ...ItemClass,\r\n      process: processList,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-item-wrapper\">\r\n      <div className=\"add-item-container\">\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h5 className=\"form-title\">ADD ITEM</h5>\r\n        </div>\r\n\r\n        <div className=\"add-item-primary\">\r\n          <Form onSubmit={handleSubmit} id=\"form-add-item\">\r\n            <Row>\r\n              <Col lg={1}></Col>\r\n              <Col lg={5}>\r\n                <Form.Group controlId=\"customer\">\r\n                  <Form.Label>Customer:</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Customer\"\r\n                    className=\"form-caps\"\r\n                    onChange={handleFormChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"style\">\r\n                  <Form.Label>Style:</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Style\"\r\n                    className=\"form-caps\"\r\n                    onChange={handleFormChange}\r\n                  />\r\n                </Form.Group>\r\n                <br />\r\n                <Image\r\n                  src={Gears}\r\n                  style={{\r\n                    width: \"200px\",\r\n                    marginLeft: \"90px\",\r\n                    height: \"170px\",\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col lg={1}></Col>\r\n              <Col lg={5}>\r\n                {ItemClass.customer.toUpperCase() === \"TOTES\" ? (\r\n                  isMain ? (\r\n                    <Form.Group>\r\n                      <Form.Label>Process:</Form.Label>\r\n                      <Form.Check\r\n                        label=\"B1 Receipts\"\r\n                        value=\"receipts\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming\"\r\n                        value=\"steaming\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Examining\"\r\n                        value=\"examining\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming 1\"\r\n                        value=\"steaming_1\"\r\n                        onChange={handleChange}\r\n                      />\r\n\r\n                      <Form.Check\r\n                        label=\"Examining 1\"\r\n                        value=\"examining_1\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Tagging\"\r\n                        value=\"tagging\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Metal Detection\"\r\n                        value=\"metaldetect\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Boxing\"\r\n                        value=\"boxing\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  ) : (\r\n                    <Form.Group>\r\n                      <Form.Label>Process:</Form.Label>\r\n\r\n                      <Form.Check\r\n                        label=\"Knitting\"\r\n                        value=\"knitting\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 1\"\r\n                        value=\"isr_1\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"B1 Receipts\"\r\n                        value=\"receipts\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming\"\r\n                        value=\"steaming\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Examining\"\r\n                        value=\"examining\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 2\"\r\n                        value=\"isr_2\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Sewing\"\r\n                        value=\"sewing\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 3\"\r\n                        value=\"isr_3\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming 1\"\r\n                        value=\"steaming_1\"\r\n                        onChange={handleChange}\r\n                      />\r\n\r\n                      <Form.Check\r\n                        label=\"Examining 1\"\r\n                        value=\"examining_1\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Tagging\"\r\n                        value=\"tagging\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Metal Detection\"\r\n                        value=\"metaldetect\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Boxing\"\r\n                        value=\"boxing\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  )\r\n                ) : isMain ? (\r\n                  <Form.Group>\r\n                    <Form.Label>Process:</Form.Label>\r\n                    <Form.Check\r\n                      label=\"B1 Receipts\"\r\n                      value=\"receipts\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Steaming\"\r\n                      value=\"steaming\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Tagging\"\r\n                      value=\"tagging\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Examining\"\r\n                      value=\"examining\"\r\n                      onChange={handleChange}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      label=\"Metal Detection\"\r\n                      value=\"metaldetect\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Boxing\"\r\n                      value=\"boxing\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                ) : (\r\n                  <Form.Group>\r\n                    <Form.Label>Process:</Form.Label>\r\n                    <Form.Check\r\n                      label=\"Knitting\"\r\n                      value=\"knitting\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Cutting\"\r\n                      value=\"cutting\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"ISR 1\"\r\n                      value=\"isr_1\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Sewing\"\r\n                      value=\"sewing\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"ISR 2\"\r\n                      value=\"isr_2\"\r\n                      onChange={handleChange}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      label=\"B1 Receipts\"\r\n                      value=\"receipts\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Steaming\"\r\n                      value=\"steaming\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Tagging\"\r\n                      value=\"tagging\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Examining\"\r\n                      value=\"examining\"\r\n                      onChange={handleChange}\r\n                    />\r\n\r\n                    <Form.Check\r\n                      label=\"Metal Detection\"\r\n                      value=\"metaldetect\"\r\n                      onChange={handleChange}\r\n                    />\r\n                    <Form.Check\r\n                      label=\"Boxing\"\r\n                      value=\"boxing\"\r\n                      onChange={handleChange}\r\n                    />\r\n                  </Form.Group>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <br />\r\n            <Row>\r\n              <Col lg={1}></Col>\r\n              <Col lg={10}>\r\n                <Form.Group>\r\n                  <Button\r\n                    variant=\"info\"\r\n                    type=\"submit\"\r\n                    className=\"form-btn-dark\"\r\n                    size=\"sm\"\r\n                    block\r\n                  >\r\n                    Add\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"info\"\r\n                    className=\"form-btn-dark\"\r\n                    block\r\n                    size=\"sm\"\r\n                    onClick={handleClear}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </Form.Group>\r\n              </Col>\r\n              <Col lg={1}></Col>\r\n            </Row>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddItem\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js",["230","231","232"],"import React, { useEffect, useState } from \"react\"\r\nimport { Col, Row, Button } from \"react-bootstrap\"\r\nimport ISRForm from \"./ISRForm\"\r\nimport ISRPrintComponent from \"./ISRPrintComponent\"\r\nimport html2canvas from \"html2canvas\"\r\nimport { jsPDF } from \"jspdf\"\r\n\r\nfunction ISR() {\r\n  const [ISRItem, setISRItem] = useState({\r\n    detail_customer: \"\",\r\n    po_number: \"\",\r\n    total_sack: \"\",\r\n    description: \"\",\r\n    color: \"\",\r\n    size: \"\",\r\n    total: \"\",\r\n    qty_sack: \"\",\r\n    ship_date: \"\",\r\n    detail_style: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    let totalSack = document.getElementById(\"total_sack\")\r\n    let poNum = document.getElementById(\"po_number\")\r\n    let description = document.getElementById(\"description\")\r\n    let color = document.getElementById(\"color\")\r\n    let total = document.getElementById(\"total\")\r\n    let qty_sack = document.getElementById(\"qty_sack\")\r\n    let size = document.getElementById(\"size\")\r\n    let ship_date = document.getElementById(\"ship_date\")\r\n\r\n    totalSack.value = \"\"\r\n    poNum.value = \"\"\r\n    description.value = \"\"\r\n    color.value = \"\"\r\n    total.value = \"\"\r\n    qty_sack.value = \"\"\r\n    ship_date.value = \"\"\r\n    size.value = \"\"\r\n\r\n    setISRItem({\r\n      ...ISRItem,\r\n      po_number: \"\",\r\n      total_sack: \"\",\r\n      description: \"\",\r\n      size: \"\",\r\n      color: \"\",\r\n      total: \"\",\r\n      qty_sack: \"\",\r\n      ship_date: \"\",\r\n    })\r\n  }, [ISRItem.detail_customer])\r\n\r\n  const handlePrint = () => {\r\n    const input = document.getElementById(\"printForm\")\r\n\r\n    html2canvas(input).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\")\r\n      const pdf = new jsPDF(\"p\", \"mm\", \"a4\")\r\n      let width = pdf.internal.pageSize.getWidth()\r\n      let height = pdf.internal.pageSize.getHeight()\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0, width, height)\r\n      pdf.save(\"download.pdf\")\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"isr-wrapper\">\r\n      <div className=\"isr-container\">\r\n        <Row style={{ margin: \"0 auto\" }}>\r\n          {/* <Col lg={1}></Col> */}\r\n          <Col lg={6} md={11} sm={11}>\r\n            <div className=\"isr-container-form\">\r\n              <div style={{ marginBottom: \"15px\" }}>\r\n                <h5 className=\"form-title\">CREATE ORDER</h5>\r\n              </div>\r\n              <ISRForm ISRItem={ISRItem} setISRItem={setISRItem} />\r\n            </div>\r\n          </Col>\r\n          <Col lg={6} md={11} sm={11}>\r\n            <div className=\"isr-container-print\" id=\"printForm\">\r\n              <ISRPrintComponent ISRItem={ISRItem} />\r\n            </div>\r\n          </Col>\r\n          {/* <Col lg={1}></Col> */}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ISR\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js",["233","234"],"import React, { useEffect, useState } from \"react\"\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addDetails } from \"../../../../actions/DetailsActions\"\r\nimport { getItems } from \"../../../../actions/ItemActions\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as BiIcons from \"react-icons/bi\"\r\nimport { useAlert } from \"react-alert\"\r\n\r\nfunction ISRForm({ ISRItem, setISRItem }) {\r\n  const dispatch = useDispatch()\r\n  const alert = useAlert()\r\n  const item = useSelector((state) => state.item)\r\n  const [detailStyle, setdetailStyle] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (item) {\r\n      if (item.length) {\r\n        let customerList = []\r\n        for (let i = 0; i !== item.length; i++) {\r\n          customerList.push(item[i].customer)\r\n        }\r\n\r\n        let UniqueCustomerList = [...new Set(customerList)]\r\n\r\n        setdetailStyle({\r\n          ...detailStyle,\r\n          customerList: UniqueCustomerList,\r\n        })\r\n      }\r\n    }\r\n  }, [item])\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setdetailStyle({\r\n      customerList: [],\r\n      styleDict: [],\r\n    })\r\n  }, [])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const res = await dispatch(addDetails(ISRItem))\r\n    console.log(res)\r\n    if (res) {\r\n      alert.show(\r\n        <div className=\"alert-suc\">\r\n          <FaIcons.FaCheck /> The PO has been created!\r\n        </div>\r\n      )\r\n    } else {\r\n      alert.show(\r\n        <div className=\"alert-err\">\r\n          <BiIcons.BiError /> Unable to create PO!\r\n        </div>\r\n      )\r\n    }\r\n    document.getElementById(\"form-isr\").reset()\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let customer = document.getElementById(\"detail_customer\")\r\n    let style = document.getElementById(\"detail_style\")\r\n    let poNum = document.getElementById(\"po_number\")\r\n    let total = document.getElementById(\"total\")\r\n    let qtySack = document.getElementById(\"qty_sack\")\r\n    let totalSack = document.getElementById(\"total_sack\")\r\n\r\n    if (customer.value !== \"NONE\") {\r\n      let filteredItem = item.filter((i) => i.customer === customer.value)\r\n      let styleDict = []\r\n\r\n      for (let i = 0; i !== filteredItem.length; i++) {\r\n        styleDict.push({\r\n          id: filteredItem[i].id,\r\n          style: filteredItem[i].style,\r\n        })\r\n        setdetailStyle({\r\n          ...detailStyle,\r\n          styleDict: styleDict,\r\n        })\r\n      }\r\n    } else {\r\n      setdetailStyle({\r\n        ...detailStyle,\r\n        styleDict: [],\r\n      })\r\n    }\r\n\r\n    if (style.value !== \"\" && poNum.value !== \"\" && customer.value !== \"NONE\") {\r\n      if (total.value !== \"\" && qtySack.value !== \"\") {\r\n        if (total.value % qtySack.value !== 0) {\r\n          totalSack.value = Math.trunc(total.value / qtySack.value) + 1\r\n        } else {\r\n          totalSack.value = total.value / qtySack.value\r\n        }\r\n      }\r\n      setISRItem({\r\n        ...ISRItem,\r\n        [e.target.id]: e.target.value.toUpperCase(),\r\n        detail_style: style.value,\r\n        total_sack: totalSack.value,\r\n      })\r\n    } else if (customer.value === \"NONE\") {\r\n      setISRItem({\r\n        ...ISRItem,\r\n        detail_customer: \"\",\r\n      })\r\n    } else {\r\n      setISRItem({\r\n        ...ISRItem,\r\n        [e.target.id]: e.target.value.toUpperCase(),\r\n        detail_style: style.value,\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit} id=\"form-isr\">\r\n        <Form.Group as={Row} controlId=\"detail_customer\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Customer:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              as=\"select\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n            >\r\n              <option key={0} value=\"NONE\">\r\n                NONE\r\n              </option>\r\n              {detailStyle\r\n                ? detailStyle.customerList.map((customer, index) => {\r\n                    return <option key={index}>{customer}</option>\r\n                  })\r\n                : null}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"detail_style\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Style:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              as=\"select\"\r\n              onChange={handleChange}\r\n              placeholder=\"Choose Customer\"\r\n              className=\"form-caps\"\r\n            >\r\n              {detailStyle\r\n                ? detailStyle.styleDict.map((style, index) => {\r\n                    return (\r\n                      <option key={index} value={style.style}>\r\n                        {style.style}\r\n                      </option>\r\n                    )\r\n                  })\r\n                : null}\r\n            </Form.Control>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"po_number\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>PO Number:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n              maxLength=\"10\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"description\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Description:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n              maxLength=\"40\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"color\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Color:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n              maxLength=\"50\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"size\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Size:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n              maxLength=\"10\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"total\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Total:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"number\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"qty_sack\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Quantity / Sack:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"total_sack\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Total Sack:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row} controlId=\"ship_date\">\r\n          <Col sm=\"4\">\r\n            <Form.Label>Ship Date:</Form.Label>\r\n          </Col>\r\n          <Col sm=\"8\">\r\n            <Form.Control\r\n              required\r\n              type=\"date\"\r\n              onChange={handleChange}\r\n              className=\"form-caps\"\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <div>\r\n          <Button type=\"submit\" className=\"form-btn-dark\" block>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ISRForm\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js",["235","236","237","238"],"import React, {useEffect, useState} from 'react'\r\nimport { Col, Container, Table, Row } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getItems } from '../../../../actions/ItemActions';\r\n\r\n\r\nfunction ISRPrintComponent({ ISRItem }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [routeList, setRouteList] = useState([])\r\n    \r\n    // const [bar, setBar] = useState('null')\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: bar ? bar:'null',\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     setBar(ISRItem.barcode)\r\n    // }, [ISRItem.barcode,ISRItem.detail_customer])\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        console.log(routeList)\r\n    }, [routeList])\r\n\r\n    useEffect(() => {\r\n        let styleField = document.getElementById('style-field');\r\n        let style = document.getElementById('detail_style');\r\n        if (style.selectedIndex!==-1) {\r\n         styleField.textContent= style.options[style.selectedIndex].innerHTML   \r\n        }\r\n        if (styleField.textContent !== null) {\r\n            let filteredStyle = item.filter(i => i.style === styleField.textContent)\r\n            if (filteredStyle.length) {\r\n                if (filteredStyle[0].process.length) {\r\n                    filteredStyle[0].process.unshift('ISR')\r\n                    let uniqueFilteredStyle = [...new Set(filteredStyle[0].process)]\r\n                    setRouteList(uniqueFilteredStyle)\r\n                }\r\n            }     \r\n        }\r\n    }, [ISRItem])\r\n\r\n    return ( \r\n        <Container className=\"print-form\">\r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    <ul>\r\n                        <li>CUSTOMER: <span>{ISRItem.detail_customer}</span></li>\r\n                        <li>PO #: <span>{ ISRItem.po_number}</span></li>\r\n                        <li>STYLE: <span id=\"style-field\">0</span> </li>\r\n                        <li>DESCRIPTION: <span>{ ISRItem.description}</span></li>\r\n                        <li>COLOR: <span>{ISRItem.color}</span></li>\r\n                        <li>SIZE: <span>{ISRItem.size}</span></li>\r\n                        <li>TOTAL Q'TY: <span>{ ISRItem.total}</span></li>\r\n                        <li>Q'TY/SACK: <span>{ ISRItem.qty_sack}</span></li>\r\n                        <li>SHIPDATE: <span>{ISRItem.ship_date}</span></li>\r\n                    </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> 0 / { ISRItem.total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={{padding:\"30px\"}}></div> */}\r\n            {/* <div className=\"print-barcode\">\r\n                <Image ref={inputRef} />\r\n            </div> */}\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {/* <tr>\r\n                        <td>ISR</td>\r\n                        <td></td>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        <td>FINAL EXAM</td>\r\n                        <td></td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ISRPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\api\\index.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js",["239"],"export default (item = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ITEMS':\r\n            return action.payload\r\n        case 'CREATE_ITEM':\r\n            return [...item, action.payload]\r\n        default:\r\n            return item\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js",["240"],"export default (details = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DETAILS':\r\n            return action.payload\r\n        case 'CREATE_DETAILS':\r\n            return [...details, action.payload]\r\n        default:\r\n            return details\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js",[],"D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js",["241"],"export default (barcodeScanResult = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_BARCODE\":\r\n      return action.payload\r\n    case \"POST_BARCODE\":\r\n      return action.payload\r\n    case \"INSERT_BR\":\r\n      return action.payload\r\n    case \"POST_BARCODE_ERROR\":\r\n      // alert(action.error)\r\n      barcodeScanResult = []\r\n      return barcodeScanResult\r\n    case \"FETCH_BARCODE_ERROR\":\r\n      return barcodeScanResult\r\n    default:\r\n      return barcodeScanResult\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js",["242"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js",["243","244","245","246","247","248","249"],"import React, { useState, useEffect } from \"react\"\r\nimport {\r\n  Table,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Form,\r\n  Card,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\"\r\nimport POPrintComponent from \"./POPrintComponent\"\r\nimport POTable from \"./POTable\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchDetails } from \"../../../../actions/DetailsActions\"\r\nimport html2canvas from \"html2canvas\"\r\nimport { jsPDF } from \"jspdf\"\r\n\r\nfunction PO({ setSidebar, sidebar }) {\r\n  const [searchInput, setSearchInput] = useState(null)\r\n  const [searchResult, setSearchResult] = useState(null)\r\n  const [selectedPO, setSelectedPO] = useState(null)\r\n  const [routeList, setRouteList] = useState([])\r\n  const [generatedBarcode, setGeneratedBarcode] = useState(null)\r\n  const [dummyState, setDummyState] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const details = useSelector((state) => state.details)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetails())\r\n  }, [dummyState])\r\n\r\n  useEffect(() => {\r\n    if (selectedPO) {\r\n      if (selectedPO.length) {\r\n        selectedPO[0].detail_style.process.unshift(\"ISR\")\r\n        let uniqueFilteredRoute = [\r\n          ...new Set(selectedPO[0].detail_style.process),\r\n        ]\r\n        setRouteList(uniqueFilteredRoute)\r\n      }\r\n    }\r\n  }, [selectedPO])\r\n\r\n  useEffect(() => {\r\n    const resultfilt = details.filter((det) => det.active === true)\r\n    setSearchResult(resultfilt)\r\n  }, [details])\r\n\r\n  useEffect(() => {\r\n    if (details) {\r\n      if (details.length) {\r\n        const searchResult = details.filter(\r\n          (det) =>\r\n            (det.po_number.includes(searchInput) ||\r\n              det.detail_customer.toUpperCase().includes(searchInput)) &&\r\n            det.active === true\r\n        )\r\n        setSearchResult(searchResult)\r\n      }\r\n    }\r\n  }, [searchInput])\r\n\r\n  const handlePrint = () => {\r\n    const input = document.getElementById(\"printForm\")\r\n\r\n    html2canvas(input, {\r\n      useCORS: true,\r\n      allowTaint: true,\r\n      scrollY: -window.scrollY,\r\n    }).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\")\r\n      const pdf = new jsPDF(\"p\", \"px\", \"a4\")\r\n      let pageWidth = pdf.internal.pageSize.getWidth()\r\n      let pageHeight = pdf.internal.pageSize.getHeight()\r\n\r\n      const widthRatio = pageWidth / canvas.width\r\n      const heightRatio = pageHeight / canvas.height\r\n\r\n      const canvasWidth = canvas.width * widthRatio\r\n      const canvasHeight = canvas.height * heightRatio\r\n\r\n      const marginX = (pageWidth - canvasWidth) / 2\r\n      const marginY = (pageHeight - canvasHeight + 50) / 2\r\n\r\n      pdf.addImage(\r\n        imgData,\r\n        \"JPEG\",\r\n        marginX,\r\n        marginY,\r\n        canvasWidth,\r\n        canvasHeight + 250\r\n      )\r\n      pdf.save(generatedBarcode)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"po-wrapper\">\r\n      <div className=\"po-container\">\r\n        <Row>\r\n          <Col lg={6} md={11} sm={11}>\r\n            <POTable\r\n              generatedBarcode={generatedBarcode}\r\n              setGeneratedBarcode={setGeneratedBarcode}\r\n              handlePrint={handlePrint}\r\n              searchResult={searchResult}\r\n              details={details}\r\n              selectedPO={selectedPO}\r\n              searchInput={searchInput}\r\n              setSearchInput={setSearchInput}\r\n              setSelectedPO={setSelectedPO}\r\n              dummyState={dummyState}\r\n              setDummyState={setDummyState}\r\n              setSidebar={setSidebar}\r\n              sidebar={sidebar}\r\n            />\r\n          </Col>\r\n          <Col lg={6} md={11} sm={11}>\r\n            <POPrintComponent\r\n              generatedBarcode={generatedBarcode}\r\n              routeList={routeList}\r\n              selectedPO={selectedPO}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PO\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js",["250","251","252","253","254"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js",["255"],"import React, { useEffect } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { Row } from \"react-bootstrap\"\r\n\r\nfunction BarcodeScanResult({ barcodeCopy }) {\r\n  const barcodeScanResult = useSelector((state) => state.barcodeScanResult)\r\n\r\n  useEffect(() => {\r\n    console.log(barcodeScanResult)\r\n    console.log(barcodeScanResult.length)\r\n  }, [barcodeScanResult])\r\n  return (\r\n    <div className=\"barcode-scan-result\">\r\n      <h4 className=\"form-title\" style={{ textAlign: \"center\" }}>\r\n        Result\r\n      </h4>\r\n      <br />\r\n      <br />\r\n\r\n      {barcodeScanResult.length && barcodeCopy.barcode ? (\r\n        <div className=\"details-result\">\r\n          <p>\r\n            <span>{barcodeCopy.barcode}</span>\r\n          </p>\r\n          <h2>\r\n            PO Number:<span>{barcodeCopy.barcode.split(\"-\")[1]}</span>\r\n          </h2>\r\n          <h2>\r\n            STYLE:<span>{barcodeCopy.barcode.split(\"-\")[0]}</span>\r\n          </h2>\r\n          <h2>\r\n            COLOR:\r\n            <span>{barcodeCopy.barcode.split(\"-\")[2].split(\"$\")[0]}</span>\r\n          </h2>\r\n          <h2>\r\n            SIZE:\r\n            <span>{barcodeCopy.barcode.split(\"-\")[2].split(\"$\")[1]}</span>\r\n          </h2>\r\n          <h2>\r\n            SACK #:<span>{barcodeCopy.barcode.split(\"-\")[3]}</span>\r\n          </h2>\r\n          <h2>\r\n            CURRENT PROCESS:<span>{barcodeScanResult.split(\",\")[0]}</span>\r\n          </h2>\r\n          <h2>\r\n            NEXT PROCESS:<span>{barcodeScanResult.split(\",\")[1]}</span>\r\n          </h2>\r\n        </div>\r\n      ) : (\r\n        <p>No Result</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BarcodeScanResult\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js",["256","257","258"],"import React from \"react\"\r\nimport { Col, Container, Table, Row } from \"react-bootstrap\"\r\nimport QRCode from \"qrcode.react\"\r\n\r\nfunction POTable({ selectedPO, routeList, generatedBarcode }) {\r\n  return (\r\n    <div className=\"po-container-print-div\">\r\n      {selectedPO ? (\r\n        selectedPO.length ? (\r\n          <>\r\n            <div className=\"po-container-print\" id=\"printForm\">\r\n              <p className=\"print-form-title\">\r\n                GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET\r\n              </p>\r\n              <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                  <ul>\r\n                    <li>\r\n                      CUSTOMER: <span>{selectedPO[0].detail_customer}</span>\r\n                    </li>\r\n                    <li>\r\n                      PO #: <span>{selectedPO[0].po_number}</span>\r\n                    </li>\r\n                    <li>\r\n                      STYLE: <span>{selectedPO[0].detail_style.style}</span>{\" \"}\r\n                    </li>\r\n                    <li>\r\n                      DESCRIPTION: <span>{selectedPO[0].description}</span>\r\n                    </li>\r\n                    <li>\r\n                      COLOR: <span>{selectedPO[0].color}</span>\r\n                    </li>\r\n                    <li>\r\n                      TOTAL Q'TY: <span>{selectedPO[0].total}</span>\r\n                    </li>\r\n                    <li>\r\n                      Q'TY/SACK:\r\n                      <span>\r\n                        {generatedBarcode.split(\"-\")[5] ==\r\n                        selectedPO[0].total_sack\r\n                          ? selectedPO[0].qty_sack -\r\n                            (selectedPO[0].qty_sack * selectedPO[0].total_sack -\r\n                              selectedPO[0].total)\r\n                          : selectedPO[0].qty_sack}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      SHIPDATE: <span>{selectedPO[0].ship_date}</span>\r\n                    </li>\r\n                  </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                  <div className=\"print-sack-number\">\r\n                    <p>SACK NO.</p>\r\n                    <p>\r\n                      {\" \"}\r\n                      {generatedBarcode.split(\"-\")[5]} /{\" \"}\r\n                      {selectedPO[0].total_sack}\r\n                    </p>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg={11}>\r\n                  <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {routeList &&\r\n                        routeList.map((route, index) => {\r\n                          if (routeList.length !== index + 1) {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{route.toUpperCase()}</td>\r\n                                <td></td>\r\n                                <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                <td></td>\r\n                              </tr>\r\n                            )\r\n                          }\r\n                        })}\r\n                    </tbody>\r\n                  </Table>\r\n                </Col>\r\n              </Row>\r\n\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  marginLeft: \"35px\",\r\n                  marginRight: \"35px\",\r\n                }}\r\n              >\r\n                {/* <div className=\"print-barcode\">\r\n                                <ReactBarcode value={generatedBarcode} width={0.4} height={55} margin={0} fontSize={6} />\r\n                            </div> */}\r\n                <QRCode\r\n                  value={generatedBarcode}\r\n                  style={{\r\n                    display: \"block\",\r\n                    marginRight: \"30px\",\r\n                    width: \"4vw\",\r\n                    height: \"7vh\",\r\n                  }}\r\n                />\r\n                <p style={{ fontSize: \"10px\" }}>{generatedBarcode}</p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>loading..</p>\r\n        )\r\n      ) : (\r\n        <p style={{ marginTop: \"48%\", textAlign: \"center\" }}>\r\n          SELECT PO TO GENERATE ROUTE SHEET\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default POTable\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js",["259","260","261","262"],"import React, { useEffect, useState } from \"react\"\r\nimport { Table, Col, Row, Button, Form, Card } from \"react-bootstrap\"\r\nimport { fetchPurchase, addPurchase } from \"../../../../api\"\r\nimport Moment from \"react-moment\"\r\nimport \"moment-timezone\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as BiIcons from \"react-icons/bi\"\r\n\r\nimport { useAlert } from \"react-alert\"\r\nimport axios from \"axios\"\r\n\r\nfunction POPrintComponent({\r\n  sidebar,\r\n  setSidebar,\r\n  setSearchInput,\r\n  setSelectedPO,\r\n  details,\r\n  selectedPO,\r\n  searchResult,\r\n  handlePrint,\r\n  setGeneratedBarcode,\r\n  generatedBarcode,\r\n  dummyState,\r\n  setDummyState,\r\n}) {\r\n  const alert = useAlert()\r\n\r\n  const handleChange = (e) => {\r\n    setSearchInput(e.target.value.toUpperCase())\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleProcess = async () => {\r\n    if (!sidebar) {\r\n      const res = await addPurchase(purchaseToSubmit)\r\n\r\n      if (res !== null) {\r\n        alert.show(\r\n          <div className=\"alert-suc\">\r\n            <FaIcons.FaCheck /> {generatedBarcode} is on-process!{\" \"}\r\n          </div>\r\n        )\r\n      } else {\r\n        alert.show(\r\n          <div className=\"alert-err\">\r\n            <BiIcons.BiError /> Unable to process {generatedBarcode}!\r\n          </div>\r\n        )\r\n      }\r\n      //update\r\n\r\n      if (\r\n        generatedBarcode.split(\"-\")[5].toString() ===\r\n        selectedPO[0].total_sack.toString()\r\n      ) {\r\n        await axios\r\n          .post(\r\n            window.location.protocol +\r\n              \"//\" +\r\n              window.location.hostname +\r\n              \":8000/api/detail-update/\" +\r\n              selectedPO[0].id,\r\n            { active: \"false\" },\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"token \" +\r\n                  JSON.parse(window.localStorage.getItem(\"credentials\")).token,\r\n              },\r\n            }\r\n          )\r\n          .then(() => {\r\n            setDummyState(!dummyState)\r\n            handlePrint()\r\n            setSelectedPO(null)\r\n          })\r\n          .catch((err) => console.log(err))\r\n        console.log(\"request finished\")\r\n      } else {\r\n        setDummyState(!dummyState)\r\n        handlePrint()\r\n        setSelectedPO(null)\r\n      }\r\n    } else {\r\n      alert.show(\r\n        <div className=\"alert-err\">\r\n          <BiIcons.BiError /> Please close the sidebar before printing!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const [purchaseResult, setpurchaseResult] = useState(null)\r\n  const [filteredPurchaseResult, setfilteredPurchaseResult] = useState(null)\r\n  const [purchaseActive, setPurchaseActive] = useState([])\r\n\r\n  const [purchaseToSubmit, setpurchaseToSubmit] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setDummyState(!dummyState)\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    let flag = true\r\n    if (flag) {\r\n      const purchaseResult = await fetchPurchase()\r\n\r\n      setpurchaseResult(purchaseResult.data)\r\n    }\r\n    return () => {\r\n      flag = false\r\n    }\r\n  }, [dummyState])\r\n\r\n  useEffect(() => {\r\n    if (purchaseResult && searchResult) {\r\n      if (searchResult.length) {\r\n        let purchaseResActive = []\r\n        for (let j = 0; j != searchResult.length; j++) {\r\n          let ctr = 0\r\n          for (let i = 0; i != purchaseResult.length; i++) {\r\n            if (\r\n              purchaseResult[i].po_number.po_number ===\r\n                searchResult[j].po_number &&\r\n              purchaseResult[i].po_number.color === searchResult[j].color &&\r\n              purchaseResult[i].po_number.size === searchResult[j].size &&\r\n              purchaseResult[i].po_number.detail_style.style ===\r\n                searchResult[j].detail_style.style\r\n            ) {\r\n              ctr++\r\n            }\r\n          }\r\n          purchaseResActive.push(ctr)\r\n        }\r\n\r\n        setPurchaseActive(purchaseResActive)\r\n      }\r\n    }\r\n  }, [purchaseResult, searchResult])\r\n\r\n  useEffect(() => {\r\n    if (filteredPurchaseResult && selectedPO) {\r\n      if (selectedPO.length) {\r\n        setpurchaseToSubmit({\r\n          po_number: selectedPO[0].id,\r\n          barcode: generatedBarcode,\r\n          sack_number: filteredPurchaseResult.length + 1,\r\n        })\r\n      }\r\n    }\r\n  }, [generatedBarcode, selectedPO, filteredPurchaseResult])\r\n\r\n  const handleSelect = (po, color, size, style, index) => {\r\n    let selectedDetails = details.filter((det) => {\r\n      return det.po_number === po && det.color === color && det.size === size\r\n    })\r\n    // const purchaseResult = await fetchPurchase()\r\n    let filterPurchase = purchaseResult.filter((pr) => {\r\n      return (\r\n        pr.po_number.po_number === po &&\r\n        pr.po_number.color === color &&\r\n        pr.po_number.size === size &&\r\n        pr.po_number.detail_style.style === style\r\n      )\r\n    })\r\n    setfilteredPurchaseResult(filterPurchase)\r\n    let qtyS =\r\n      selectedDetails[0].total_sack === filterPurchase.length + 1\r\n        ? selectedDetails[0].qty_sack -\r\n          (selectedDetails[0].qty_sack * selectedDetails[0].total_sack -\r\n            selectedDetails[0].total)\r\n        : selectedDetails[0].qty_sack\r\n    let genCode =\r\n      selectedDetails[0].detail_style.style +\r\n      \"-\" +\r\n      selectedDetails[0].po_number +\r\n      \"-\" +\r\n      selectedDetails[0].color +\r\n      \"$\" +\r\n      selectedDetails[0].size +\r\n      \"-\" +\r\n      selectedDetails[0].total +\r\n      \"-\" +\r\n      qtyS +\r\n      \"-\" +\r\n      (filterPurchase.length + 1)\r\n    setGeneratedBarcode(genCode)\r\n    setSelectedPO(selectedDetails)\r\n  }\r\n\r\n  return (\r\n    <div className=\"po-container-form\">\r\n      <div style={{ marginBottom: \"1vh\" }}>\r\n        <h5 className=\"form-title\">PURCHASE ORDERS</h5>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label style={{ color: \"white\" }}>SEARCH:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            className=\"isr-form\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <div className=\"po-container-table\">\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          style={{ backgroundColor: \"white\", borderRadius: \"10px\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>DATE CREATED</th>\r\n              <th>PO</th>\r\n              <th>COLOR</th>\r\n              <th>SIZE</th>\r\n              <th>TOTAL SACK</th>\r\n              <th>PENDING</th>\r\n              <th>ACTIVE</th>\r\n              <th>SELECT</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {searchResult && purchaseActive.length && searchResult.length ? (\r\n              searchResult.map((det, index) => {\r\n                return (\r\n                  <tr style={{ fontSize: \"0.8em\" }} key={index}>\r\n                    <td>\r\n                      <Moment format=\"YYYY-MM-DD hh:mm:ss\">\r\n                        {det.create_on}\r\n                      </Moment>\r\n                    </td>\r\n                    <td>{det.po_number}</td>\r\n                    <td>{det.color}</td>\r\n                    <td>{det.size}</td>\r\n                    <td>{det.total_sack}</td>\r\n                    <td>{det.total_sack - purchaseActive[index]}</td>\r\n                    <td>{purchaseActive[index]}</td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() =>\r\n                          handleSelect(\r\n                            det.po_number,\r\n                            det.color,\r\n                            det.size,\r\n                            det.detail_style.style,\r\n                            index\r\n                          )\r\n                        }\r\n                      >\r\n                        SELECT\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"8\" style={{ textAlign: \"center\" }}>\r\n                  No Result\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <br />\r\n      <div className=\"po-card\">\r\n        <Card.Body as={Row}>\r\n          {selectedPO && purchaseToSubmit ? (\r\n            <>\r\n              <Col sm={9}>\r\n                <Card.Title style={{ fontSize: \"35px\" }}>\r\n                  {selectedPO[0].po_number}\r\n                </Card.Title>\r\n                <Card.Text style={{ fontStyle: \"italic\" }}>\r\n                  CUSTOMER: {selectedPO[0].detail_customer}\r\n                </Card.Text>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  style={{ padding: \"20px 20px 20px 20px\" }}\r\n                  onClick={handleProcess}\r\n                >\r\n                  PROCESS 1 SACK\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <p style={{ margin: \"21px\" }}>Select PO</p>\r\n          )}\r\n        </Card.Body>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default POPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js",["263"],"D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js",["264"],"export default (auth = [], action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_SESSION':\r\n            window.localStorage.setItem(\"credentials\",JSON.stringify(action.payload))\r\n            return action.payload\r\n        case 'LOGOUT':\r\n             window.localStorage.clear();\r\n            return action.payload\r\n        case 'AUTH_ERROR':\r\n            window.localStorage.clear();\r\n            return action.error\r\n        default:\r\n            return auth\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js",["284","285","286","287","288","289"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js",["290","291","292","293","294","295","296","297","298","299"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashCard.js",["300","301"],"import React from \"react\"\r\nimport { Row, Col } from \"react-bootstrap\"\r\n\r\nfunction DashCard({ stylclass, icon, val, caption }) {\r\n  return (\r\n    <div className={stylclass}>\r\n      <div style={{ marginTop: \"10px\" }}>{icon}</div>\r\n\r\n      <div>\r\n        <span id=\"val-card\">{val}</span>\r\n        <span id=\"lbl-card\">{caption}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashCard\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashPie.js",["302","303"],"import React, { useEffect, useState } from \"react\"\r\nimport { Col, Row, Button } from \"react-bootstrap\"\r\nimport { Pie } from \"react-chartjs-2\"\r\n\r\nfunction DashPie({ customerValues }) {\r\n  const [colorList, setColorList] = useState([])\r\n  const [randomColor, setRandomColor] = useState(false)\r\n  useEffect(() => {\r\n    console.log(customerValues.values.length)\r\n    if (customerValues.values.length) {\r\n      let temp = getRandomColor(customerValues.values.length)\r\n      setColorList(temp)\r\n      console.log(temp)\r\n    }\r\n  }, [randomColor, customerValues])\r\n\r\n  useEffect(() => {\r\n    console.log(colorList)\r\n  }, [colorList])\r\n  const data = {\r\n    labels: customerValues.customers,\r\n    datasets: [\r\n      {\r\n        label: \"PIE\",\r\n        data: customerValues.values,\r\n        backgroundColor: colorList,\r\n      },\r\n    ],\r\n  }\r\n\r\n  let optionsPie = {\r\n    legend: {\r\n      display: true,\r\n      position: \"left\",\r\n      labels: {\r\n        fontColor: \"black\",\r\n      },\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          var dataset = data.datasets[tooltipItem.datasetIndex]\r\n          var meta = dataset._meta[Object.keys(dataset._meta)[0]]\r\n          var total = meta.total\r\n          var currentValue = dataset.data[tooltipItem.index]\r\n          var percentage = parseFloat(((currentValue / total) * 100).toFixed(1))\r\n          return currentValue + \" (\" + percentage + \"%)\"\r\n        },\r\n        title: function (tooltipItem, data) {\r\n          return data.labels[tooltipItem[0].index]\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  const getRandomColor = (n) => {\r\n    let letters = \"0123456789ABCDEF\"\r\n    let color = \"#\"\r\n    let colorArray = []\r\n    for (let j = 0; j != n; j++) {\r\n      for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)]\r\n      }\r\n      colorArray.push(color)\r\n      color = \"#\"\r\n    }\r\n\r\n    return colorArray\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"dash-pie-div\"\r\n      onClick={() => {\r\n        setRandomColor(!randomColor)\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col sm={1}></Col>\r\n        <Col sm={9}>\r\n          {customerValues.values.length ? (\r\n            <div className=\"pie-container\">\r\n              <Pie data={data} options={optionsPie} responsive />\r\n            </div>\r\n          ) : (\r\n            <p>No Records</p>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashPie\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTodayTable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardStatusMonitoring.js",["304","305","306","307","308"],"D:\\PROJECTS\\frontgold\\src\\reducers\\StatusTableReducer.js",["309"],"export default (statusTable = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_STATUS_TABLE\":\r\n      return action.payload\r\n    default:\r\n      return statusTable\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusListReducer.js",["310"],"export default (statusList = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_STATUS_LIST\":\r\n      return action.payload\r\n    default:\r\n      return statusList\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\RouteTableReducer.js",["311"],"export default (routeTable = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ROUTE_TABLE\":\r\n      return action.payload\r\n    default:\r\n      return routeTable\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\StatusActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashRoutes.js",["312","313"],"import React, { useEffect, useState } from \"react\"\r\nimport { MDBDataTable } from \"mdbreact\"\r\nimport { getRouteTable } from \"../../../actions/StatusActions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nfunction DashRoutes() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [routeTabes, setrouteTabes] = useState([])\r\n  const routeTable = useSelector((state) => state.routeTable)\r\n  const [keyList, setKeyList] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(getRouteTable())\r\n  }, [])\r\n  useEffect(() => {\r\n    setrouteTabes(routeTable)\r\n  }, [routeTable])\r\n\r\n  useEffect(() => {\r\n    console.log(routeTabes)\r\n    if (routeTabes.length) {\r\n      let keylist = []\r\n\r\n      Object.keys(routeTabes[0]).forEach((rt) => {\r\n        keylist.push({\r\n          label: rt,\r\n          field: rt,\r\n          sort: \"asc\",\r\n        })\r\n      })\r\n\r\n      setKeyList(keylist)\r\n\r\n      console.log(keylist)\r\n    }\r\n  }, [routeTabes])\r\n  const data = {\r\n    columns: keyList,\r\n    rows: routeTabes,\r\n  }\r\n  return (\r\n    <>\r\n      <h4>Routing Info</h4>\r\n      <div className=\"route-wrapper\">\r\n        <div className=\"route-container\">\r\n          <MDBDataTable\r\n            entries={8}\r\n            striped\r\n            bordered\r\n            small\r\n            entriesOptions={[5, 8, 10, 15]}\r\n            striped\r\n            hover\r\n            className=\"data-style-route\"\r\n            data={data}\r\n            sortable={true}\r\n            // exportToCSV\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashRoutes\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\users\\RouteInfo.js",["314","315"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashShipment.js",["316","317"],"import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getShipmentTable } from \"../../../actions/StatusActions\"\r\nimport { MDBDataTable } from \"mdbreact\"\r\nfunction DashShipment() {\r\n  const dispatch = useDispatch()\r\n  const shipmentTable = useSelector((state) => state.shipmentTable)\r\n  const [shipmentData, setShipmentData] = useState([])\r\n  useEffect(() => {\r\n    dispatch(getShipmentTable())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(shipmentTable)\r\n    if (shipmentTable && shipmentTable.length) {\r\n      const shipm = shipmentTable.map((i) => {\r\n        return {\r\n          barcode: i.barcode,\r\n          status: i.active ? \"active\" : \"not active\",\r\n          Days_left: i.Days_left,\r\n        }\r\n      })\r\n\r\n      setShipmentData(shipm)\r\n    }\r\n  }, [shipmentTable])\r\n\r\n  useEffect(() => {\r\n    console.log(shipmentData)\r\n  }, [shipmentData])\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Order\",\r\n        field: \"barcode\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        field: \"status\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Days Left\",\r\n        field: \"Days_left\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: shipmentData,\r\n  }\r\n  return (\r\n    <div>\r\n      <h4>Shipment</h4>\r\n      <div className=\"route-wrapper\">\r\n        <div className=\"route-container\">\r\n          <MDBDataTable\r\n            entries={8}\r\n            striped\r\n            bordered\r\n            small\r\n            entriesOptions={[5, 8, 10, 15]}\r\n            striped\r\n            hover\r\n            className=\"data-style-route\"\r\n            data={data}\r\n            sortable={true}\r\n            // exportToCSV\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashShipment\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\ShipmentReducer.js",["318"],{"ruleId":"319","severity":1,"message":"320","line":16,"column":3,"nodeType":"321","messageId":"322","endLine":16,"endColumn":12},{"ruleId":"319","severity":1,"message":"323","line":17,"column":3,"nodeType":"321","messageId":"322","endLine":17,"endColumn":8},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"319","severity":1,"message":"328","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":16},{"ruleId":"319","severity":1,"message":"329","line":12,"column":10,"nodeType":"321","messageId":"322","endLine":12,"endColumn":17},{"ruleId":"319","severity":1,"message":"330","line":13,"column":10,"nodeType":"321","messageId":"322","endLine":13,"endColumn":18},{"ruleId":"319","severity":1,"message":"331","line":13,"column":20,"nodeType":"321","messageId":"322","endLine":13,"endColumn":31},{"ruleId":"319","severity":1,"message":"332","line":16,"column":18,"nodeType":"321","messageId":"322","endLine":16,"endColumn":27},{"ruleId":"319","severity":1,"message":"333","line":8,"column":10,"nodeType":"321","messageId":"322","endLine":8,"endColumn":29},{"ruleId":"334","severity":1,"message":"335","line":64,"column":52,"nodeType":"336","messageId":"337","endLine":64,"endColumn":54},{"ruleId":"319","severity":1,"message":"338","line":3,"column":13,"nodeType":"321","messageId":"322","endLine":3,"endColumn":20},{"ruleId":"319","severity":1,"message":"339","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":12},{"ruleId":"319","severity":1,"message":"340","line":10,"column":8,"nodeType":"321","messageId":"322","endLine":10,"endColumn":14},{"ruleId":"319","severity":1,"message":"341","line":14,"column":8,"nodeType":"321","messageId":"322","endLine":14,"endColumn":18},{"ruleId":"319","severity":1,"message":"342","line":13,"column":3,"nodeType":"321","messageId":"322","endLine":13,"endColumn":16},{"ruleId":"319","severity":1,"message":"343","line":38,"column":10,"nodeType":"321","messageId":"322","endLine":38,"endColumn":20},{"ruleId":"319","severity":1,"message":"344","line":38,"column":22,"nodeType":"321","messageId":"322","endLine":38,"endColumn":35},{"ruleId":"345","severity":1,"message":"346","line":60,"column":6,"nodeType":"347","endLine":60,"endColumn":8,"suggestions":"348"},{"ruleId":"345","severity":1,"message":"349","line":122,"column":6,"nodeType":"347","endLine":122,"endColumn":19,"suggestions":"350"},{"ruleId":"319","severity":1,"message":"351","line":1,"column":27,"nodeType":"321","messageId":"322","endLine":1,"endColumn":36},{"ruleId":"334","severity":1,"message":"335","line":28,"column":39,"nodeType":"336","messageId":"337","endLine":28,"endColumn":41},{"ruleId":"319","severity":1,"message":"352","line":2,"column":16,"nodeType":"321","messageId":"322","endLine":2,"endColumn":25},{"ruleId":"319","severity":1,"message":"328","line":2,"column":20,"nodeType":"321","messageId":"322","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"353","line":52,"column":6,"nodeType":"347","endLine":52,"endColumn":31,"suggestions":"354"},{"ruleId":"319","severity":1,"message":"355","line":54,"column":9,"nodeType":"321","messageId":"322","endLine":54,"endColumn":20},{"ruleId":"345","severity":1,"message":"356","line":32,"column":6,"nodeType":"347","endLine":32,"endColumn":12,"suggestions":"357"},{"ruleId":"345","severity":1,"message":"346","line":36,"column":6,"nodeType":"347","endLine":36,"endColumn":8,"suggestions":"358"},{"ruleId":"319","severity":1,"message":"359","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":31,"column":8,"nodeType":"347","endLine":31,"endColumn":10,"suggestions":"360"},{"ruleId":"345","severity":1,"message":"361","line":57,"column":8,"nodeType":"347","endLine":57,"endColumn":17,"suggestions":"362"},{"ruleId":"334","severity":1,"message":"335","line":99,"column":68,"nodeType":"336","messageId":"337","endLine":99,"endColumn":70},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":10,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":10,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":18,"endColumn":2},{"ruleId":"345","severity":1,"message":"346","line":32,"column":6,"nodeType":"347","endLine":32,"endColumn":8,"suggestions":"366"},{"ruleId":"319","severity":1,"message":"367","line":3,"column":3,"nodeType":"321","messageId":"322","endLine":3,"endColumn":8},{"ruleId":"319","severity":1,"message":"328","line":6,"column":3,"nodeType":"321","messageId":"322","endLine":6,"endColumn":9},{"ruleId":"319","severity":1,"message":"368","line":7,"column":3,"nodeType":"321","messageId":"322","endLine":7,"endColumn":7},{"ruleId":"319","severity":1,"message":"369","line":8,"column":3,"nodeType":"321","messageId":"322","endLine":8,"endColumn":7},{"ruleId":"319","severity":1,"message":"370","line":9,"column":3,"nodeType":"321","messageId":"322","endLine":9,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":31,"column":6,"nodeType":"347","endLine":31,"endColumn":18,"suggestions":"371"},{"ruleId":"345","severity":1,"message":"372","line":62,"column":6,"nodeType":"347","endLine":62,"endColumn":19,"suggestions":"373"},{"ruleId":"319","severity":1,"message":"351","line":1,"column":17,"nodeType":"321","messageId":"322","endLine":1,"endColumn":26},{"ruleId":"319","severity":1,"message":"374","line":2,"column":31,"nodeType":"321","messageId":"322","endLine":2,"endColumn":36},{"ruleId":"319","severity":1,"message":"375","line":2,"column":38,"nodeType":"321","messageId":"322","endLine":2,"endColumn":41},{"ruleId":"319","severity":1,"message":"376","line":2,"column":43,"nodeType":"321","messageId":"322","endLine":2,"endColumn":46},{"ruleId":"377","severity":1,"message":"378","line":55,"column":55,"nodeType":"379","messageId":"380","endLine":55,"endColumn":56},{"ruleId":"319","severity":1,"message":"375","line":3,"column":10,"nodeType":"321","messageId":"322","endLine":3,"endColumn":13},{"ruleId":"319","severity":1,"message":"352","line":2,"column":15,"nodeType":"321","messageId":"322","endLine":2,"endColumn":24},{"ruleId":"381","severity":1,"message":"382","line":39,"column":57,"nodeType":"379","messageId":"383","endLine":39,"endColumn":59},{"ruleId":"334","severity":1,"message":"335","line":76,"column":54,"nodeType":"336","messageId":"337","endLine":76,"endColumn":56},{"ruleId":"345","severity":1,"message":"384","line":104,"column":6,"nodeType":"347","endLine":104,"endColumn":8,"suggestions":"385"},{"ruleId":"345","severity":1,"message":"386","line":106,"column":13,"nodeType":"336","endLine":116,"endColumn":4},{"ruleId":"381","severity":1,"message":"387","line":122,"column":27,"nodeType":"379","messageId":"383","endLine":122,"endColumn":29},{"ruleId":"381","severity":1,"message":"387","line":124,"column":29,"nodeType":"379","messageId":"383","endLine":124,"endColumn":31},{"ruleId":"345","severity":1,"message":"388","line":43,"column":6,"nodeType":"347","endLine":43,"endColumn":12,"suggestions":"389"},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":15,"endColumn":2},{"ruleId":"319","severity":1,"message":"352","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":19},{"ruleId":"319","severity":1,"message":"367","line":2,"column":21,"nodeType":"321","messageId":"322","endLine":2,"endColumn":26},{"ruleId":"319","severity":1,"message":"368","line":2,"column":28,"nodeType":"321","messageId":"322","endLine":2,"endColumn":32},{"ruleId":"319","severity":1,"message":"328","line":2,"column":34,"nodeType":"321","messageId":"322","endLine":2,"endColumn":40},{"ruleId":"319","severity":1,"message":"390","line":2,"column":42,"nodeType":"321","messageId":"322","endLine":2,"endColumn":47},{"ruleId":"319","severity":1,"message":"391","line":5,"column":13,"nodeType":"321","messageId":"322","endLine":5,"endColumn":20},{"ruleId":"319","severity":1,"message":"392","line":17,"column":9,"nodeType":"321","messageId":"322","endLine":17,"endColumn":20},{"ruleId":"319","severity":1,"message":"393","line":19,"column":10,"nodeType":"321","messageId":"322","endLine":19,"endColumn":21},{"ruleId":"319","severity":1,"message":"394","line":19,"column":23,"nodeType":"321","messageId":"322","endLine":19,"endColumn":37},{"ruleId":"319","severity":1,"message":"395","line":20,"column":10,"nodeType":"321","messageId":"322","endLine":20,"endColumn":22},{"ruleId":"319","severity":1,"message":"396","line":20,"column":24,"nodeType":"321","messageId":"322","endLine":20,"endColumn":39},{"ruleId":"345","severity":1,"message":"346","line":73,"column":6,"nodeType":"347","endLine":73,"endColumn":8,"suggestions":"397"},{"ruleId":"319","severity":1,"message":"398","line":125,"column":9,"nodeType":"321","messageId":"322","endLine":125,"endColumn":25},{"ruleId":"319","severity":1,"message":"399","line":132,"column":9,"nodeType":"321","messageId":"322","endLine":132,"endColumn":21},{"ruleId":"319","severity":1,"message":"400","line":146,"column":9,"nodeType":"321","messageId":"322","endLine":146,"endColumn":19},{"ruleId":"381","severity":1,"message":"387","line":167,"column":27,"nodeType":"379","messageId":"383","endLine":167,"endColumn":29},{"ruleId":"381","severity":1,"message":"387","line":168,"column":29,"nodeType":"379","messageId":"383","endLine":168,"endColumn":31},{"ruleId":"345","severity":1,"message":"401","line":179,"column":6,"nodeType":"347","endLine":179,"endColumn":12,"suggestions":"402"},{"ruleId":"403","severity":1,"message":"404","line":413,"column":13,"nodeType":"405","endLine":413,"endColumn":20},{"ruleId":"319","severity":1,"message":"328","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":16},{"ruleId":"319","severity":1,"message":"367","line":2,"column":18,"nodeType":"321","messageId":"322","endLine":2,"endColumn":23},{"ruleId":"319","severity":1,"message":"368","line":2,"column":25,"nodeType":"321","messageId":"322","endLine":2,"endColumn":29},{"ruleId":"345","severity":1,"message":"346","line":17,"column":6,"nodeType":"347","endLine":17,"endColumn":8,"suggestions":"406"},{"ruleId":"345","severity":1,"message":"407","line":81,"column":6,"nodeType":"347","endLine":81,"endColumn":25,"suggestions":"408"},{"ruleId":"403","severity":1,"message":"404","line":175,"column":13,"nodeType":"405","endLine":175,"endColumn":20},{"ruleId":"319","severity":1,"message":"367","line":2,"column":18,"nodeType":"321","messageId":"322","endLine":2,"endColumn":23},{"ruleId":"319","severity":1,"message":"368","line":2,"column":25,"nodeType":"321","messageId":"322","endLine":2,"endColumn":29},{"ruleId":"319","severity":1,"message":"393","line":16,"column":10,"nodeType":"321","messageId":"322","endLine":16,"endColumn":21},{"ruleId":"319","severity":1,"message":"394","line":16,"column":23,"nodeType":"321","messageId":"322","endLine":16,"endColumn":37},{"ruleId":"319","severity":1,"message":"395","line":17,"column":10,"nodeType":"321","messageId":"322","endLine":17,"endColumn":22},{"ruleId":"319","severity":1,"message":"396","line":17,"column":24,"nodeType":"321","messageId":"322","endLine":17,"endColumn":39},{"ruleId":"381","severity":1,"message":"382","line":42,"column":26,"nodeType":"379","messageId":"383","endLine":42,"endColumn":28},{"ruleId":"345","severity":1,"message":"346","line":65,"column":6,"nodeType":"347","endLine":65,"endColumn":8,"suggestions":"409"},{"ruleId":"345","severity":1,"message":"410","line":121,"column":6,"nodeType":"347","endLine":121,"endColumn":15,"suggestions":"411"},{"ruleId":"403","severity":1,"message":"404","line":212,"column":13,"nodeType":"405","endLine":212,"endColumn":20},{"ruleId":"319","severity":1,"message":"375","line":2,"column":10,"nodeType":"321","messageId":"322","endLine":2,"endColumn":13},{"ruleId":"319","severity":1,"message":"376","line":2,"column":15,"nodeType":"321","messageId":"322","endLine":2,"endColumn":18},{"ruleId":"319","severity":1,"message":"328","line":2,"column":20,"nodeType":"321","messageId":"322","endLine":2,"endColumn":26},{"ruleId":"381","severity":1,"message":"387","line":60,"column":23,"nodeType":"379","messageId":"383","endLine":60,"endColumn":25},{"ruleId":"319","severity":1,"message":"412","line":2,"column":29,"nodeType":"321","messageId":"322","endLine":2,"endColumn":36},{"ruleId":"319","severity":1,"message":"413","line":93,"column":9,"nodeType":"321","messageId":"322","endLine":93,"endColumn":18},{"ruleId":"319","severity":1,"message":"414","line":104,"column":7,"nodeType":"321","messageId":"322","endLine":104,"endColumn":19},{"ruleId":"381","severity":1,"message":"387","line":236,"column":27,"nodeType":"379","messageId":"383","endLine":236,"endColumn":29},{"ruleId":"334","severity":1,"message":"335","line":345,"column":46,"nodeType":"336","messageId":"337","endLine":345,"endColumn":48},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":8,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":8,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":8,"endColumn":2},{"ruleId":"345","severity":1,"message":"346","line":14,"column":6,"nodeType":"347","endLine":14,"endColumn":8,"suggestions":"415"},{"ruleId":"403","severity":1,"message":"404","line":52,"column":13,"nodeType":"405","endLine":52,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":15,"column":6,"nodeType":"347","endLine":15,"endColumn":8,"suggestions":"416"},{"ruleId":"403","severity":1,"message":"404","line":56,"column":13,"nodeType":"405","endLine":56,"endColumn":20},{"ruleId":"345","severity":1,"message":"346","line":11,"column":6,"nodeType":"347","endLine":11,"endColumn":8,"suggestions":"417"},{"ruleId":"403","severity":1,"message":"404","line":66,"column":13,"nodeType":"405","endLine":66,"endColumn":20},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":8,"endColumn":2},"no-unused-vars","'positions' is defined but never used.","Identifier","unusedVar","'types' is defined but never used.","no-native-reassign",["418"],"no-negated-in-lhs",["419"],"'Button' is defined but never used.","'isAdmin' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'setIsMain' is assigned a value but never used.","'GiConsoleController' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AiIcons' is defined but never used.","'Home' is defined but never used.","'SignIn' is defined but never used.","'DashRoutes' is defined but never used.","'getRouteTable' is defined but never used.","'totalTOTAL' is assigned a value but never used.","'setTotalTOTAL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["420"],"React Hook useEffect has a missing dependency: 'todayQuantityPerProcess'. Either include it or remove the dependency array.",["421"],"'useEffect' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'ISRItem'. Either include it or remove the dependency array. You can also do a functional update 'setISRItem(I => ...)' if you only need 'ISRItem' in the 'setISRItem' call.",["422"],"'handlePrint' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'detailStyle'. Either include it or remove the dependency array. You can also do a functional update 'setdetailStyle(d => ...)' if you only need 'detailStyle' in the 'setdetailStyle' call.",["423"],["424"],"'useBarcode' is defined but never used.",["425"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["426"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["427"],"'Table' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'ButtonGroup' is defined but never used.",["428"],"React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array.",["429"],"'Image' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has missing dependencies: 'dummyState' and 'setDummyState'. Either include them or remove the dependency array. If 'setDummyState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["430"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'setCached'. Either include it or remove the dependency array. If 'setCached' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["431"],"'Modal' is defined but never used.","'FaIcons' is defined but never used.","'handleClose' is assigned a value but never used.","'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'setSearchResult' is assigned a value but never used.",["432"],"'handleFormChange' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleEdit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedItems'. Either include it or remove the dependency array.",["433"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["434"],"React Hook useEffect has a missing dependency: 'isMain'. Either include it or remove the dependency array.",["435"],["436"],"React Hook useEffect has a missing dependency: 'handleDelete'. Either include it or remove the dependency array.",["437"],"'NavLink' is defined but never used.","'dataDough' is assigned a value but never used.","'optionsDough' is assigned a value but never used.",["438"],["439"],["440"],"no-global-assign","no-unsafe-negation",{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"441","fix":"449"},{"desc":"441","fix":"450"},{"desc":"451","fix":"452"},{"desc":"441","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"441","fix":"462"},{"desc":"463","fix":"464"},{"desc":"441","fix":"465"},{"desc":"466","fix":"467"},{"desc":"441","fix":"468"},{"desc":"469","fix":"470"},{"desc":"441","fix":"471"},{"desc":"441","fix":"472"},{"desc":"441","fix":"473"},"Update the dependencies array to be: [dispatch]",{"range":"474","text":"475"},"Update the dependencies array to be: [statusTable, todayQuantityPerProcess]",{"range":"476","text":"477"},"Update the dependencies array to be: [ISRItem, ISRItem.detail_customer]",{"range":"478","text":"479"},"Update the dependencies array to be: [detailStyle, item]",{"range":"480","text":"481"},{"range":"482","text":"475"},{"range":"483","text":"475"},"Update the dependencies array to be: [ISRItem, item]",{"range":"484","text":"485"},{"range":"486","text":"475"},"Update the dependencies array to be: [dispatch, dummyState]",{"range":"487","text":"488"},"Update the dependencies array to be: [details, searchInput]",{"range":"489","text":"490"},"Update the dependencies array to be: [dummyState, setDummyState]",{"range":"491","text":"492"},"Update the dependencies array to be: [auth, setCached]",{"range":"493","text":"494"},{"range":"495","text":"475"},"Update the dependencies array to be: [selectedItems, show]",{"range":"496","text":"497"},{"range":"498","text":"475"},"Update the dependencies array to be: [barcodeScanResult, isMain]",{"range":"499","text":"500"},{"range":"501","text":"475"},"Update the dependencies array to be: [details, handleDelete]",{"range":"502","text":"503"},{"range":"504","text":"475"},{"range":"505","text":"475"},{"range":"506","text":"475"},[1812,1814],"[dispatch]",[3469,3482],"[statusTable, todayQuantityPerProcess]",[1399,1424],"[ISRItem, ISRItem.detail_customer]",[1035,1041],"[detailStyle, item]",[1098,1100],[961,963],[1889,1898],"[ISRItem, item]",[873,875],[968,980],"[dispatch, dummyState]",[1818,1831],"[details, searchInput]",[2787,2789],"[dummyState, setDummyState]",[1271,1277],"[auth, setCached]",[1750,1752],[4804,4810],"[selectedItems, show]",[657,659],[2602,2621],"[barcodeScanResult, isMain]",[1909,1911],[3444,3453],"[details, handleDelete]",[494,496],[495,497],[462,464]]