[{"D:\\PROJECTS\\frontgold\\src\\index.js":"1","D:\\PROJECTS\\frontgold\\src\\App.js":"2","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js":"3","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js":"4","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js":"5","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js":"6","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js":"7","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js":"8","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js":"9","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js":"10","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js":"11","D:\\PROJECTS\\frontgold\\src\\api\\index.js":"12","D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js":"13","D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js":"14","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js":"15","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js":"16","D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js":"17","D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js":"18","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js":"19","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js":"20","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js":"21","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js":"22","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js":"23","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardChart.js":"24","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTable.js":"25","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Data.js":"26","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js":"27","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js":"28","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js":"29","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js":"30","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js":"31","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js":"32","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js":"33","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js":"34","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js":"35","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js":"36"},{"size":1649,"mtime":1611092794737,"results":"37","hashOfConfig":"38"},{"size":1419,"mtime":1611070442766,"results":"39","hashOfConfig":"38"},{"size":3290,"mtime":1611073224585,"results":"40","hashOfConfig":"38"},{"size":3156,"mtime":1610609959039,"results":"41","hashOfConfig":"38"},{"size":3173,"mtime":1611079107497,"results":"42","hashOfConfig":"38"},{"size":1503,"mtime":1611085118806,"results":"43","hashOfConfig":"38"},{"size":1338,"mtime":1611080771004,"results":"44","hashOfConfig":"38"},{"size":12152,"mtime":1611123891068,"results":"45","hashOfConfig":"38"},{"size":3115,"mtime":1610603096719,"results":"46","hashOfConfig":"38"},{"size":9571,"mtime":1610603135317,"results":"47","hashOfConfig":"38"},{"size":5295,"mtime":1610603191118,"results":"48","hashOfConfig":"38"},{"size":3459,"mtime":1610637900814,"results":"49","hashOfConfig":"38"},{"size":345,"mtime":1610031658091,"results":"50","hashOfConfig":"38"},{"size":259,"mtime":1609223499265,"results":"51","hashOfConfig":"38"},{"size":273,"mtime":1609608821128,"results":"52","hashOfConfig":"38"},{"size":604,"mtime":1609889429429,"results":"53","hashOfConfig":"38"},{"size":583,"mtime":1609888186476,"results":"54","hashOfConfig":"38"},{"size":560,"mtime":1611086016608,"results":"55","hashOfConfig":"38"},{"size":2439,"mtime":1611085432036,"results":"56","hashOfConfig":"38"},{"size":3958,"mtime":1611079126076,"results":"57","hashOfConfig":"38"},{"size":2997,"mtime":1611086237420,"results":"58","hashOfConfig":"38"},{"size":1453,"mtime":1611085371445,"results":"59","hashOfConfig":"38"},{"size":1036,"mtime":1611086342970,"results":"60","hashOfConfig":"38"},{"size":4339,"mtime":1609670281653,"results":"61","hashOfConfig":"38"},{"size":129,"mtime":1609670281653,"results":"62","hashOfConfig":"38"},{"size":3424,"mtime":1609670281653,"results":"63","hashOfConfig":"38"},{"size":4656,"mtime":1611087565384,"results":"64","hashOfConfig":"38"},{"size":9356,"mtime":1611088037202,"results":"65","hashOfConfig":"38"},{"size":3695,"mtime":1610637531544,"results":"66","hashOfConfig":"38"},{"size":479,"mtime":1610289807696,"results":"67","hashOfConfig":"38"},{"size":886,"mtime":1610639967552,"results":"68","hashOfConfig":"38"},{"size":156,"mtime":1610040170685,"results":"69","hashOfConfig":"38"},{"size":188,"mtime":1610040379997,"results":"70","hashOfConfig":"38"},{"size":10864,"mtime":1611101376182,"results":"71","hashOfConfig":"38"},{"size":4163,"mtime":1611101346276,"results":"72","hashOfConfig":"38"},{"size":4103,"mtime":1610657763791,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"17d0ngb",{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"77"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"77"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"77"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"77"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"77"},"D:\\PROJECTS\\frontgold\\src\\index.js",["171","172"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/RootReducer'\n\nimport { transitions, positions,types, Provider as AlertProvider } from 'react-alert'\n// import AlertTemplate from 'react-alert-template-basic'\n\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: 'top right',\n  timeout: 3000,\n  // offset: '70px',\n  // you can also just use 'scale'\n  \n  transition: transitions.SCALE,\n  containerStyle: {\n    zIndex: 80000\n  }\n}\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n    {/* <button onClick={close}>X</button> */}\n  </div>\n)\n\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nstore.subscribe(() => {\n  // const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n  // console.log(cachedCreds.token)\n  console.log(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <App />\n        </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["173","174"],"D:\\PROJECTS\\frontgold\\src\\App.js",["175","176","177","178"],"import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { logout } from \"./actions/AuthActions\";\nimport SignIn from \"./components/auth/SignIn\";\nimport MyNavbar from \"./components/layout/MyNavbar\";\nimport Pages from \"./components/pages/Pages\";\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nfunction App() {\n  const [sidebar, setSidebar] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [cached, setCached] = useState(null)\n  const dispatch = useDispatch()\n\n  const auth = useSelector(state => state.auth)\n  \n  const handleLogout = () => {\n    \n    dispatch(logout())\n    \n    setSidebar(false)\n  }\n\n  useEffect(() => {\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n    setCached(cacheCreds)\n  }, [auth])\n\n  if (cached) {\n    return (\n      <BrowserRouter>\n        <div className=\"nav\"> {/*onMouseLeave={() => { setSidebar(false)}}>*/}\n          <MyNavbar sidebar={sidebar} setSidebar={setSidebar} isAdmin={cached.is_Admin} setIsAdmin={setIsAdmin} handleLogout={handleLogout}/>\n        </div>\n        <Pages sidebar={sidebar} setSidebar={setSidebar} />\n       \n      </BrowserRouter>\n    )\n  } else {\n    //signin\n    return (\n      <SignIn setCached={setCached} cached={cached}/>\n    )\n  }\n\n}\n\nexport default App;\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js",["179"],"import React from 'react'\r\nimport { Link,withRouter } from 'react-router-dom'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport { SideBarDataAdmin,SideBarDataStaff } from './SideBarData'\r\nimport {IconContext} from 'react-icons'\r\nimport SideBarMenu from './SideBarMenu'\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport { GiConsoleController } from 'react-icons/gi'\r\n\r\nfunction MyNavbar({sidebar,setSidebar,isAdmin,setIsAdmin, handleLogout,history}) {\r\n\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    const handleClick=()=> {\r\n        \r\n        \r\n        handleLogout()\r\n        window.localStorage.clear();\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color:'white'}}>\r\n            <div className=\"navbar\">\r\n                <Link to=\"#\" className=\"menu-bars\">\r\n                    <FaIcons.FaBars onClick={showSidebar} />\r\n                </Link>\r\n                    \r\n                    {isAdmin ?\r\n                        <div onClick={()=>{setIsAdmin(!isAdmin)}}>\r\n                            <FaIcons.FaUserTie style={{ fontSize: \"30px\"}} /> \r\n                            <span style={{color:\"white\", marginRight: \"10px\" }}>Admin</span>\r\n                        </div>\r\n                        :\r\n                        <div onClick={()=>{setIsAdmin(!isAdmin)}}>\r\n                            <FaIcons.FaUserInjured style={{ fontSize: \"30px\"}} /> \r\n                            <span style={{color:\"white\", marginRight: \"10px\" }}>Staff</span>\r\n                        </div>\r\n                    }\r\n                        \r\n                \r\n            </div>\r\n            \r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items'>\r\n                    {/* <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose onClick={showSidebar}/>\r\n                        </Link>\r\n                    </li> */}\r\n                    {isAdmin ? SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                            <SideBarMenu item={item} key={index} showSidebar={showSidebar}/>\r\n                        )\r\n                    }): SideBarDataStaff.map((item, index) => {\r\n                        return (\r\n                            <SideBarMenu item={item} key={index} showSidebar={showSidebar}/>\r\n                        )\r\n                    })\r\n                                \r\n                    }\r\n                    {/* {SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                           <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    })} */}\r\n                        \r\n                        \r\n                        <li style={{ display: 'block', width: '100%' }} className=\"nav-text\" onClick={handleClick}>\r\n                                <RiIcons.RiLogoutBoxLine/>\r\n                                <span>LOGOUT</span>\r\n                            </li>\r\n                        \r\n                        \r\n                </ul>\r\n            </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(MyNavbar)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js",["180"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as IoIcons from 'react-icons/io'\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GiIcons from 'react-icons/gi';\r\nimport * as VscIcons from 'react-icons/vsc';\r\n\r\n\r\nexport const SideBarDataAdmin = [\r\n    {\r\n        title: 'Dashboard',\r\n        path: '/',\r\n        icon: <RiIcons.RiDashboardLine />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Items',\r\n        path: '#',\r\n        icon: <GiIcons.GiGloves />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Add Item',\r\n                path: '/items/add',\r\n                icon: <FaIcons.FaPlus />\r\n            },\r\n            {\r\n                title: 'View Items',\r\n                path: '/items/view',\r\n                icon: <IoIcons.IoIosPaper />\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Orders',\r\n        path: '#',\r\n        icon: <VscIcons.VscGear />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Create PO',\r\n                path: '/process/isr',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n           \r\n            {\r\n                title: 'View PO',\r\n                path: '/po/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            \r\n        ]\r\n    },\r\n    {\r\n        title: 'Barcodes',\r\n        path: '#',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Generate Barcodes',\r\n                path: '/process/po',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'View Barcodes',\r\n                path: '/barcodes/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'Barcode Scan',\r\n                path: '/process/scan',\r\n                icon: <FaIcons.FaBarcode />,\r\n                class_name: 'nav-text',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Admin Page',\r\n        path: '/adminpage',\r\n        icon: <FaIcons.FaUsers />,\r\n        class_name: 'nav-text',\r\n    },\r\n]\r\n\r\nexport const SideBarDataStaff = [\r\n    // {\r\n    //     title: 'Home',\r\n    //     path: '/',\r\n    //     icon: <AiIcons.AiFillHome />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n    {\r\n        title: 'Barcode Scan',\r\n        path: '/process/scan',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Routing Info',\r\n        path: '/info',\r\n        icon: <FaIcons.FaBook />,\r\n        class_name: 'nav-text',\r\n    },\r\n    // {\r\n    //     title: 'Logs',\r\n    //     path: '/logs',\r\n    //     icon: <FaIcons.FaBook />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n]","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js",["181","182","183"],"import React, { useEffect,useState } from 'react'\r\nimport { Route, Switch,withRouter } from \"react-router-dom\";\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport AddItem from './items/AddItem';\r\nimport PageUnavailable from './home/PageUnavailable'\r\nimport Home from './home/Home'\r\nimport BarcodeScan from './process/BarcodeScan.js/BarcodeScan';\r\nimport ISR from './process/ISR/ISR';\r\nimport PO from './process/PO/PO';\r\nimport SignIn from '../auth/SignIn';\r\nimport ViewItems from './items/ViewItems';\r\nimport ViewBarcodes from './process/PO/ViewBarcodes';\r\nimport ViewDetails from './process/ISR/ViewDetails';\r\n\r\nfunction Pages({ sidebar,history,setSidebar }) {\r\n    \r\n    const [cachedCreds, setCachedCreds] = useState(null)\r\n\r\n\r\n    history.listen((location, action) => {\r\n        // console.log(history)\r\n        const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCachedCreds(cacheCreds)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCachedCreds(cacheCreds)\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className={sidebar ? 'main-container-active' : 'main-container'}>\r\n            {cachedCreds ? \r\n                (\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={ cachedCreds.is_Admin ? Dashboard : (() => {\r\n                            window.location.href = window.location.protocol+'//'+window.location.host+'/process/scan';\r\n                        })} />\r\n                        <Route exact path=\"/items/add\" component={cachedCreds.is_Admin ? AddItem : PageUnavailable} />\r\n                        \r\n\r\n                        <Route exact path=\"/process/isr\" component={cachedCreds.is_Admin ? ISR : PageUnavailable} />\r\n                        {/* <Route exact path=\"/signin\" component={cachedCreds ? PageUnavailable :  SignIn } /> */}\r\n                        <Route exact path=\"/process/scan\" component={cachedCreds.is_Admin ? BarcodeScan : BarcodeScan} />\r\n                        \r\n                        <Route exact path=\"/process/po\" component={cachedCreds.is_Admin ? () => <PO setSidebar={setSidebar} sidebar={sidebar}/> : PageUnavailable} />\r\n\r\n                        <Route exact path=\"/items/view\" component={cachedCreds.is_Admin ? ViewItems : PageUnavailable } />\r\n                        <Route exact path=\"/po/view\" component={cachedCreds.is_Admin ? ViewDetails : PageUnavailable} />\r\n                        <Route exact path=\"/barcodes/view\" component={cachedCreds.is_Admin ? ViewBarcodes : PageUnavailable } />\r\n                        \r\n                        <Route exact path=\"/adminpage\" component={cachedCreds.is_Admin ? (() => {\r\n                            window.location.href = window.location.protocol + '//' + window.location.hostname +':8000'+'/admin';\r\n                            return <h4>Session Expired</h4>;\r\n                        }) : PageUnavailable} />\r\n                    </Switch>\r\n                )\r\n                :\r\n                <p>Loading..</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Pages)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js",["184","185","186","187"],"import React, { useState,useEffect } from 'react';\r\nimport { Container, Form, Row, Col } from 'react-bootstrap';\r\nimport DashboardChart from './DashboardChart';\r\nimport DashboardTable from './DashboardTable';\r\n\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { fetchDetails } from '../../../actions/DetailsActions';\r\n\r\nfunction Dashboard() {\r\n\tconst [chartOpen, setChartOpen] = useState(true);\r\n\tconst dispatch = useDispatch()\r\n\tconst details = useSelector(state => state.details)\r\n\r\n\tconst handleChange = (e) => {\r\n\t\t// console.log(e.target.value);\r\n\t\t// console.log(e.target.id);\r\n\t\tif (e.target.value === 'CHART') {\r\n\t\t\tsetChartOpen(true);\r\n\t\t} else {\r\n\t\t\tsetChartOpen(false);\r\n\t\t}\r\n\t};\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchDetails())\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tdetails.map((d) => {\r\n\t\t\tconsole.log(d)\r\n\t\t})\r\n\t}, [details])\r\n\r\n\treturn (\r\n\t\t<Container className=\"dashboard-container\">\r\n\t\t\t<Form.Group controlId=\"dashboard-view-as\">\r\n\t\t\t\t<div className=\"dashboard-view-wrapper\">\r\n\t\t\t\t\t<Form.Label>View as:</Form.Label>\r\n\t\t\t\t\t<div className=\"dashboard-select-wrapper\">\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tclassName=\"form-caps\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option>CHART</option>\r\n\t\t\t\t\t\t\t<option>TABLE</option>\r\n\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Form.Group>\r\n\t\t\t<div className=\"dashboard-components\">\r\n\t\t\t\t{chartOpen ? <DashboardChart /> : <DashboardTable />}\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js",["188"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js",["189","190"],"import React,{useEffect, useState} from 'react'\r\nimport { Col, Row,Button } from 'react-bootstrap'\r\nimport ISRForm from './ISRForm'\r\nimport ISRPrintComponent from './ISRPrintComponent'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction ISR() {\r\n    const [ISRItem, setISRItem] = useState({\r\n        detail_customer: '',\r\n        po_number:'',\r\n        total_sack: '',\r\n        description: '',\r\n        color: '',\r\n        size:'',\r\n        total: '',\r\n        qty_sack: '',\r\n        ship_date: '',\r\n        detail_style: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        let totalSack = document.getElementById('total_sack');\r\n        let poNum = document.getElementById('po_number');\r\n        let description = document.getElementById('description');\r\n        let color = document.getElementById('color');\r\n        let total = document.getElementById('total');\r\n        let qty_sack = document.getElementById('qty_sack');\r\n        let size = document.getElementById('size');\r\n        let ship_date = document.getElementById('ship_date');\r\n\r\n        totalSack.value = ''\r\n        poNum.value = ''\r\n        description.value = ''\r\n        color.value = ''\r\n        total.value = ''\r\n        qty_sack.value = ''\r\n        ship_date.value = ''\r\n        size.value = ''\r\n        \r\n        setISRItem({\r\n            ...ISRItem,\r\n            po_number:'',\r\n            total_sack: '',\r\n            description: '',\r\n            size:'',\r\n            color: '',\r\n            total: '',\r\n            qty_sack: '',\r\n            ship_date: '',\r\n        })\r\n        \r\n    }, [ISRItem.detail_customer])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n\t\thtml2canvas(input)\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 0, 0,width,height);\r\n\t\t\tpdf.save(\"download.pdf\");  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"isr-container\">\r\n            <Row style={{ margin: \"0 auto\" }}>\r\n                {/* <Col lg={1}></Col> */}\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-form\">\r\n                        <div style={{ marginBottom: \"15px\" }}>\r\n                            <h3 className=\"form-title\">ISR</h3> \r\n                        </div>\r\n                        <ISRForm\r\n                            ISRItem={ISRItem}\r\n                            setISRItem={setISRItem}\r\n                            handlePrint={handlePrint} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-print\" id=\"printForm\">\r\n                        <ISRPrintComponent\r\n                            ISRItem={ISRItem} />\r\n                    </div>\r\n                </Col>\r\n                {/* <Col lg={1}></Col> */}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ISR\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js",["191","192"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { addDetails } from '../../../../actions/DetailsActions'\r\nimport { getItems } from '../../../../actions/ItemActions'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport { useAlert } from 'react-alert'\r\n\r\nfunction ISRForm({ISRItem,setISRItem,handlePrint}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n    const item = useSelector(state => state.item)\r\n    const [detailStyle, setdetailStyle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            if (item.length) {\r\n                let customerList = []\r\n                for (let i = 0; i !== item.length; i++){\r\n                    customerList.push(item[i].customer)\r\n                }\r\n\r\n                let UniqueCustomerList = [...new Set(customerList)]\r\n\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    customerList: UniqueCustomerList\r\n                })\r\n            }\r\n        }\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setdetailStyle({\r\n            customerList:[],\r\n            styleDict: [],\r\n        })    \r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const res = await dispatch(addDetails(ISRItem))\r\n        console.log(res)\r\n        if (res) {\r\n            alert.show(\r\n                <div className=\"alert-suc\"><FaIcons.FaCheck/> The PO has been created!</div>\r\n            )\r\n        } else {\r\n            alert.show(\r\n                <div className=\"alert-err\"><BiIcons.BiError/> Unable to create PO!</div>\r\n            )\r\n        }\r\n        document.getElementById('form-isr').reset();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        let customer = document.getElementById(\"detail_customer\");\r\n        let style = document.getElementById('detail_style');\r\n        let poNum = document.getElementById('po_number');\r\n        let total = document.getElementById('total');\r\n        let qtySack = document.getElementById('qty_sack');\r\n        let totalSack = document.getElementById('total_sack');\r\n        \r\n\r\n        if (customer.value !== \"NONE\") {\r\n            let filteredItem = item.filter(i => i.customer === customer.value)\r\n            let styleDict = []\r\n            \r\n            for (let i = 0; i !== filteredItem.length; i++){\r\n                styleDict.push({\r\n                    id: filteredItem[i].id,\r\n                    style: filteredItem[i].style\r\n                })\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    styleDict: styleDict\r\n                })\r\n            }\r\n        } else {\r\n            setdetailStyle({\r\n                ...detailStyle,\r\n                styleDict: [],\r\n            })\r\n        }\r\n        \r\n       \r\n        if (style.value !== \"\" && poNum.value !== \"\" && customer.value !== \"NONE\") {\r\n            if (total.value !== \"\" && qtySack.value !== \"\") {\r\n                if (total.value%qtySack.value !== 0) {\r\n                    totalSack.value=(Math.trunc(total.value/qtySack.value))+1\r\n                } else {\r\n                    totalSack.value=(total.value/qtySack.value)\r\n                }\r\n            }\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n                total_sack: totalSack.value\r\n                // barcode: (style.options[style.selectedIndex].innerHTML +\"-\"+ poNum.value +\"-\"+ sackNum.value).toUpperCase()\r\n            })\r\n            \r\n        } else if (customer.value===\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                // barcode: '',\r\n                detail_customer: '',\r\n            })\r\n         }else {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n            })\r\n            \r\n        } \r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit} id=\"form-isr\">\r\n                <Form.Group as={Row} controlId=\"detail_customer\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Customer:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} className=\"form-caps\">\r\n                            <option key={0} value=\"NONE\">NONE</option>\r\n                            {detailStyle ? detailStyle.customerList.map((customer,index) => {\r\n                                return <option key={index}>{customer}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"detail_style\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Style:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} placeholder=\"Choose Customer\" className=\"form-caps\">\r\n                            {detailStyle ? detailStyle.styleDict.map((style,index) => {\r\n                                return <option key={index} value={style.style}>{style.style}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"po_number\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>PO Number:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"description\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"color\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Color:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"size\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Size:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"number\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"qty_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Quantity / Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ship_date\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Ship Date:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"date\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                {/* <Form.Group as={Row} controlId=\"barcode\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Barcode:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" className=\"form-caps\" disabled />\r\n                    </Col>\r\n                </Form.Group> */}\r\n                <div>\r\n                    <Button type=\"submit\" className=\"form-btn-dark\" block>\r\n                        Submit\r\n                    </Button>\r\n                    {/* <Button className=\"form-btn-light\" style={{ float: 'right' }} onClick={handlePrint}>\r\n                        Print\r\n                    </Button> */}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ISRForm\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js",["193","194","195","196"],"import React, {useEffect, useState} from 'react'\r\nimport { Col, Container, Table, Row } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getItems } from '../../../../actions/ItemActions';\r\n\r\n\r\nfunction ISRPrintComponent({ ISRItem }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [routeList, setRouteList] = useState([])\r\n    \r\n    // const [bar, setBar] = useState('null')\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: bar ? bar:'null',\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     setBar(ISRItem.barcode)\r\n    // }, [ISRItem.barcode,ISRItem.detail_customer])\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        console.log(routeList)\r\n    }, [routeList])\r\n\r\n    useEffect(() => {\r\n        let styleField = document.getElementById('style-field');\r\n        let style = document.getElementById('detail_style');\r\n        if (style.selectedIndex!==-1) {\r\n         styleField.textContent= style.options[style.selectedIndex].innerHTML   \r\n        }\r\n        if (styleField.textContent !== null) {\r\n            let filteredStyle = item.filter(i => i.style === styleField.textContent)\r\n            if (filteredStyle.length) {\r\n                if (filteredStyle[0].process.length) {\r\n                    filteredStyle[0].process.unshift('ISR')\r\n                    let uniqueFilteredStyle = [...new Set(filteredStyle[0].process)]\r\n                    setRouteList(uniqueFilteredStyle)\r\n                }\r\n            }     \r\n        }\r\n    }, [ISRItem])\r\n\r\n    return ( \r\n        <Container className=\"print-form\">\r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    <ul>\r\n                        <li>CUSTOMER: <span>{ISRItem.detail_customer}</span></li>\r\n                        <li>PO #: <span>{ ISRItem.po_number}</span></li>\r\n                        <li>STYLE: <span id=\"style-field\">0</span> </li>\r\n                        <li>DESCRIPTION: <span>{ ISRItem.description}</span></li>\r\n                        <li>COLOR: <span>{ISRItem.color}</span></li>\r\n                        <li>SIZE: <span>{ISRItem.size}</span></li>\r\n                        <li>TOTAL Q'TY: <span>{ ISRItem.total}</span></li>\r\n                        <li>Q'TY/SACK: <span>{ ISRItem.qty_sack}</span></li>\r\n                        <li>SHIPDATE: <span>{ISRItem.ship_date}</span></li>\r\n                    </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> 0 / { ISRItem.total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={{padding:\"30px\"}}></div> */}\r\n            {/* <div className=\"print-barcode\">\r\n                <Image ref={inputRef} />\r\n            </div> */}\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {/* <tr>\r\n                        <td>ISR</td>\r\n                        <td></td>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        <td>FINAL EXAM</td>\r\n                        <td></td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ISRPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\api\\index.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js",["197"],"export default (item = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ITEMS':\r\n            return action.payload\r\n        case 'CREATE_ITEM':\r\n            return [...item, action.payload]\r\n        default:\r\n            return item\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js",["198"],"export default (details = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DETAILS':\r\n            return action.payload\r\n        case 'CREATE_DETAILS':\r\n            return [...details, action.payload]\r\n        default:\r\n            return details\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js",[],"D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js",["199"],"export default (barcodeScanResult = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_BARCODE':\r\n            return action.payload\r\n        case 'POST_BARCODE':\r\n            return action.payload\r\n        case 'INSERT_BR':\r\n            return action.payload\r\n        case 'POST_BARCODE_ERROR':\r\n            // alert(action.error)\r\n            barcodeScanResult = []\r\n            return barcodeScanResult\r\n        case 'FETCH_BARCODE_ERROR':\r\n            return barcodeScanResult\r\n        default:\r\n            return barcodeScanResult\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js",["200"],"import React, { useState,useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport BarcodeScanPanel from './BarcodeScanPanel';\r\nimport BarcodeScanResult from './BarcodeScanResult';\r\nimport { useDispatch } from 'react-redux'\r\nimport { clearResults, postBarcodeDetails } from '../../../../actions/BarcodeScanActions';\r\n\r\nfunction BarcodeScan() {\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    \r\n    const [barcodeInput, setBarcodeInput] = useState({\r\n        barcode:''\r\n    })\r\n    const [barcodeCopy, setBarcodeCopy] = useState({\r\n        barcode:''\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n        let barcodeField = document.getElementById('barcodeInput')\r\n        barcodeField.value = ''\r\n        const undbtn = document.getElementById('undo-btn')\r\n        undbtn.disabled = true;\r\n        //dispatch\r\n        setBarcodeCopy(barcodeInput)\r\n        dispatch(postBarcodeDetails(barcodeInput))\r\n    }\r\n   \r\n    useEffect(() => {\r\n\r\n        const undbtn = document.getElementById('undo-btn')\r\n        undbtn.disabled = true;\r\n        dispatch(clearResults())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (barcodeCopy.barcode !== \"\") {\r\n            const undbtn = document.getElementById('undo-btn')\r\n            undbtn.disabled = false;\r\n        }\r\n        \r\n    }, [barcodeCopy])\r\n    return (\r\n        <div className=\"barcode-wrapper\">\r\n            <div className=\"barcode-scan-container\">\r\n                <div className=\"barcode-primary-div\">\r\n                    <Row>\r\n                        <Col xl={5} lg={4} md={10} sm={10}>\r\n                            <BarcodeScanPanel\r\n                                barcodeInput={barcodeInput}\r\n                                handleSubmit={handleSubmit}\r\n                                setBarcodeInput={setBarcodeInput} \r\n                                setBarcodeCopy={setBarcodeCopy}\r\n                                barcodeCopy={barcodeCopy}\r\n                                />\r\n                        </Col>\r\n                        <Col xl={7} lg={7} md={10} sm={10} className=\"col-res\">         \r\n                            <BarcodeScanResult\r\n                                barcodeCopy={barcodeCopy}\r\n                            />\r\n                        </Col>\r\n                    \r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScan\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js",["201","202","203","204","205","206","207"],"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Table, Col, Row, Button, Form, Card, ButtonGroup } from 'react-bootstrap'\r\nimport POPrintComponent from './POPrintComponent'\r\nimport POTable from './POTable'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { fetchDetails } from '../../../../actions/DetailsActions'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction PO({setSidebar,sidebar}) {\r\n\r\n    const [searchInput, setSearchInput] = useState(null)\r\n    const [searchResult, setSearchResult] = useState(null)\r\n    const [selectedPO, setSelectedPO] = useState(null)\r\n    const [routeList, setRouteList] = useState([])\r\n    const [generatedBarcode, setGeneratedBarcode] = useState(null)\r\n    const [dummyState, setDummyState] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const details = useSelector(state => state.details)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDetails())\r\n    }, [dummyState])\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(generatedBarcode)\r\n    }, [generatedBarcode])\r\n\r\n    useEffect(() => {\r\n        console.log(selectedPO)\r\n        if (selectedPO) {\r\n            if (selectedPO.length) {\r\n                selectedPO[0].detail_style.process.unshift('ISR')\r\n                let uniqueFilteredRoute = [...new Set(selectedPO[0].detail_style.process)]\r\n                setRouteList(uniqueFilteredRoute)\r\n            }\r\n        }\r\n    }, [selectedPO])\r\n\r\n    useEffect(() => {\r\n        const resultfilt = details.filter(det => (det.active ===true))  \r\n        setSearchResult(resultfilt)\r\n        \r\n    }, [details])\r\n\r\n    useEffect(() => {\r\n    \r\n        if (details) {\r\n            if (details.length) {\r\n                const searchResult = details.filter(det => ((det.po_number.includes(searchInput) || det.detail_customer.toUpperCase().includes(searchInput)) && det.active ===true))  \r\n                setSearchResult(searchResult)\r\n            }\r\n        }\r\n        \r\n        \r\n    }, [searchInput])\r\n\r\n    useEffect(() => {\r\n        console.log(searchResult)\r\n    }, [searchResult])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n        html2canvas(input, {\r\n            width: 794,\r\n            height: 1123\r\n        })\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 18, 5,width,height);\r\n\t\t\tpdf.save(generatedBarcode);  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"po-wrapper\">\r\n        <div className=\"po-container\"> \r\n            <Row>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POTable\r\n                        generatedBarcode={generatedBarcode}\r\n                        setGeneratedBarcode={setGeneratedBarcode}\r\n                        handlePrint={handlePrint}\r\n                        searchResult={searchResult}\r\n                        details={details}\r\n                        selectedPO={selectedPO}\r\n                        searchInput={searchInput}\r\n                        setSearchInput={setSearchInput}\r\n                        setSelectedPO={setSelectedPO}\r\n                        dummyState={dummyState}\r\n                        setDummyState={setDummyState}\r\n                        setSidebar={setSidebar}\r\n                        sidebar={sidebar}\r\n                    />\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POPrintComponent\r\n                        generatedBarcode={generatedBarcode}\r\n                        routeList={routeList}\r\n                        selectedPO={selectedPO}\r\n                    />\r\n                    \r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PO\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js",["208","209"],"import React,{useEffect,useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FocusLock from 'react-focus-lock';\r\nimport { undoScan } from '../../../../api';\r\nimport { useAlert } from 'react-alert'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport { useDispatch } from 'react-redux'\r\nimport { insertBR } from '../../../../actions/BarcodeScanActions';\r\n\r\nfunction BarcodeScanPanel({ setBarcodeInput,handleSubmit,barcodeCopy,barcodeInput,setBarcodeCopy }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const handleChange = (e) => {\r\n        setTimeout(() => {\r\n            if (document.getElementById(\"barcodeInput\") !== null) {\r\n                if (document.getElementById(\"barcodeInput\").value !== \"\") {\r\n                    document.getElementById(\"barcodeInput\").value = \"\"\r\n                }\r\n                // setBarcodeCopy({\r\n                //     barcode: \"\"\r\n                // })\r\n                // const undbtn = document.getElementById('undo-btn')\r\n                // undbtn.disabled = true;\r\n            }\r\n        }, 10000);\r\n        \r\n        \r\n        setBarcodeInput({\r\n            barcode: e.target.value\r\n        })\r\n        \r\n    }\r\n    useEffect(() => {\r\n        console.log(barcodeInput)\r\n    }, [barcodeInput])\r\n\r\n\r\n    const handleUndo = async () => {\r\n        if (barcodeCopy.barcode !== null) {\r\n            const res = await undoScan(barcodeCopy)\r\n            console.log(res)\r\n            \r\n            \r\n            if (res.data) {\r\n                dispatch(insertBR(res.data))\r\n                alert.show(\r\n                    <div className=\"alert-suc\"><FaIcons.FaCheck /> {'\"'+res.data+'\"'+' process complete!'}</div>\r\n                )\r\n            } else {\r\n                alert.show(\r\n                    <div className=\"alert-err\"><FaIcons.FaCheck /> Undo Error! ask admin for help.</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"barcode-scan-panel\">\r\n            <h4 className=\"form-title\" style={{textAlign:'center'}}>Barcode Scan</h4>\r\n            <br/>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"barcodeInput\">\r\n                    <Form.Label>Scan:</Form.Label>\r\n                    <FocusLock>\r\n                        <Form.Control type=\"text\" placeholder=\"Scan here\" onChange={handleChange}/>\r\n                    </FocusLock>\r\n                </Form.Group>\r\n            </Form>\r\n            <br/>\r\n            <Button variant=\"danger\" className=\"btn-undo\" block id=\"undo-btn\" onClick={handleUndo}>UNDO SCAN</Button>\r\n            <hr />\r\n            <h5>Instructions</h5>\r\n            <p>1. Make sure the cursor is focused on the text box</p>\r\n            <p>2. Scan the barcode located at the bottom of the route sheet</p>\r\n            <h5>Reminder</h5>\r\n            <p>* Scanning should be done once for each sack on each process *</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScanPanel\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js",["210"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Row} from 'react-bootstrap'\r\n\r\nfunction BarcodeScanResult({barcodeCopy}) {\r\n\r\n    const barcodeScanResult = useSelector(state => state.barcodeScanResult)\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(barcodeScanResult)\r\n        console.log(barcodeScanResult.length)\r\n    }, [barcodeScanResult])\r\n    return (\r\n        <div className=\"barcode-scan-result\">\r\n            <h4 className=\"form-title\" style={{ textAlign: 'center' }}>Result</h4>\r\n            <br />\r\n            <br />\r\n            \r\n            {barcodeScanResult.length && barcodeCopy.barcode ? (\r\n                <div className=\"details-result\">\r\n                    <p><span>{barcodeCopy.barcode}</span></p>\r\n                    <h2>PO Number:<span>{barcodeCopy.barcode.split('-')[1]}</span></h2>\r\n                    <h2>STYLE:<span>{barcodeCopy.barcode.split('-')[0]}</span></h2>\r\n                    <h2>COLOR:<span>{barcodeCopy.barcode.split('-')[2]}</span></h2>\r\n                    <h2>SACK #:<span>{barcodeCopy.barcode.split('-')[3]}</span></h2>\r\n                    <h2>CURRENT PROCESS:<span>{barcodeScanResult.split(',')[0]}</span></h2>\r\n                    <h2>NEXT PROCESS:<span>{barcodeScanResult.split(',')[1]}</span></h2>\r\n                        \r\n                    </div>\r\n                ): <p>No Result</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScanResult\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardChart.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Data.js",["211"],"import React from 'react';\r\n\r\nexport const DataSample1 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 10, 16],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// hoverBackgroundColor: 'rgb(1, 171, 192,0.6)',\r\n\t\t\t// hoverBorderColor: '#00d4e2',\r\n\t\t\t// borderSkippped: 'bottom',\r\n\t\t\t// barPercentage: 1,\r\n\t\t\t// category: 1,\r\n\t\t\t// barThickness: 6,\r\n\t\t\t// maxBarThickness: 8,\r\n\t\t\t// minBarLength: 2,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \tlabel: '# of Votes',\r\n\t\t// \tdata: [15, 21, 9, 8, 15, 20],\r\n\t\t// \tbackgroundColor: [\r\n\t\t// \t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t// \t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t// \t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t// \t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t// \t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t// \t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t// \t],\r\n\t\t// \tborderColor: [\r\n\t\t// \t\t'rgb(188, 233, 255, 1)',\r\n\t\t// \t\t'rgb(154, 195, 216, 1)',\r\n\t\t// \t\t'rgb(121, 159, 179, 1)',\r\n\t\t// \t\t'rgb(90, 124, 143, 1)',\r\n\t\t// \t\t'rgb(59, 91, 109, 1)',\r\n\t\t// \t\t'rgb(30, 60, 76, 1)',\r\n\t\t// \t],\r\n\t\t// \tborderWidth: 1,\r\n\t\t// \t// hoverBackgroundColor: 'rgb(1, 171, 192,0.6)',\r\n\t\t// \t// hoverBorderColor: '#00d4e2',\r\n\t\t// \t// borderSkippped: 'bottom',\r\n\t\t// \tbarPercentage: 1,\r\n\t\t// \tcategory: 1,\r\n\t\t// \t// barThickness: 6,\r\n\t\t// \t// maxBarThickness: 8,\r\n\t\t// \t// minBarLength: 2,\r\n\t\t// },\r\n\t],\r\n};\r\n\r\nexport const DataSample2 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// borderAlign: 'inner',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nexport const DataSample3 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t},\r\n\t],\r\n};\r\n\r\nexport const DataSample4 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: 'rgb(90, 124, 143, 0.7)',\r\n\t\t\tborderColor: 'rgb(30, 60, 76, 1)',\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// borderWidth: 1.5,\r\n\t\t\t// borderCapStyle: 'round',\r\n\t\t\t// fill: false,\r\n\t\t\t// lineTension: 0,\r\n\t\t},\r\n\t],\r\n};\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js",["212","213","214","215","216","217","218"],"import React, {useState,useEffect}from 'react'\r\nimport { Col, Container, Table, Row,Image } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport ReactBarcode from 'react-barcode'\r\nimport QRCode from 'qrcode.react'\r\n\r\nfunction POTable({ selectedPO, routeList,generatedBarcode }) {\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: localBar,\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <div className=\"po-container-print-div\">\r\n            {selectedPO ? (selectedPO.length ? (\r\n                <>\r\n        <Container className=\"po-container-print\" id=\"printForm\">\r\n            \r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    \r\n                        <ul>\r\n                            <li>CUSTOMER: <span>{selectedPO[0].detail_customer}</span></li>\r\n                            <li>PO #: <span>{ selectedPO[0].po_number}</span></li>\r\n                            <li>STYLE: <span>{ selectedPO[0].detail_style.style}</span> </li>\r\n                            <li>DESCRIPTION: <span>{ selectedPO[0].description}</span></li>\r\n                            <li>COLOR: <span>{selectedPO[0].color}</span></li>\r\n                            <li>TOTAL Q'TY: <span>{selectedPO[0].total}</span></li>\r\n                                    <li>Q'TY/SACK:\r\n                                    <span>{generatedBarcode.split('-')[5] == selectedPO[0].total_sack ?\r\n                                        (selectedPO[0].qty_sack - ((selectedPO[0].qty_sack * selectedPO[0].total_sack) - selectedPO[0].total))\r\n                                        :\r\n                                        (selectedPO[0].qty_sack)}\r\n                                    </span>\r\n                                    </li>\r\n                            <li>SHIPDATE: <span>{selectedPO[0].ship_date}</span></li>\r\n                        </ul>\r\n                    \r\n                    \r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> {generatedBarcode.split('-')[5]} / { selectedPO[0].total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n                    </Row>\r\n                    \r\n                        <div style={{display:'flex',justifyContent:'space-between',marginLeft:'35px',marginRight:'35px'}}>\r\n                            {/* <div className=\"print-barcode\">\r\n                                <ReactBarcode value={generatedBarcode} width={0.4} height={55} margin={0} fontSize={6} />\r\n                            </div> */}\r\n                            <QRCode value={generatedBarcode} style={{ display: 'block', marginRight: '30px', width: '50px', height: '50px' }} />\r\n                            <p style={{fontSize:'10px'}}>{generatedBarcode}</p>\r\n                        </div>\r\n                        \r\n                    </Container>\r\n                    \r\n                    </>\r\n                ):(<p>loading..</p>)):(<p style={{marginTop:'48%',textAlign:'center'}}>SELECT PO TO GENERATE ROUTE SHEET</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default POTable","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js",["219","220","221","222","223"],"import React,{useEffect,useState} from 'react'\r\nimport { Table, Col, Row, Button, Form, Card, ButtonGroup } from 'react-bootstrap'\r\nimport { fetchPurchase, addPurchase } from '../../../../api'\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as BiIcons from \"react-icons/bi\";\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport axios from 'axios';\r\n\r\nfunction POPrintComponent({sidebar,setSidebar,setSearchInput,setSelectedPO,details,selectedPO,searchResult,handlePrint,setGeneratedBarcode,generatedBarcode,dummyState,setDummyState}) {\r\n\r\n  \r\n\r\n    const alert = useAlert()\r\n\r\n    const handleChange = (e) => {\r\n        setSearchInput(e.target.value.toUpperCase())\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleProcess = async () => {\r\n        \r\n        if (!sidebar) {\r\n            const res = await addPurchase(purchaseToSubmit)\r\n            console.log(res)\r\n            \r\n            if (res!==null) {\r\n                alert.show(\r\n                    <div className=\"alert-suc\"><FaIcons.FaCheck /> { generatedBarcode } is on-process! </div>\r\n                )\r\n            } else {\r\n                alert.show(\r\n                    <div className=\"alert-err\"><BiIcons.BiError/> Unable to process {generatedBarcode}!</div>\r\n                )\r\n            }\r\n            //update\r\n            \r\n            console.log(generatedBarcode.split('-')[3])\r\n            console.log(selectedPO[0].total_sack)\r\n            if (generatedBarcode.split('-')[5].toString() === selectedPO[0].total_sack.toString()) {\r\n            await axios.post(window.location.protocol + '//' + window.location.hostname +\":8000/api/detail-update/\" + selectedPO[0].id, {'active':'false'}, {\r\n                    headers: {\r\n                        'Authorization': 'token '+ JSON.parse(window.localStorage.getItem(\"credentials\")).token\r\n                    }\r\n            }).then(() => {\r\n                    setDummyState(!dummyState)\r\n                    handlePrint();\r\n                setSelectedPO(null)\r\n                console.log(\"active false\")\r\n            }).catch((err)=> console.log(err))\r\n                console.log(\"request finished\")\r\n            } else {\r\n                setDummyState(!dummyState)\r\n                handlePrint();\r\n                setSelectedPO(null)\r\n            }\r\n            \r\n        } else {\r\n            alert.show(\r\n                    <div className=\"alert-err\"><BiIcons.BiError/> Please close the sidebar before printing!</div>\r\n                )\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    const [purchaseResult, setpurchaseResult] = useState(null)\r\n    const [filteredPurchaseResult, setfilteredPurchaseResult] = useState(null)\r\n    const [purchaseActive, setPurchaseActive] = useState([])\r\n    \r\n    const [purchaseToSubmit, setpurchaseToSubmit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setDummyState(!dummyState)\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        let flag = true;\r\n        if (flag) {\r\n            const purchaseResult = await fetchPurchase()\r\n            \r\n            setpurchaseResult(purchaseResult.data)   \r\n            \r\n            \r\n        }\r\n        return () => {\r\n            flag=false\r\n        }\r\n    }, [dummyState])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (purchaseResult && searchResult) {\r\n            if (searchResult.length) {\r\n                console.log(purchaseResult)\r\n                let purchaseResActive =[]\r\n                for (let j = 0; j != searchResult.length; j++){\r\n                    let ctr = 0;\r\n                    for (let i = 0; i != purchaseResult.length; i++){\r\n                        if (purchaseResult[i].po_number.po_number === searchResult[j].po_number && purchaseResult[i].po_number.color === searchResult[j].color && purchaseResult[i].po_number.size === searchResult[j].size && purchaseResult[i].po_number.detail_style.style === searchResult[j].detail_style.style) { \r\n                            ctr++;\r\n                        }\r\n                    }\r\n                    purchaseResActive.push(ctr)\r\n                }\r\n                \r\n                setPurchaseActive(purchaseResActive)\r\n                \r\n            }\r\n        }\r\n        \r\n    }, [purchaseResult, searchResult])\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        if (filteredPurchaseResult && selectedPO) {\r\n            if (selectedPO.length) {\r\n                setpurchaseToSubmit({\r\n                    po_number: selectedPO[0].id,\r\n                    barcode: generatedBarcode,\r\n                    sack_number: filteredPurchaseResult.length+1\r\n                })\r\n            }\r\n        }\r\n    }, [generatedBarcode,selectedPO,filteredPurchaseResult])\r\n\r\n    const handleSelect = (po,color,size,style,index) => {\r\n        let selectedDetails = details.filter((det) => { return det.po_number === po && det.color === color && det.size === size })\r\n        console.log(selectedDetails)\r\n        // const purchaseResult = await fetchPurchase()\r\n        let filterPurchase = purchaseResult.filter((pr) => { return pr.po_number.po_number === po && pr.po_number.color === color && pr.po_number.size === size && pr.po_number.detail_style.style === style })\r\n        setfilteredPurchaseResult(filterPurchase)\r\n        let qtyS = selectedDetails[0].total_sack===(filterPurchase.length+1) ? (selectedDetails[0].qty_sack - ((selectedDetails[0].qty_sack * selectedDetails[0].total_sack) - selectedDetails[0].total)): selectedDetails[0].qty_sack;\r\n        let genCode = selectedDetails[0].detail_style.style + '-' + selectedDetails[0].po_number + '-' + selectedDetails[0].color+'$'+selectedDetails[0].size + '-'+selectedDetails[0].total+'-'+qtyS+'-'+ (filterPurchase.length+1)\r\n        setGeneratedBarcode(genCode);\r\n        setSelectedPO(selectedDetails)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className=\"po-container-form\">\r\n            <div style={{ marginBottom: \"15px\" }}>\r\n                <h3 className=\"form-title\">PURCHASE ORDERS</h3> \r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label style={{color:'white'}}>SEARCH:</Form.Label>\r\n                    <Form.Control type='text' className=\"isr-form\" onChange={handleChange}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"po-container-table\">\r\n                <Table striped bordered hover style={{backgroundColor:'white', borderRadius:'10px'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DATE CREATED</th>\r\n                            <th>PO</th>\r\n                            <th>COLOR</th>\r\n                            <th>SIZE</th>\r\n                            <th>TOTAL SACK</th>\r\n                            <th>PENDING</th>\r\n                            <th>ACTIVE</th>\r\n                            <th>SELECT</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {searchResult && purchaseActive.length && searchResult.length ? searchResult.map((det, index) => {\r\n                            return(\r\n                                <tr style={{fontSize:'15px'}} key={index}>\r\n                                    <td><Moment format=\"YYYY-MM-DD hh:mm:ss\">{ det.create_on }</Moment></td>\r\n                                    <td>{det.po_number}</td>\r\n                                    <td>{det.color}</td>\r\n                                    <td>{ det.size }</td>\r\n                                    <td>{det.total_sack}</td>\r\n                                    <td>{det.total_sack - purchaseActive[index]}</td>\r\n                                    <td>{purchaseActive[index]}</td>\r\n                                    <td><Button onClick={()=>handleSelect(det.po_number,det.color,det.size,det.detail_style.style,index)}>SELECT</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) : (\r\n                                <tr>\r\n                                    <td colSpan=\"8\" style={{textAlign:'center'}}>No Result</td>\r\n                                </tr>\r\n                        )}\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <br/>\r\n            <Card className=\"po-card\">\r\n                <Card.Body as={Row}>\r\n                    {selectedPO && purchaseToSubmit ? (\r\n                        <>\r\n                            <Col sm={9}>\r\n                            <Card.Title style={{fontSize:'35px'}}>{selectedPO[0].po_number}</Card.Title>\r\n                            <Card.Text style={{fontStyle:'italic'}}>CUSTOMER: {selectedPO[0].detail_customer}</Card.Text>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                            <Button variant=\"primary\" style={{padding:'20px 20px 20px 20px'}} onClick={handleProcess}>PROCESS 1 SACK</Button>\r\n                            </Col>\r\n                        </>\r\n                    ) : (\r\n                            <p style={{margin:'21px'}}>Select PO</p>\r\n                    )}\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default POPrintComponent\r\n\r\n","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js",["224"],"import React, { useEffect,useState } from 'react'\r\nimport { Button,Alert,Form } from 'react-bootstrap'\r\nimport { postCredentials } from '../../actions/AuthActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nfunction SignIn({setCached}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const [creds, setCreds] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    useEffect(() => {\r\n        const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        \r\n        // window.location.href = 'http://localhost:000/';\r\n        if (cachedCreds==null && window.location.href !== window.location.protocol+'//'+window.location.hostname+':'+window.location.port+'/') {\r\n            window.location.href = window.location.protocol+'//'+window.location.hostname+':'+window.location.port+'/'\r\n        }\r\n        console.log(window.location.href)\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCached(cachedCreds)\r\n    }, [auth])\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const res = await dispatch(postCredentials(creds))\r\n        console.log(res)\r\n        // if (res==200) {\r\n        //     window.location.reload(); \r\n        // }\r\n        // console.log(res)/\\\r\n         if (res === '400') {\r\n            document.getElementById('login-error').textContent=\"Incorrect Username or Password\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        } else {\r\n            document.getElementById('login-error').textContent=\"Unknown error\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        }\r\n        \r\n        \r\n    }\r\n    const handleChange = (e) => {\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n        setCreds({\r\n            ...creds,\r\n            [e.target.id]:e.target.value\r\n        },console.log(creds))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signin-container\">\r\n                <h4 style={{ textAlign: 'center' }} className=\"form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES, INC</h4>\r\n                <br />\r\n                <br/>\r\n                <h1 className=\"form-title\" style={{ textAlign: 'center' }}>Login</h1><br/>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Username\" onChange={ handleChange }/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your Username with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={ handleChange }/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" block>\r\n                        Login\r\n                    </Button>\r\n                    <br/>\r\n                    <Alert variant=\"danger\" id=\"login-error\" style={{textAlign:'center'}}>\r\n                        Incorrect Username or Password\r\n                    </Alert>\r\n                </Form>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js",["225"],"export default (auth = [], action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_SESSION':\r\n            window.localStorage.setItem(\"credentials\",JSON.stringify(action.payload))\r\n            return action.payload\r\n        case 'LOGOUT':\r\n             window.localStorage.clear();\r\n            return action.payload\r\n        case 'AUTH_ERROR':\r\n            window.localStorage.clear();\r\n            return action.error\r\n        default:\r\n            return auth\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js",["226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect,useState } from 'react'\r\nimport {Container,Table,Form, Button,Modal} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems } from '../../../actions/ItemActions'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport { MDBDataTable  } from 'mdbreact';\r\n\r\n\r\nfunction ViewItems() {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n\r\n    //modal\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [searchInput, setSearchInput] = useState(null)\r\n    const [searchResult, setSearchResult] = useState(null)\r\n    //modal\r\n\r\n    const [rowData, setRowData] = useState([])\r\n\r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Customer',\r\n                field: 'customer',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Style',\r\n                field: 'style',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Process',\r\n                field: 'process',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Action',\r\n                field: 'action',\r\n                sort: 'asc',\r\n                width: 150\r\n            }\r\n        ],\r\n        rows: rowData\r\n    }\r\n\r\n    const [ItemClass, setItemClass] = useState({\r\n        process: [],\r\n        customer: '',\r\n        style:''\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n        if (item && item.length) {\r\n            const data = item.map(i => {\r\n                return {\r\n                    date: \"1/12/1223\",\r\n                    customer: i.customer.toUpperCase(),\r\n                    style: i.style.toUpperCase(),\r\n                    process: i.process.map((p, index) => { if (index !== i.process.length - 1) { return ((p + ', ').toUpperCase()) } else { return ((p).toUpperCase()) } }),\r\n                    action: <Button variant=\"info\" size=\"sm\" onClick={() => handleEdit(i)} block><FaIcons.FaEdit /> Edit</Button>,\r\n                }\r\n            })\r\n            console.log(data)\r\n            setRowData(data);\r\n        }\r\n    }, [item])\r\n\r\n\r\n\r\n    const handleFormChange = (e) => {\r\n        setItemClass({\r\n            ...ItemClass,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        let processList = []\r\n        let checkboxes = document.querySelectorAll('input[type=checkbox]:checked')\r\n        for (let i = 0; i < checkboxes.length; i++){\r\n            processList.push(checkboxes[i].value)\r\n        }\r\n        setItemClass({\r\n            ...ItemClass,\r\n            process: processList,\r\n        })\r\n    }\r\n\r\n    const [selectedItems, setSelectedItems] = useState(null)\r\n\r\n    const handleEdit = (i) => {\r\n        \r\n        const selItem = item.filter((it)=>{return it.style===i.style})\r\n        setSelectedItems(selItem)\r\n        setItemClass({\r\n            style: i.style.toUpperCase(),\r\n            customer: i.customer.toUpperCase(),\r\n            process: i.process\r\n        })\r\n        handleShow()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (show) {\r\n            let processCheckbox = document.getElementById(\"check1\");\r\n            if (processCheckbox && selectedItems &&setSelectedItems.length) {\r\n                console.log(processCheckbox)\r\n                for (let i = 1; i != 12; i++){\r\n                    for (let j = 0; j != selectedItems[0].process.length; j++){\r\n                        if (document.getElementById(`check${i}`).value === selectedItems[0].process[j]) {\r\n                        document.getElementById(`check${i}`).checked = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n   \r\n        }\r\n        \r\n    }, [show])\r\n\r\n   \r\n    return (\r\n        <div className=\"view-item-wrapper\">\r\n        <div className=\"view-item-container\">\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                animation={false}\r\n                centered\r\n                size=\"lg\">\r\n                \r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-modal-sizes-title-lg\">Edit Item</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {selectedItems && selectedItems.length ? (\r\n                        <div className=\"modal-edit\">\r\n                    <Form id=\"form-add-item\">\r\n                        <Form.Group controlId=\"customer\" >\r\n                            <Form.Label>Customer:</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Customer\" defaultValue={selectedItems[0].customer} onChange={handleFormChange} className=\"form-caps\"/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"style\">\r\n                            <Form.Label>Style:</Form.Label>\r\n                            <Form.Control required type=\"text\" placeholder=\"Style\" defaultValue={selectedItems[0].style} onChange={handleFormChange} className=\"form-caps\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Process:</Form.Label>\r\n                                    <Form.Check\r\n                                        label=\"Knitting\"\r\n                                        value=\"knitting\"\r\n                                        id=\"check1\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Cutting\"\r\n                                        value=\"cutting\"\r\n                                        id=\"check2\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"ISR 1\"\r\n                                        value=\"isr_1\"\r\n                                        id=\"check3\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Sewing\"\r\n                                        value=\"sewing\"\r\n                                        id=\"check4\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"ISR 2\"\r\n                                        value=\"isr_2\"\r\n                                        id=\"check5\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    \r\n                                    <Form.Check\r\n                                        label=\"B1 Receipts\"\r\n                                        value=\"reciepts\"\r\n                                        id=\"check6\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Steaming\"\r\n                                        value=\"steaming\"\r\n                                        id=\"check7\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Tagging\"\r\n                                        value=\"tagging\"\r\n                                        id=\"check8\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Final Examination\"\r\n                                        value=\"finalexam\"\r\n                                        id=\"check9\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Metal Detection\"\r\n                                        value=\"metaldetect\"\r\n                                        id=\"check10\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        label=\"Boxing\"\r\n                                        value=\"boxing\"\r\n                                        id=\"check11\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                        </Form.Group>\r\n                        </Form>\r\n                        </div>\r\n                    ):(<p>loading</p>)}\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <div style={{textAlign:\"center\"}}>\r\n                <h5 className=\"form-title\">ITEMS</h5>\r\n            </div>\r\n                \r\n                    <div style={\r\n                    {\r\n                        backgroundColor: 'white',\r\n                        padding: '20px',\r\n                        // borderRadius: '5px',\r\n                        height: '90%',\r\n                        overflow: 'scroll',\r\n                        overflowX: 'hidden',\r\n                        marginTop: '20px',\r\n                        \r\n                    }}>\r\n                    <MDBDataTable  \r\n                        entries={8}\r\n                        striped\r\n                        bordered\r\n                        small\r\n                        entriesOptions={[5,8,10,15]}\r\n                        striped\r\n                        hover\r\n                        style={{height:'100% !important'}}\r\n                        data={data}\r\n                            />\r\n                    </div>\r\n            \r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ViewItems\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js",["238","239","240","241"],"import React,{useEffect,useState} from 'react'\r\nimport {Button,Table,Form} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchPurchaseDetails } from '../../../../actions/BarcodeScanActions'\r\nimport { MDBDataTable  } from 'mdbreact';\r\n\r\n\r\n\r\nfunction ViewBarcodes() {\r\n    const dispatch = useDispatch()\r\n    const barcodeScanResult = useSelector(state => state.barcodeScanResult)\r\n    const [rowData, setRowData] = useState([])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchPurchaseDetails())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(barcodeScanResult)\r\n        if (barcodeScanResult.length && barcodeScanResult[0].create_on) {\r\n            const data = barcodeScanResult.map(i => {\r\n                return {\r\n                    date: i.create_on,\r\n                    barcode: i.barcode.toUpperCase(),\r\n                    style: i.po_number.detail_style.style,\r\n                    po: i.po_number.po_number.toUpperCase(),\r\n                    color: i.po_number.color.toUpperCase(),\r\n                    size:i.po_number.size.toUpperCase(),\r\n                    qtysack:i.barcode.split('-')[4],\r\n                    sackno:i.barcode.split('-')[5],\r\n                    action: <Button variant=\"danger\" size=\"sm\">DELETE</Button>,\r\n                }\r\n            })\r\n            console.log(data)\r\n            setRowData(data);\r\n        }\r\n        \r\n    }, [barcodeScanResult])\r\n\r\n\r\n    const data = {\r\n        columns: [\r\n            {\r\n                label: 'Date',\r\n                field: 'date',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Barcode',\r\n                field: 'barcode',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Style',\r\n                field: 'style',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Po #',\r\n                field: 'po',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Color',\r\n                field: 'color',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Size',\r\n                field: 'size',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Qty/Sack',\r\n                field: 'qtysack',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Sack #',\r\n                field: 'sackno',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n            {\r\n                label: 'Actions',\r\n                field: 'action',\r\n                sort: 'asc',\r\n                width: 150\r\n            },\r\n        ],\r\n        rows: rowData\r\n    }\r\n    return (\r\n        <div className=\"view-item-wrapper\">\r\n        <div className=\"view-item-container\">\r\n            <div style={{textAlign:\"center\"}}>\r\n                <h5 className=\"form-title\">BARCODES</h5>\r\n            </div>\r\n       \r\n                <div style={\r\n                    {\r\n                        backgroundColor: 'white',\r\n                        padding: '20px',\r\n                        // borderRadius: '5px',\r\n                        height: '90%',\r\n                        overflow: 'scroll',\r\n                        overflowX: 'hidden',\r\n                        marginTop: '20px',\r\n                        \r\n                    }}>\r\n                    <MDBDataTable  \r\n                        \r\n                        entries={8}\r\n                        striped\r\n                        bordered\r\n                        small\r\n                        entriesOptions={[5,8,10,15]}\r\n                        striped\r\n                        hover\r\n                        style={{height:'100% !important'}}\r\n                        data={data}\r\n                    />\r\n                </div>\r\n                \r\n          \r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ViewBarcodes\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js",["242","243"],"import React,{useEffect,useState} from 'react'\r\nimport {Button,Table,Form} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchDetails } from '../../../../actions/DetailsActions'\r\nimport * as FaIcons from 'react-icons/fa'\r\n\r\nfunction ViewDetails() {\r\n    const dispatch = useDispatch()\r\n    const details = useSelector(state => state.details)\r\n    const [searchInput, setSearchInput] = useState(null)\r\n    const [searchResult, setSearchResult] = useState(null)\r\n    \r\n\r\n    const handleSearch = (e) => {\r\n        setSearchInput(e.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (searchInput) {\r\n            const result = details.filter((it) => {\r\n                return it.color.toUpperCase().includes(searchInput.toUpperCase())\r\n                    || it.create_on.toUpperCase().includes(searchInput.toUpperCase())\r\n                    || it.detail_customer.toUpperCase().includes(searchInput.toUpperCase())\r\n                    || it.po_number.toUpperCase().includes(searchInput.toUpperCase())\r\n                    || it.ship_date.toUpperCase().includes(searchInput.toUpperCase())\r\n                    || it.size.toUpperCase().includes(searchInput.toUpperCase())\r\n            })\r\n            setSearchResult(result)\r\n        } else {\r\n            setSearchResult(details)\r\n        }\r\n    }, [searchInput])\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDetails())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setSearchResult(details)\r\n    }, [details])\r\n    return (\r\n        <div className=\"view-item-container\">\r\n            <div style={{textAlign:\"center\"}}>\r\n                <h3 className=\"form-title\">PURCHASE ORDERS</h3>\r\n            </div>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label style={{color:'white'}}>SEARCH:</Form.Label>\r\n                    <Form.Control type='text' className=\"isr-form\" onChange={handleSearch}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"view-item-container-form\">\r\n                <Table striped bordered hover style={{ backgroundColor: 'white', borderRadius: '10px' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DATE</th>\r\n                            <th>CUSTOMER</th>\r\n                            <th>STYLE</th>\r\n                            <th>PO NO.</th>\r\n                            <th>SHIP DATE</th>\r\n                            <th>COLOR</th>\r\n                            <th>SIZE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>TOTAL SACK</th>\r\n                            <th>ACTIONS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {searchResult && searchResult.length ? searchResult.map(((i,index) => {\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{i.create_on}</td>\r\n                                    <td>{i.detail_customer.toUpperCase()}</td>\r\n                                    <td>{i.detail_style.style}</td>\r\n                                    <td>{i.po_number.toUpperCase()}</td>\r\n                                    <td>{i.ship_date.toUpperCase()}</td>\r\n                                    <td>{i.color.toUpperCase()}</td>\r\n                                    <td>{i.size.toUpperCase()}</td>\r\n                                    <td>{i.total}</td>\r\n                                    <td>{i.total_sack}</td>\r\n                                    <td><Button variant=\"danger\"><FaIcons.FaTrashAlt /> Delete</Button></td>\r\n                                </tr>\r\n                            )\r\n                        })): (\r\n                            <tr>\r\n                                <td colSpan=\"10\" style={{textAlign:'center'}}>No Result</td>\r\n                            </tr>)\r\n                        }\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewDetails\r\n",{"ruleId":"244","severity":1,"message":"245","line":15,"column":23,"nodeType":"246","messageId":"247","endLine":15,"endColumn":32},{"ruleId":"244","severity":1,"message":"248","line":15,"column":33,"nodeType":"246","messageId":"247","endLine":15,"endColumn":38},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"244","severity":1,"message":"253","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":16},{"ruleId":"244","severity":1,"message":"254","line":13,"column":10,"nodeType":"246","messageId":"247","endLine":13,"endColumn":17},{"ruleId":"244","severity":1,"message":"255","line":14,"column":10,"nodeType":"246","messageId":"247","endLine":14,"endColumn":18},{"ruleId":"244","severity":1,"message":"256","line":14,"column":20,"nodeType":"246","messageId":"247","endLine":14,"endColumn":31},{"ruleId":"244","severity":1,"message":"257","line":8,"column":10,"nodeType":"246","messageId":"247","endLine":8,"endColumn":29},{"ruleId":"244","severity":1,"message":"258","line":3,"column":13,"nodeType":"246","messageId":"247","endLine":3,"endColumn":20},{"ruleId":"244","severity":1,"message":"259","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":12},{"ruleId":"244","severity":1,"message":"260","line":10,"column":8,"nodeType":"246","messageId":"247","endLine":10,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":54,"column":119,"nodeType":"263","messageId":"264","endLine":54,"endColumn":120},{"ruleId":"244","severity":1,"message":"265","line":2,"column":27,"nodeType":"246","messageId":"247","endLine":2,"endColumn":30},{"ruleId":"244","severity":1,"message":"266","line":2,"column":32,"nodeType":"246","messageId":"247","endLine":2,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":27,"column":5,"nodeType":"269","endLine":27,"endColumn":7,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":30,"column":19,"nodeType":"273","messageId":"274","endLine":30,"endColumn":21},{"ruleId":"244","severity":1,"message":"275","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":25},{"ruleId":"244","severity":1,"message":"253","line":2,"column":19,"nodeType":"246","messageId":"247","endLine":2,"endColumn":25},{"ruleId":"267","severity":1,"message":"276","line":53,"column":8,"nodeType":"269","endLine":53,"endColumn":33,"suggestions":"277"},{"ruleId":"267","severity":1,"message":"278","line":33,"column":8,"nodeType":"269","endLine":33,"endColumn":14,"suggestions":"279"},{"ruleId":"267","severity":1,"message":"268","line":37,"column":8,"nodeType":"269","endLine":37,"endColumn":10,"suggestions":"280"},{"ruleId":"244","severity":1,"message":"281","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":31,"column":8,"nodeType":"269","endLine":31,"endColumn":10,"suggestions":"282"},{"ruleId":"267","severity":1,"message":"283","line":57,"column":8,"nodeType":"269","endLine":57,"endColumn":17,"suggestions":"284"},{"ruleId":"271","severity":1,"message":"285","line":99,"column":68,"nodeType":"273","messageId":"286","endLine":99,"endColumn":70},{"ruleId":"287","severity":1,"message":"288","line":1,"column":1,"nodeType":"289","endLine":10,"endColumn":2},{"ruleId":"287","severity":1,"message":"288","line":1,"column":1,"nodeType":"289","endLine":10,"endColumn":2},{"ruleId":"287","severity":1,"message":"288","line":1,"column":1,"nodeType":"289","endLine":18,"endColumn":2},{"ruleId":"267","severity":1,"message":"268","line":36,"column":8,"nodeType":"269","endLine":36,"endColumn":10,"suggestions":"290"},{"ruleId":"244","severity":1,"message":"291","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":15},{"ruleId":"244","severity":1,"message":"253","line":3,"column":27,"nodeType":"246","messageId":"247","endLine":3,"endColumn":33},{"ruleId":"244","severity":1,"message":"292","line":3,"column":35,"nodeType":"246","messageId":"247","endLine":3,"endColumn":39},{"ruleId":"244","severity":1,"message":"293","line":3,"column":41,"nodeType":"246","messageId":"247","endLine":3,"endColumn":45},{"ruleId":"244","severity":1,"message":"294","line":3,"column":47,"nodeType":"246","messageId":"247","endLine":3,"endColumn":58},{"ruleId":"267","severity":1,"message":"268","line":25,"column":8,"nodeType":"269","endLine":25,"endColumn":20,"suggestions":"295"},{"ruleId":"267","severity":1,"message":"296","line":59,"column":8,"nodeType":"269","endLine":59,"endColumn":21,"suggestions":"297"},{"ruleId":"244","severity":1,"message":"298","line":1,"column":25,"nodeType":"246","messageId":"247","endLine":1,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":49,"column":85,"nodeType":"263","messageId":"264","endLine":49,"endColumn":86},{"ruleId":"244","severity":1,"message":"265","line":3,"column":9,"nodeType":"246","messageId":"247","endLine":3,"endColumn":12},{"ruleId":"244","severity":1,"message":"299","line":1,"column":8,"nodeType":"246","messageId":"247","endLine":1,"endColumn":13},{"ruleId":"244","severity":1,"message":"298","line":1,"column":16,"nodeType":"246","messageId":"247","endLine":1,"endColumn":24},{"ruleId":"244","severity":1,"message":"300","line":1,"column":25,"nodeType":"246","messageId":"247","endLine":1,"endColumn":34},{"ruleId":"244","severity":1,"message":"301","line":2,"column":37,"nodeType":"246","messageId":"247","endLine":2,"endColumn":42},{"ruleId":"244","severity":1,"message":"281","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":20},{"ruleId":"244","severity":1,"message":"302","line":4,"column":8,"nodeType":"246","messageId":"247","endLine":4,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":37,"column":75,"nodeType":"263","messageId":"305","endLine":37,"endColumn":77},{"ruleId":"271","severity":1,"message":"285","line":67,"column":68,"nodeType":"273","messageId":"286","endLine":67,"endColumn":70},{"ruleId":"244","severity":1,"message":"294","line":2,"column":47,"nodeType":"246","messageId":"247","endLine":2,"endColumn":58},{"ruleId":"267","severity":1,"message":"306","line":80,"column":8,"nodeType":"269","endLine":80,"endColumn":10,"suggestions":"307"},{"ruleId":"267","severity":1,"message":"308","line":82,"column":15,"nodeType":"273","endLine":94,"endColumn":6},{"ruleId":"303","severity":1,"message":"309","line":103,"column":35,"nodeType":"263","messageId":"305","endLine":103,"endColumn":37},{"ruleId":"303","severity":1,"message":"309","line":105,"column":39,"nodeType":"263","messageId":"305","endLine":105,"endColumn":41},{"ruleId":"267","severity":1,"message":"310","line":30,"column":8,"nodeType":"269","endLine":30,"endColumn":14,"suggestions":"311"},{"ruleId":"287","severity":1,"message":"288","line":1,"column":1,"nodeType":"289","endLine":15,"endColumn":2},{"ruleId":"244","severity":1,"message":"275","line":2,"column":9,"nodeType":"246","messageId":"247","endLine":2,"endColumn":18},{"ruleId":"244","severity":1,"message":"291","line":2,"column":19,"nodeType":"246","messageId":"247","endLine":2,"endColumn":24},{"ruleId":"244","severity":1,"message":"312","line":19,"column":12,"nodeType":"246","messageId":"247","endLine":19,"endColumn":23},{"ruleId":"244","severity":1,"message":"313","line":19,"column":25,"nodeType":"246","messageId":"247","endLine":19,"endColumn":39},{"ruleId":"244","severity":1,"message":"314","line":20,"column":12,"nodeType":"246","messageId":"247","endLine":20,"endColumn":24},{"ruleId":"244","severity":1,"message":"315","line":20,"column":26,"nodeType":"246","messageId":"247","endLine":20,"endColumn":41},{"ruleId":"267","severity":1,"message":"268","line":69,"column":8,"nodeType":"269","endLine":69,"endColumn":10,"suggestions":"316"},{"ruleId":"267","severity":1,"message":"317","line":86,"column":8,"nodeType":"269","endLine":86,"endColumn":14,"suggestions":"318"},{"ruleId":"303","severity":1,"message":"309","line":129,"column":35,"nodeType":"263","messageId":"305","endLine":129,"endColumn":37},{"ruleId":"303","severity":1,"message":"309","line":130,"column":39,"nodeType":"263","messageId":"305","endLine":130,"endColumn":41},{"ruleId":"267","severity":1,"message":"319","line":140,"column":8,"nodeType":"269","endLine":140,"endColumn":14,"suggestions":"320"},{"ruleId":"321","severity":1,"message":"322","line":273,"column":25,"nodeType":"323","endLine":273,"endColumn":32},{"ruleId":"244","severity":1,"message":"291","line":2,"column":16,"nodeType":"246","messageId":"247","endLine":2,"endColumn":21},{"ruleId":"244","severity":1,"message":"292","line":2,"column":22,"nodeType":"246","messageId":"247","endLine":2,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":16,"column":8,"nodeType":"269","endLine":16,"endColumn":10,"suggestions":"324"},{"ruleId":"321","severity":1,"message":"322","line":125,"column":25,"nodeType":"323","endLine":125,"endColumn":32},{"ruleId":"267","severity":1,"message":"296","line":32,"column":8,"nodeType":"269","endLine":32,"endColumn":21,"suggestions":"325"},{"ruleId":"267","severity":1,"message":"268","line":36,"column":8,"nodeType":"269","endLine":36,"endColumn":10,"suggestions":"326"},"no-unused-vars","'positions' is defined but never used.","Identifier","unusedVar","'types' is defined but never used.","no-native-reassign",["327"],"no-negated-in-lhs",["328"],"'Button' is defined but never used.","'isAdmin' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'GiConsoleController' is defined but never used.","'AiIcons' is defined but never used.","'Home' is defined but never used.","'SignIn' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Row' is defined but never used.","'Col' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["329"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'ISRItem'. Either include it or remove the dependency array. You can also do a functional update 'setISRItem(I => ...)' if you only need 'ISRItem' in the 'setISRItem' call.",["330"],"React Hook useEffect has a missing dependency: 'detailStyle'. Either include it or remove the dependency array. You can also do a functional update 'setdetailStyle(d => ...)' if you only need 'detailStyle' in the 'setdetailStyle' call.",["331"],["332"],"'useBarcode' is defined but never used.",["333"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["334"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["335"],"'Table' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'ButtonGroup' is defined but never used.",["336"],"React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array.",["337"],"'useState' is defined but never used.","'React' is defined but never used.","'useEffect' is defined but never used.","'Image' is defined but never used.","'ReactBarcode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has missing dependencies: 'dummyState' and 'setDummyState'. Either include them or remove the dependency array. If 'setDummyState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["338"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'setCached'. Either include it or remove the dependency array. If 'setCached' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["339"],"'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'setSearchResult' is assigned a value but never used.",["340"],"React Hook useEffect has a missing dependency: 'handleEdit'. Either include it or remove the dependency array.",["341"],"React Hook useEffect has a missing dependency: 'selectedItems'. Either include it or remove the dependency array.",["342"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["343"],["344"],["345"],"no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"346","fix":"352"},{"desc":"346","fix":"353"},{"desc":"354","fix":"355"},{"desc":"346","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"346","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"346","fix":"370"},{"desc":"359","fix":"371"},{"desc":"346","fix":"372"},"Update the dependencies array to be: [dispatch]",{"range":"373","text":"374"},"Update the dependencies array to be: [ISRItem, ISRItem.detail_customer]",{"range":"375","text":"376"},"Update the dependencies array to be: [detailStyle, item]",{"range":"377","text":"378"},{"range":"379","text":"374"},{"range":"380","text":"374"},"Update the dependencies array to be: [ISRItem, item]",{"range":"381","text":"382"},{"range":"383","text":"374"},"Update the dependencies array to be: [dispatch, dummyState]",{"range":"384","text":"385"},"Update the dependencies array to be: [details, searchInput]",{"range":"386","text":"387"},"Update the dependencies array to be: [dummyState, setDummyState]",{"range":"388","text":"389"},"Update the dependencies array to be: [auth, setCached]",{"range":"390","text":"391"},{"range":"392","text":"374"},"Update the dependencies array to be: [handleEdit, item]",{"range":"393","text":"394"},"Update the dependencies array to be: [selectedItems, show]",{"range":"395","text":"396"},{"range":"397","text":"374"},{"range":"398","text":"387"},{"range":"399","text":"374"},[763,765],"[dispatch]",[1590,1615],"[ISRItem, ISRItem.detail_customer]",[1156,1162],"[detailStyle, item]",[1227,1229],[961,963],[1889,1898],"[ISRItem, item]",[1126,1128],[967,979],"[dispatch, dummyState]",[2000,2013],"[details, searchInput]",[2974,2976],"[dummyState, setDummyState]",[1175,1181],"[auth, setCached]",[1828,1830],[2558,2564],"[handleEdit, item]",[4182,4188],"[selectedItems, show]",[545,547],[1346,1359],[1428,1430]]