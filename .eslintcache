[{"D:\\PROJECTS\\frontgold\\src\\index.js":"1","D:\\PROJECTS\\frontgold\\src\\App.js":"2","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js":"3","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js":"4","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js":"5","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js":"6","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js":"7","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js":"8","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js":"9","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js":"10","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js":"11","D:\\PROJECTS\\frontgold\\src\\api\\index.js":"12","D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js":"13","D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js":"14","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js":"15","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js":"16","D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js":"17","D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js":"18","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js":"19","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js":"20","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js":"21","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js":"22","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js":"23","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardChart.js":"24","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTable.js":"25","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Data.js":"26","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js":"27","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js":"28","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js":"29","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js":"30","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js":"31","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js":"32","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js":"33","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js":"34"},{"size":1592,"mtime":1610161740734,"results":"35","hashOfConfig":"36"},{"size":1301,"mtime":1610127355977,"results":"37","hashOfConfig":"36"},{"size":3225,"mtime":1610127369871,"results":"38","hashOfConfig":"36"},{"size":2172,"mtime":1610164201730,"results":"39","hashOfConfig":"36"},{"size":2488,"mtime":1610164300584,"results":"40","hashOfConfig":"36"},{"size":1119,"mtime":1609671294381,"results":"41","hashOfConfig":"36"},{"size":1171,"mtime":1610127200267,"results":"42","hashOfConfig":"36"},{"size":6261,"mtime":1610165968893,"results":"43","hashOfConfig":"36"},{"size":2997,"mtime":1609684541230,"results":"44","hashOfConfig":"36"},{"size":8635,"mtime":1609942663347,"results":"45","hashOfConfig":"36"},{"size":5227,"mtime":1609693442002,"results":"46","hashOfConfig":"36"},{"size":2385,"mtime":1610129752134,"results":"47","hashOfConfig":"36"},{"size":345,"mtime":1610031658091,"results":"48","hashOfConfig":"36"},{"size":259,"mtime":1609223499265,"results":"49","hashOfConfig":"36"},{"size":273,"mtime":1609608821128,"results":"50","hashOfConfig":"36"},{"size":604,"mtime":1609889429429,"results":"51","hashOfConfig":"36"},{"size":583,"mtime":1609888186476,"results":"52","hashOfConfig":"36"},{"size":357,"mtime":1609670046946,"results":"53","hashOfConfig":"36"},{"size":1646,"mtime":1610124570198,"results":"54","hashOfConfig":"36"},{"size":3456,"mtime":1609864928506,"results":"55","hashOfConfig":"36"},{"size":1336,"mtime":1610125190096,"results":"56","hashOfConfig":"36"},{"size":1293,"mtime":1610126388371,"results":"57","hashOfConfig":"36"},{"size":437,"mtime":1609705235764,"results":"58","hashOfConfig":"36"},{"size":4339,"mtime":1609670281653,"results":"59","hashOfConfig":"36"},{"size":129,"mtime":1609670281653,"results":"60","hashOfConfig":"36"},{"size":3424,"mtime":1609670281653,"results":"61","hashOfConfig":"36"},{"size":3773,"mtime":1609891556971,"results":"62","hashOfConfig":"36"},{"size":7353,"mtime":1609943637129,"results":"63","hashOfConfig":"36"},{"size":3432,"mtime":1610164066516,"results":"64","hashOfConfig":"36"},{"size":477,"mtime":1610122711603,"results":"65","hashOfConfig":"36"},{"size":795,"mtime":1610129522532,"results":"66","hashOfConfig":"36"},{"size":156,"mtime":1610040170685,"results":"67","hashOfConfig":"36"},{"size":188,"mtime":1610040379997,"results":"68","hashOfConfig":"36"},{"size":2264,"mtime":1610165722350,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"17d0ngb",{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"73"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"73"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"73"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"73"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"73"},"D:\\PROJECTS\\frontgold\\src\\index.js",["158","159"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/RootReducer'\n\nimport { transitions, positions,types, Provider as AlertProvider } from 'react-alert'\n// import AlertTemplate from 'react-alert-template-basic'\n\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: 'top center',\n  timeout: 3000,\n  // offset: '70px',\n  // you can also just use 'scale'\n  \n  transition: transitions.SCALE,\n  containerStyle: {\n    zIndex: 80000\n  }\n}\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n    {/* <button onClick={close}>X</button> */}\n  </div>\n)\n\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nstore.subscribe(() => {\n  // const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n  // console.log(cachedCreds.token)\n  console.log(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <App />\n        </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["160","161"],"D:\\PROJECTS\\frontgold\\src\\App.js",["162","163","164","165","166","167"],"import { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { logout } from \"./actions/AuthActions\";\nimport SignIn from \"./components/auth/SignIn\";\nimport MyNavbar from \"./components/layout/MyNavbar\";\nimport Pages from \"./components/pages/Pages\";\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nfunction App() {\n  const [sidebar, setSidebar] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [cached, setCached] = useState(null)\n  const dispatch = useDispatch()\n\n  \n  const handleLogout = () => {\n    \n    dispatch(logout())\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n    setCached(cacheCreds)\n    setSidebar(false)\n  }\n\n  if (cached) {\n    return (\n      <BrowserRouter>\n        <div onMouseLeave={() => { setSidebar(false)}}>\n          <MyNavbar sidebar={sidebar} setSidebar={setSidebar} isAdmin={cached.is_Admin} setIsAdmin={setIsAdmin} handleLogout={handleLogout}/>\n        </div>\n        <Pages sidebar={sidebar} setSidebar={setSidebar} />\n      </BrowserRouter>\n    )\n  } else {\n    //signin\n    return (\n      <SignIn setCached={setCached} cached={cached}/>\n    )\n  }\n\n}\n\nexport default App;\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js",["168"],"import React from 'react'\r\nimport { Link,withRouter } from 'react-router-dom'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport { SideBarDataAdmin,SideBarDataStaff } from './SideBarData'\r\nimport {IconContext} from 'react-icons'\r\nimport SideBarMenu from './SideBarMenu'\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport { GiConsoleController } from 'react-icons/gi'\r\n\r\nfunction MyNavbar({sidebar,setSidebar,isAdmin,setIsAdmin, handleLogout,history}) {\r\n\r\n    const showSidebar = () => setSidebar(!sidebar)\r\n\r\n    const handleClick=()=> {\r\n        \r\n        history.push('/')\r\n        handleLogout()\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color:'white'}}>\r\n            <div className=\"navbar\">\r\n                <Link to=\"#\" className=\"menu-bars\">\r\n                    <FaIcons.FaBars onClick={showSidebar} />\r\n                </Link>\r\n                    \r\n                    {isAdmin ?\r\n                        <div onClick={()=>{setIsAdmin(!isAdmin)}}>\r\n                            <FaIcons.FaUserTie style={{ fontSize: \"30px\"}} /> \r\n                            <span style={{color:\"white\", marginRight: \"10px\" }}>Admin</span>\r\n                        </div>\r\n                        :\r\n                        <div onClick={()=>{setIsAdmin(!isAdmin)}}>\r\n                            <FaIcons.FaUserInjured style={{ fontSize: \"30px\"}} /> \r\n                            <span style={{color:\"white\", marginRight: \"10px\" }}>Staff</span>\r\n                        </div>\r\n                    }\r\n                        \r\n                \r\n            </div>\r\n            \r\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                <ul className='nav-menu-items'>\r\n                    {/* <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose onClick={showSidebar}/>\r\n                        </Link>\r\n                    </li> */}\r\n                    {isAdmin ? SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                            <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    }): SideBarDataStaff.map((item, index) => {\r\n                        return (\r\n                           <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    })\r\n                                \r\n                    }\r\n                    {/* {SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                           <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    })} */}\r\n                        \r\n                        \r\n                        <li style={{ position: 'absolute', display: 'inline', width: '100%', bottom: '0' }} className=\"nav-text\" onClick={handleClick}>\r\n                                <RiIcons.RiLogoutBoxLine/>\r\n                                <span>LOGOUT</span>\r\n                            </li>\r\n                        \r\n                        \r\n                </ul>\r\n            </nav>\r\n        </IconContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(MyNavbar)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js",["169"],"import React, { useEffect,useState } from 'react'\r\nimport { Route, Switch,withRouter } from \"react-router-dom\";\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport AddItem from './items/AddItem';\r\nimport PageUnavailable from './home/PageUnavailable'\r\nimport Home from './home/Home'\r\nimport BarcodeScan from './process/BarcodeScan.js/BarcodeScan';\r\nimport ISR from './process/ISR/ISR';\r\nimport PO from './process/PO/PO';\r\nimport SignIn from '../auth/SignIn';\r\nimport ViewItems from './items/ViewItems';\r\n\r\nfunction Pages({ sidebar,history }) {\r\n    \r\n    const [cachedCreds, setCachedCreds] = useState(null)\r\n\r\n\r\n    history.listen((location, action) => {\r\n        // console.log(history)\r\n        const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCachedCreds(cacheCreds)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCachedCreds(cacheCreds)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={sidebar ? 'main-container-active' : 'main-container'}>\r\n            {cachedCreds ? \r\n                (\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={ cachedCreds.is_Admin ? Dashboard : Home} />\r\n                        <Route exact path=\"/items/add\" component={cachedCreds.is_Admin ? AddItem : PageUnavailable} />\r\n                        <Route exact path=\"/items\" component={cachedCreds.is_Admin ? ViewItems : PageUnavailable } />\r\n\r\n                        <Route exact path=\"/process/isr\" component={cachedCreds.is_Admin ? PageUnavailable : ISR} />\r\n                        {/* <Route exact path=\"/signin\" component={cachedCreds ? PageUnavailable :  SignIn } /> */}\r\n                        <Route exact path=\"/process/scan\" component={cachedCreds.is_Admin ? PageUnavailable : BarcodeScan} />\r\n\r\n                        <Route exact path=\"/process/po\" component={cachedCreds.is_Admin ? PageUnavailable : PO} />\r\n                        \r\n                        <Route exact path=\"/adminpage\" component={cachedCreds.is_Admin ? (() => {\r\n                            window.location.href = 'http://localhost:8000/admin';\r\n                            return <h4>Session Expired</h4>;\r\n                        }) : PageUnavailable} />\r\n                    </Switch>\r\n                )\r\n                :\r\n                <p>Loading..</p>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Pages)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js",["170","171"],"import React,{useEffect, useState} from 'react'\r\nimport { Col, Row,Button } from 'react-bootstrap'\r\nimport ISRForm from './ISRForm'\r\nimport ISRPrintComponent from './ISRPrintComponent'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction ISR() {\r\n    const [ISRItem, setISRItem] = useState({\r\n        detail_customer: '',\r\n        po_number:'',\r\n        total_sack: '',\r\n        description: '',\r\n        color: '',\r\n        total: '',\r\n        qty_sack: '',\r\n        ship_date: '',\r\n        detail_style: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        let totalSack = document.getElementById('total_sack');\r\n        let poNum = document.getElementById('po_number');\r\n        let description = document.getElementById('description');\r\n        let color = document.getElementById('color');\r\n        let total = document.getElementById('total');\r\n        let qty_sack = document.getElementById('qty_sack');\r\n        let ship_date = document.getElementById('ship_date');\r\n\r\n        totalSack.value = ''\r\n        poNum.value = ''\r\n        description.value = ''\r\n        color.value = ''\r\n        total.value = ''\r\n        qty_sack.value = ''\r\n        ship_date.value = ''\r\n        \r\n        setISRItem({\r\n            ...ISRItem,\r\n            po_number:'',\r\n            total_sack: '',\r\n            description: '',\r\n            color: '',\r\n            total: '',\r\n            qty_sack: '',\r\n            ship_date: '',\r\n        })\r\n        \r\n    }, [ISRItem.detail_customer])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n\t\thtml2canvas(input)\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 0, 0,width,height);\r\n\t\t\tpdf.save(\"download.pdf\");  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"isr-container\">\r\n            <Row style={{ margin: \"0 auto\" }}>\r\n                {/* <Col lg={1}></Col> */}\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-form\">\r\n                        <div style={{ marginBottom: \"15px\" }}>\r\n                            <h3 className=\"form-title\">ISR</h3> \r\n                        </div>\r\n                        <ISRForm\r\n                            ISRItem={ISRItem}\r\n                            setISRItem={setISRItem}\r\n                            handlePrint={handlePrint} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-print\" id=\"printForm\">\r\n                        <ISRPrintComponent\r\n                            ISRItem={ISRItem} />\r\n                    </div>\r\n                </Col>\r\n                {/* <Col lg={1}></Col> */}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ISR\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js",["172","173"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { addDetails } from '../../../../actions/DetailsActions'\r\nimport { getItems } from '../../../../actions/ItemActions'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport { useAlert } from 'react-alert'\r\n\r\nfunction ISRForm({ISRItem,setISRItem,handlePrint}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n    const item = useSelector(state => state.item)\r\n    const [detailStyle, setdetailStyle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            if (item.length) {\r\n                let customerList = []\r\n                for (let i = 0; i !== item.length; i++){\r\n                    customerList.push(item[i].customer)\r\n                }\r\n\r\n                let UniqueCustomerList = [...new Set(customerList)]\r\n\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    customerList: UniqueCustomerList\r\n                })\r\n            }\r\n        }\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setdetailStyle({\r\n            customerList:[],\r\n            styleDict: [],\r\n        })    \r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const res = await dispatch(addDetails(ISRItem))\r\n        console.log(res)\r\n        if (res) {\r\n            alert.show(\r\n                <div className=\"alert-suc\"><FaIcons.FaCheck/> The PO has been created!</div>\r\n            )\r\n        } else {\r\n            alert.show(\r\n                <div className=\"alert-err\"><BiIcons.BiError/> Unable to create PO!</div>\r\n            )\r\n        }\r\n        document.getElementById('form-isr').reset();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        let customer = document.getElementById(\"detail_customer\");\r\n        let style = document.getElementById('detail_style');\r\n        let poNum = document.getElementById('po_number');\r\n\r\n        if (customer.value !== \"NONE\") {\r\n            let filteredItem = item.filter(i => i.customer === customer.value)\r\n            let styleDict = []\r\n            \r\n            for (let i = 0; i !== filteredItem.length; i++){\r\n                styleDict.push({\r\n                    id: filteredItem[i].id,\r\n                    style: filteredItem[i].style\r\n                })\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    styleDict: styleDict\r\n                })\r\n            }\r\n        } else {\r\n            setdetailStyle({\r\n                ...detailStyle,\r\n                styleDict: [],\r\n            })\r\n        }\r\n        \r\n       \r\n        if (style.value !== \"\" && poNum.value !== \"\" && customer.value!==\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n                // barcode: (style.options[style.selectedIndex].innerHTML +\"-\"+ poNum.value +\"-\"+ sackNum.value).toUpperCase()\r\n            })\r\n            \r\n        } else if (customer.value===\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                // barcode: '',\r\n                detail_customer: '',\r\n            })\r\n         }else {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n            })\r\n            \r\n        } \r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit} id=\"form-isr\">\r\n                <Form.Group as={Row} controlId=\"detail_customer\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Customer:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} className=\"form-caps\">\r\n                            <option key={0} value=\"NONE\">NONE</option>\r\n                            {detailStyle ? detailStyle.customerList.map((customer,index) => {\r\n                                return <option key={index}>{customer}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"detail_style\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Style:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} placeholder=\"Choose Customer\" className=\"form-caps\">\r\n                            {detailStyle ? detailStyle.styleDict.map((style,index) => {\r\n                                return <option key={index} value={style.style}>{style.style}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"po_number\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>PO Number:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"description\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"color\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Color:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"number\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"qty_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Quantity / Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ship_date\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Ship Date:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"date\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                {/* <Form.Group as={Row} controlId=\"barcode\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Barcode:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" className=\"form-caps\" disabled />\r\n                    </Col>\r\n                </Form.Group> */}\r\n                <div>\r\n                    <Button type=\"submit\" className=\"form-btn-dark\" block>\r\n                        Submit\r\n                    </Button>\r\n                    {/* <Button className=\"form-btn-light\" style={{ float: 'right' }} onClick={handlePrint}>\r\n                        Print\r\n                    </Button> */}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ISRForm\r\n",["174","175"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js",["176","177","178","179"],"import React, {useEffect, useState} from 'react'\r\nimport { Col, Container, Table, Row } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getItems } from '../../../../actions/ItemActions';\r\n\r\n\r\nfunction ISRPrintComponent({ ISRItem }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [routeList, setRouteList] = useState([])\r\n    \r\n    // const [bar, setBar] = useState('null')\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: bar ? bar:'null',\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     setBar(ISRItem.barcode)\r\n    // }, [ISRItem.barcode,ISRItem.detail_customer])\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        console.log(routeList)\r\n    }, [routeList])\r\n\r\n    useEffect(() => {\r\n        let styleField = document.getElementById('style-field');\r\n        let style = document.getElementById('detail_style');\r\n        if (style.selectedIndex!==-1) {\r\n         styleField.textContent= style.options[style.selectedIndex].innerHTML   \r\n        }\r\n        if (styleField.textContent !== null) {\r\n            let filteredStyle = item.filter(i => i.style === styleField.textContent)\r\n            if (filteredStyle.length) {\r\n                if (filteredStyle[0].process.length) {\r\n                    filteredStyle[0].process.unshift('ISR')\r\n                    let uniqueFilteredStyle = [...new Set(filteredStyle[0].process)]\r\n                    setRouteList(uniqueFilteredStyle)\r\n                }\r\n            }     \r\n        }\r\n    }, [ISRItem])\r\n\r\n    return ( \r\n        <Container className=\"print-form\">\r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    <ul>\r\n                        <li>CUSTOMER: <span>{ISRItem.detail_customer}</span></li>\r\n                        <li>PO #: <span>{ ISRItem.po_number}</span></li>\r\n                        <li>STYLE: <span id=\"style-field\">0</span> </li>\r\n                        <li>DESCRIPTION: <span>{ ISRItem.description}</span></li>\r\n                        <li>COLOR: <span>{ISRItem.color}</span></li>\r\n                        <li>TOTAL Q'TY: <span>{ ISRItem.total}</span></li>\r\n                        <li>Q'TY/SACK: <span>{ ISRItem.qty_sack}</span></li>\r\n                        <li>SHIPDATE: <span>{ISRItem.ship_date}</span></li>\r\n                    </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> 0 / { ISRItem.total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={{padding:\"30px\"}}></div> */}\r\n            {/* <div className=\"print-barcode\">\r\n                <Image ref={inputRef} />\r\n            </div> */}\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {/* <tr>\r\n                        <td>ISR</td>\r\n                        <td></td>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        <td>FINAL EXAM</td>\r\n                        <td></td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ISRPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\api\\index.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js",["180"],"export default (item = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ITEMS':\r\n            return action.payload\r\n        case 'CREATE_ITEM':\r\n            return [...item, action.payload]\r\n        default:\r\n            return item\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js",["181"],"export default (details = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DETAILS':\r\n            return action.payload\r\n        case 'CREATE_DETAILS':\r\n            return [...details, action.payload]\r\n        default:\r\n            return details\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js",[],"D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js",["182"],"export default (barcodeScanResult = [], action) => {\r\n    switch (action.type) {\r\n        case 'POST_BARCODE':\r\n            return action.payload\r\n        case 'POST_BARCODE_ERROR':\r\n            // alert(action.error)\r\n            barcodeScanResult = []\r\n            return barcodeScanResult\r\n        default:\r\n            return barcodeScanResult\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js",["183","184","185","186","187","188","189"],"import React, { useState,useEffect } from 'react'\r\nimport { Table, Col, Row, Button, Form, Card, ButtonGroup } from 'react-bootstrap'\r\nimport POPrintComponent from './POPrintComponent'\r\nimport POTable from './POTable'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { fetchDetails } from '../../../../actions/DetailsActions'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction PO() {\r\n\r\n    const [searchInput, setSearchInput] = useState(null)\r\n    const [searchResult, setSearchResult] = useState(null)\r\n    const [selectedPO, setSelectedPO] = useState(null)\r\n    const [routeList, setRouteList] = useState([])\r\n    const [generatedBarcode, setGeneratedBarcode] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const details = useSelector(state => state.details)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDetails())\r\n    }, [])\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(generatedBarcode)\r\n    }, [generatedBarcode])\r\n\r\n    useEffect(() => {\r\n        console.log(selectedPO)\r\n        if (selectedPO) {\r\n            if (selectedPO.length) {\r\n                selectedPO[0].detail_style.process.unshift('ISR')\r\n                let uniqueFilteredRoute = [...new Set(selectedPO[0].detail_style.process)]\r\n                setRouteList(uniqueFilteredRoute)\r\n            }\r\n        }\r\n    }, [selectedPO])\r\n\r\n    useEffect(() => {\r\n        setSearchResult(details)\r\n        console.log(details)\r\n    }, [details])\r\n\r\n    useEffect(() => {\r\n    \r\n        if (details) {\r\n            if (details.length) {\r\n                const searchResult = details.filter(det => (det.po_number.includes(searchInput) || det.detail_customer.toUpperCase().includes(searchInput)))  \r\n                setSearchResult(searchResult)\r\n            }\r\n        }\r\n        \r\n        \r\n    }, [searchInput])\r\n\r\n    useEffect(() => {\r\n        console.log(searchResult)\r\n    }, [searchResult])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n\t\thtml2canvas(input)\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 0, 0,width,height);\r\n\t\t\tpdf.save(\"download.pdf\");  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"isr-container\"> \r\n            <Row>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POTable\r\n                        generatedBarcode={generatedBarcode}\r\n                        setGeneratedBarcode={setGeneratedBarcode}\r\n                        handlePrint={handlePrint}\r\n                        searchResult={searchResult}\r\n                        details={details}\r\n                        selectedPO={selectedPO}\r\n                        searchInput={searchInput}\r\n                        setSearchInput={setSearchInput}\r\n                        setSelectedPO={setSelectedPO}\r\n                    />\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POPrintComponent\r\n                        generatedBarcode={generatedBarcode}\r\n                        routeList={routeList}\r\n                        selectedPO={selectedPO}\r\n                    />\r\n                    \r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PO\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js",["190"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Row} from 'react-bootstrap'\r\n\r\nfunction BarcodeScanResult({barcodeCopy}) {\r\n\r\n    const barcodeScanResult = useSelector(state => state.barcodeScanResult)\r\n\r\n    useEffect(() => {\r\n        console.log(barcodeScanResult)\r\n    }, [barcodeScanResult])\r\n    return (\r\n        <div className=\"barcode-scan-result\">\r\n            <h4 className=\"form-title\" style={{ textAlign: 'center' }}>Result</h4>\r\n            <br />\r\n            <br />\r\n            \r\n            {barcodeScanResult.length && barcodeCopy.barcode ? (\r\n                <div className=\"details-result\">\r\n                    <p><span>{barcodeCopy.barcode}</span></p>\r\n                    <h2>PO Number:<span>{barcodeCopy.barcode.split('-')[1]}</span></h2>\r\n                    <h2>STYLE:<span>{barcodeCopy.barcode.split('-')[0]}</span></h2>\r\n                    <h2>COLOR:<span>{barcodeCopy.barcode.split('-')[2]}</span></h2>\r\n                    <h2>SACK #:<span>{barcodeCopy.barcode.split('-')[3]}</span></h2>\r\n                    <h2>NEXT PROCESS:<span>{barcodeScanResult}</span></h2>\r\n                        \r\n                    </div>\r\n                ): <p>No Result</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScanResult\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardChart.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Data.js",["191"],"import React from 'react';\r\n\r\nexport const DataSample1 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 10, 16],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// hoverBackgroundColor: 'rgb(1, 171, 192,0.6)',\r\n\t\t\t// hoverBorderColor: '#00d4e2',\r\n\t\t\t// borderSkippped: 'bottom',\r\n\t\t\t// barPercentage: 1,\r\n\t\t\t// category: 1,\r\n\t\t\t// barThickness: 6,\r\n\t\t\t// maxBarThickness: 8,\r\n\t\t\t// minBarLength: 2,\r\n\t\t},\r\n\t\t// {\r\n\t\t// \tlabel: '# of Votes',\r\n\t\t// \tdata: [15, 21, 9, 8, 15, 20],\r\n\t\t// \tbackgroundColor: [\r\n\t\t// \t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t// \t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t// \t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t// \t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t// \t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t// \t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t// \t],\r\n\t\t// \tborderColor: [\r\n\t\t// \t\t'rgb(188, 233, 255, 1)',\r\n\t\t// \t\t'rgb(154, 195, 216, 1)',\r\n\t\t// \t\t'rgb(121, 159, 179, 1)',\r\n\t\t// \t\t'rgb(90, 124, 143, 1)',\r\n\t\t// \t\t'rgb(59, 91, 109, 1)',\r\n\t\t// \t\t'rgb(30, 60, 76, 1)',\r\n\t\t// \t],\r\n\t\t// \tborderWidth: 1,\r\n\t\t// \t// hoverBackgroundColor: 'rgb(1, 171, 192,0.6)',\r\n\t\t// \t// hoverBorderColor: '#00d4e2',\r\n\t\t// \t// borderSkippped: 'bottom',\r\n\t\t// \tbarPercentage: 1,\r\n\t\t// \tcategory: 1,\r\n\t\t// \t// barThickness: 6,\r\n\t\t// \t// maxBarThickness: 8,\r\n\t\t// \t// minBarLength: 2,\r\n\t\t// },\r\n\t],\r\n};\r\n\r\nexport const DataSample2 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// borderAlign: 'inner',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nexport const DataSample3 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: [\r\n\t\t\t\t'rgb(30, 60, 76, 0.7)',\r\n\t\t\t\t'rgb(59, 91, 109, 0.7)',\r\n\t\t\t\t'rgb(90, 124, 143, 0.7)',\r\n\t\t\t\t'rgb(121, 159, 179, 0.7)',\r\n\t\t\t\t'rgb(154, 195, 216, 0.7)',\r\n\t\t\t\t'rgb(188, 233, 255, 0.7)',\r\n\t\t\t],\r\n\t\t\tborderColor: [\r\n\t\t\t\t'rgb(188, 233, 255, 1)',\r\n\t\t\t\t'rgb(154, 195, 216, 1)',\r\n\t\t\t\t'rgb(121, 159, 179, 1)',\r\n\t\t\t\t'rgb(90, 124, 143, 1)',\r\n\t\t\t\t'rgb(59, 91, 109, 1)',\r\n\t\t\t\t'rgb(30, 60, 76, 1)',\r\n\t\t\t],\r\n\t\t\tborderWidth: 1,\r\n\t\t},\r\n\t],\r\n};\r\n\r\nexport const DataSample4 = {\r\n\tlabels: ['Data 1', 'Data 2', 'Data 3', 'Data 4', 'Data 5', 'Data 6'],\r\n\tdatasets: [\r\n\t\t{\r\n\t\t\tlabel: '# of Votes',\r\n\t\t\tdata: [12, 19, 3, 5, 2, 3],\r\n\t\t\tbackgroundColor: 'rgb(90, 124, 143, 0.7)',\r\n\t\t\tborderColor: 'rgb(30, 60, 76, 1)',\r\n\t\t\tborderWidth: 1,\r\n\t\t\t// borderWidth: 1.5,\r\n\t\t\t// borderCapStyle: 'round',\r\n\t\t\t// fill: false,\r\n\t\t\t// lineTension: 0,\r\n\t\t},\r\n\t],\r\n};\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js",["192","193","194","195","196"],"import React, {useState,useEffect}from 'react'\r\nimport { Col, Container, Table, Row,Image } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport ReactBarcode from 'react-barcode'\r\n\r\nfunction POTable({ selectedPO, routeList,generatedBarcode }) {\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: localBar,\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <div className=\"po-container-print-div\">\r\n            {selectedPO ? (selectedPO.length ? (\r\n                <>\r\n        <Container className=\"po-container-print\" id=\"printForm\">\r\n            \r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    \r\n                        <ul>\r\n                            <li>CUSTOMER: <span>{selectedPO[0].detail_customer}</span></li>\r\n                            <li>PO #: <span>{ selectedPO[0].po_number}</span></li>\r\n                            <li>STYLE: <span>{ selectedPO[0].detail_style.style}</span> </li>\r\n                            <li>DESCRIPTION: <span>{ selectedPO[0].description}</span></li>\r\n                            <li>COLOR: <span>{selectedPO[0].color}</span></li>\r\n                            <li>TOTAL Q'TY: <span>{ selectedPO[0].total}</span></li>\r\n                            <li>Q'TY/SACK: <span>{ selectedPO[0].qty_sack}</span></li>\r\n                            <li>SHIPDATE: <span>{selectedPO[0].ship_date}</span></li>\r\n                        </ul>\r\n                    \r\n                    \r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> {generatedBarcode.split('-')[3]} / { selectedPO[0].total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n                    </Row>\r\n                    <div className=\"print-barcode\">\r\n                        <ReactBarcode value={generatedBarcode} width={0.8} height={55} margin={0} fontSize={6}/>\r\n                    </div>\r\n                        \r\n                    </Container>\r\n                    \r\n                    </>\r\n                ):(<p>loading..</p>)):(<p style={{marginTop:'48%',textAlign:'center'}}>SELECT PO TO GENERATE ROUTE SHEET</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default POTable","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js",["197","198","199","200","201"],"import React,{useEffect,useState} from 'react'\r\nimport { Table, Col, Row, Button, Form, Card, ButtonGroup } from 'react-bootstrap'\r\nimport { fetchPurchase, addPurchase } from '../../../../api'\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as BiIcons from \"react-icons/bi\";\r\n\r\nimport { useAlert } from 'react-alert'\r\n\r\nfunction POPrintComponent({setSearchInput,setSelectedPO,details,selectedPO,searchResult,handlePrint,setGeneratedBarcode,generatedBarcode}) {\r\n\r\n\r\n    const alert = useAlert()\r\n\r\n    const handleChange = (e) => {\r\n        setSearchInput(e.target.value.toUpperCase())\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleProcess = async () => {\r\n        \r\n        const res = await addPurchase(purchaseToSubmit)\r\n        console.log(res)\r\n        if (res!==null) {\r\n            alert.show(\r\n                <div className=\"alert-suc\"><FaIcons.FaCheck /> { generatedBarcode } is on-process! </div>\r\n            )\r\n        } else {\r\n            alert.show(\r\n                <div className=\"alert-err\"><BiIcons.BiError/> Unable to process {generatedBarcode}!</div>\r\n            )\r\n        }\r\n        setDummyState(!dummyState)\r\n        handlePrint();\r\n        setSelectedPO(null)\r\n    }\r\n\r\n    const [purchaseResult, setpurchaseResult] = useState(null)\r\n    const [filteredPurchaseResult, setfilteredPurchaseResult] = useState(null)\r\n    const [purchaseActive, setPurchaseActive] = useState([])\r\n    const [dummyState, setDummyState] = useState(false)\r\n    const [purchaseToSubmit, setpurchaseToSubmit] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setDummyState(!dummyState)\r\n    }, [])\r\n\r\n    useEffect(async() => {\r\n        let flag = true;\r\n        if (flag) {\r\n            const purchaseResult = await fetchPurchase()\r\n            \r\n            setpurchaseResult(purchaseResult.data)\r\n        }\r\n        return () => {\r\n            flag=false\r\n        }\r\n    }, [dummyState])\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        if (purchaseResult && searchResult) {\r\n            if (searchResult.length) {\r\n                let purchaseResActive =[]\r\n                for (let j = 0; j != searchResult.length; j++){\r\n                    let ctr = 0;\r\n                    for (let i = 0; i != purchaseResult.length; i++){\r\n                        if (purchaseResult[i].po_number.po_number === searchResult[j].po_number && purchaseResult[i].po_number.color === searchResult[j].color && purchaseResult[i].po_number.detail_style.style === searchResult[j].detail_style.style) { \r\n                            ctr++;\r\n                        }\r\n                    }\r\n                    purchaseResActive.push(ctr)\r\n                }\r\n                \r\n                setPurchaseActive(purchaseResActive)\r\n            \r\n            }\r\n        }\r\n        \r\n    }, [purchaseResult, searchResult])\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        if (filteredPurchaseResult && selectedPO) {\r\n            if (selectedPO.length) {\r\n                setpurchaseToSubmit({\r\n                    po_number: selectedPO[0].id,\r\n                    barcode: generatedBarcode,\r\n                    sack_number: filteredPurchaseResult.length+1\r\n                })\r\n            }\r\n        }\r\n    }, [generatedBarcode,selectedPO,filteredPurchaseResult])\r\n\r\n    const handleSelect = (po,color,style) => {\r\n        let selectedDetails = details.filter((det) => { return det.po_number === po && det.color === color })\r\n        \r\n        // const purchaseResult = await fetchPurchase()\r\n        let filterPurchase = purchaseResult.filter((pr) => { return pr.po_number.po_number === po && pr.po_number.color === color && pr.po_number.detail_style.style === style })\r\n        setfilteredPurchaseResult(filterPurchase)\r\n        let genCode = selectedDetails[0].detail_style.style + '-' + selectedDetails[0].po_number + '-' + selectedDetails[0].color + '-' + (filterPurchase.length+1)\r\n        setGeneratedBarcode(genCode);\r\n        setSelectedPO(selectedDetails)\r\n    }\r\n\r\n    return (\r\n        <div className=\"po-container-form\">\r\n            <div style={{ marginBottom: \"15px\" }}>\r\n                <h3 className=\"form-title\">PURCHASE ORDERS</h3> \r\n            </div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label style={{color:'white'}}>SEARCH:</Form.Label>\r\n                    <Form.Control type='text' className=\"isr-form\" onChange={handleChange}/>\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"po-container-table\">\r\n                <Table striped bordered hover style={{backgroundColor:'white', borderRadius:'10px'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DATE CREATED</th>\r\n                            <th>PO</th>\r\n                            <th>COLOR</th>\r\n                            <th>TOTAL SACK</th>\r\n                            <th>PENDING</th>\r\n                            <th>ACTIVE</th>\r\n                            <th>SELECT</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {searchResult && purchaseActive.length && searchResult.length ? searchResult.map((det, index) => {\r\n                            return(\r\n                                <tr style={{fontSize:'15px'}} key={index}>\r\n                                    <td><Moment format=\"YYYY-MM-DD hh:mm:ss\">{ det.create_on }</Moment></td>\r\n                                    <td>{det.po_number}</td>\r\n                                    <td>{ det.color }</td>\r\n                                    <td>{det.total_sack}</td>\r\n                                    <td>{det.total_sack - purchaseActive[index]}</td>\r\n                                    <td>{purchaseActive[index]}</td>\r\n                                    <td><Button onClick={()=>handleSelect(det.po_number,det.color,det.detail_style.style)}>SELECT</Button></td>\r\n                                </tr>\r\n                            )\r\n                        }) : (\r\n                                <tr>\r\n                                    <td colSpan=\"7\" style={{textAlign:'center'}}>No Result</td>\r\n                                </tr>\r\n                        )}\r\n                        \r\n\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n            <br/>\r\n            <Card>\r\n                <Card.Body as={Row}>\r\n                    {selectedPO && purchaseToSubmit ? (\r\n                        <>\r\n                            <Col sm={9}>\r\n                            <Card.Title>{selectedPO[0].po_number}</Card.Title>\r\n                            <Card.Text>CUSTOMER: {selectedPO[0].detail_customer}</Card.Text>\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                            <Button variant=\"primary\" style={{padding:'20px 20px 20px 20px'}} onClick={handleProcess}>PROCESS 1 SACK</Button>\r\n                            </Col>\r\n                        </>\r\n                    ) : (\r\n                            <p style={{margin:'21px'}}>Select PO</p>\r\n                    )}\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default POPrintComponent\r\n\r\n","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js",["202"],"import React, { useEffect,useState } from 'react'\r\nimport { Button,Alert,Form } from 'react-bootstrap'\r\nimport { postCredentials } from '../../actions/AuthActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nfunction SignIn({setCached}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const [creds, setCreds] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    useEffect(() => {\r\n        // window.location.href = 'http://localhost:000/';\r\n        if (window.location.href !== 'http://localhost:3000/') {\r\n            window.location.href = 'http://localhost:3000/';\r\n        }\r\n        console.log(window.location.href)\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCached(cachedCreds)\r\n    }, [auth])\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const res = await dispatch(postCredentials(creds))\r\n        console.log(res)\r\n        // if (res==200) {\r\n        //     window.location.reload(); \r\n        // }\r\n         if (res === '400') {\r\n            document.getElementById('login-error').textContent=\"Incorrect Username or Password\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        } else {\r\n            document.getElementById('login-error').textContent=\"Unknown error\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        }\r\n        \r\n        \r\n    }\r\n    const handleChange = (e) => {\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n        setCreds({\r\n            ...creds,\r\n            [e.target.id]:e.target.value\r\n        },console.log(creds))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signin-container\">\r\n                <h4 style={{ textAlign: 'center' }} className=\"form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES, INC</h4>\r\n                <br />\r\n                <br/>\r\n                <h1 className=\"form-title\" style={{ textAlign: 'center' }}>Login</h1><br/>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Username\" onChange={ handleChange }/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your Username with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={ handleChange }/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" block>\r\n                        Login\r\n                    </Button>\r\n                    <br/>\r\n                    <Alert variant=\"danger\" id=\"login-error\" style={{textAlign:'center'}}>\r\n                        Incorrect Username or Password\r\n                    </Alert>\r\n                </Form>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js",["203"],"export default (auth = [], action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_SESSION':\r\n            window.localStorage.setItem(\"credentials\",JSON.stringify(action.payload))\r\n            return action.payload\r\n        case 'LOGOUT':\r\n            window.localStorage.clear()\r\n            return action.payload\r\n        case 'AUTH_ERROR':\r\n            window.localStorage.clear();\r\n            return action.error\r\n        default:\r\n            return auth\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js",["204","205"],"import React, { useEffect } from 'react'\r\nimport {Container,Table,Form} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItems } from '../../../actions/ItemActions'\r\n\r\nfunction ViewItems() {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n    return (\r\n        <div className=\"view-item-container\">\r\n            <div style={{textAlign:\"center\"}}>\r\n                <h3 className=\"form-title\">ITEMS</h3>\r\n            </div>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label style={{color:'white'}}>SEARCH:</Form.Label>\r\n                    <Form.Control type='text' className=\"isr-form\"/>\r\n                </Form.Group>\r\n            </Form>\r\n            <div className=\"po-container-table\">\r\n                <Table striped bordered hover style={{ backgroundColor: 'white', borderRadius: '10px' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>DATE</th>\r\n                            <th>CUSTOMER</th>\r\n                            <th>STYLE</th>\r\n                            <th>PROCESS</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {item.length ? item.map((i => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>1/12/1223</td>\r\n                                    <td>{i.customer.toUpperCase()}</td>\r\n                                    <td>{i.style.toUpperCase()}</td>\r\n                                    <td>{i.process.map((p)=>{return((p+', ').toUpperCase())})}</td>\r\n                                </tr>\r\n                            )\r\n                        })): (\r\n                            <tr>\r\n                                <td colSpan=\"4\" style={{textAlign:'center'}}>No Result</td>\r\n                            </tr>)\r\n                        }\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewItems\r\n",{"ruleId":"206","severity":1,"message":"207","line":12,"column":23,"nodeType":"208","messageId":"209","endLine":12,"endColumn":32},{"ruleId":"206","severity":1,"message":"210","line":12,"column":33,"nodeType":"208","messageId":"209","endLine":12,"endColumn":38},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"206","severity":1,"message":"215","line":1,"column":10,"nodeType":"208","messageId":"209","endLine":1,"endColumn":19},{"ruleId":"206","severity":1,"message":"216","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"217","line":8,"column":23,"nodeType":"208","messageId":"209","endLine":8,"endColumn":34},{"ruleId":"206","severity":1,"message":"218","line":13,"column":10,"nodeType":"208","messageId":"209","endLine":13,"endColumn":17},{"ruleId":"206","severity":1,"message":"219","line":14,"column":10,"nodeType":"208","messageId":"209","endLine":14,"endColumn":18},{"ruleId":"206","severity":1,"message":"220","line":14,"column":20,"nodeType":"208","messageId":"209","endLine":14,"endColumn":31},{"ruleId":"206","severity":1,"message":"221","line":8,"column":10,"nodeType":"208","messageId":"209","endLine":8,"endColumn":29},{"ruleId":"206","severity":1,"message":"222","line":10,"column":8,"nodeType":"208","messageId":"209","endLine":10,"endColumn":14},{"ruleId":"206","severity":1,"message":"216","line":2,"column":19,"nodeType":"208","messageId":"209","endLine":2,"endColumn":25},{"ruleId":"223","severity":1,"message":"224","line":49,"column":8,"nodeType":"225","endLine":49,"endColumn":33,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":33,"column":8,"nodeType":"225","endLine":33,"endColumn":14,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"229","line":37,"column":8,"nodeType":"225","endLine":37,"endColumn":10,"suggestions":"230"},{"ruleId":"211","replacedBy":"231"},{"ruleId":"213","replacedBy":"232"},{"ruleId":"206","severity":1,"message":"233","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":20},{"ruleId":"223","severity":1,"message":"229","line":31,"column":8,"nodeType":"225","endLine":31,"endColumn":10,"suggestions":"234"},{"ruleId":"223","severity":1,"message":"235","line":57,"column":8,"nodeType":"225","endLine":57,"endColumn":17,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":98,"column":68,"nodeType":"239","messageId":"240","endLine":98,"endColumn":70},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":10,"endColumn":2},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":10,"endColumn":2},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":12,"endColumn":2},{"ruleId":"206","severity":1,"message":"244","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":15},{"ruleId":"206","severity":1,"message":"216","line":2,"column":27,"nodeType":"208","messageId":"209","endLine":2,"endColumn":33},{"ruleId":"206","severity":1,"message":"245","line":2,"column":35,"nodeType":"208","messageId":"209","endLine":2,"endColumn":39},{"ruleId":"206","severity":1,"message":"246","line":2,"column":41,"nodeType":"208","messageId":"209","endLine":2,"endColumn":45},{"ruleId":"206","severity":1,"message":"247","line":2,"column":47,"nodeType":"208","messageId":"209","endLine":2,"endColumn":58},{"ruleId":"223","severity":1,"message":"229","line":23,"column":8,"nodeType":"225","endLine":23,"endColumn":10,"suggestions":"248"},{"ruleId":"223","severity":1,"message":"249","line":56,"column":8,"nodeType":"225","endLine":56,"endColumn":21,"suggestions":"250"},{"ruleId":"206","severity":1,"message":"251","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":12},{"ruleId":"206","severity":1,"message":"252","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"253","line":1,"column":16,"nodeType":"208","messageId":"209","endLine":1,"endColumn":24},{"ruleId":"206","severity":1,"message":"215","line":1,"column":25,"nodeType":"208","messageId":"209","endLine":1,"endColumn":34},{"ruleId":"206","severity":1,"message":"254","line":2,"column":37,"nodeType":"208","messageId":"209","endLine":2,"endColumn":42},{"ruleId":"206","severity":1,"message":"233","line":3,"column":10,"nodeType":"208","messageId":"209","endLine":3,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":60,"column":68,"nodeType":"239","messageId":"240","endLine":60,"endColumn":70},{"ruleId":"206","severity":1,"message":"247","line":2,"column":47,"nodeType":"208","messageId":"209","endLine":2,"endColumn":58},{"ruleId":"223","severity":1,"message":"255","line":50,"column":8,"nodeType":"225","endLine":50,"endColumn":10,"suggestions":"256"},{"ruleId":"223","severity":1,"message":"257","line":52,"column":15,"nodeType":"239","endLine":62,"endColumn":6},{"ruleId":"258","severity":1,"message":"259","line":70,"column":35,"nodeType":"260","messageId":"261","endLine":70,"endColumn":37},{"ruleId":"258","severity":1,"message":"259","line":72,"column":39,"nodeType":"260","messageId":"261","endLine":72,"endColumn":41},{"ruleId":"223","severity":1,"message":"262","line":28,"column":8,"nodeType":"225","endLine":28,"endColumn":14,"suggestions":"263"},{"ruleId":"241","severity":1,"message":"242","line":1,"column":1,"nodeType":"243","endLine":15,"endColumn":2},{"ruleId":"206","severity":1,"message":"264","line":2,"column":9,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"223","severity":1,"message":"229","line":13,"column":8,"nodeType":"225","endLine":13,"endColumn":10,"suggestions":"265"},"no-unused-vars","'positions' is defined but never used.","Identifier","unusedVar","'types' is defined but never used.","no-native-reassign",["266"],"no-negated-in-lhs",["267"],"'useEffect' is defined but never used.","'Button' is defined but never used.","'useSelector' is defined but never used.","'isAdmin' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'GiConsoleController' is defined but never used.","'SignIn' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ISRItem'. Either include it or remove the dependency array. You can also do a functional update 'setISRItem(I => ...)' if you only need 'ISRItem' in the 'setISRItem' call.","ArrayExpression",["268"],"React Hook useEffect has a missing dependency: 'detailStyle'. Either include it or remove the dependency array. You can also do a functional update 'setdetailStyle(d => ...)' if you only need 'detailStyle' in the 'setdetailStyle' call.",["269"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["270"],["266"],["267"],"'useBarcode' is defined but never used.",["271"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["272"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Table' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'ButtonGroup' is defined but never used.",["273"],"React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array.",["274"],"'Row' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","React Hook useEffect has a missing dependency: 'dummyState'. Either include it or remove the dependency array. You can also do a functional update 'setDummyState(d => ...)' if you only need 'dummyState' in the 'setDummyState' call.",["275"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setCached'. Either include it or remove the dependency array. If 'setCached' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"'Container' is defined but never used.",["277"],"no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"285","fix":"286"},{"desc":"282","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"282","fix":"294"},"Update the dependencies array to be: [ISRItem, ISRItem.detail_customer]",{"range":"295","text":"296"},"Update the dependencies array to be: [detailStyle, item]",{"range":"297","text":"298"},"Update the dependencies array to be: [dispatch]",{"range":"299","text":"300"},{"range":"301","text":"300"},"Update the dependencies array to be: [ISRItem, item]",{"range":"302","text":"303"},{"range":"304","text":"300"},"Update the dependencies array to be: [details, searchInput]",{"range":"305","text":"306"},"Update the dependencies array to be: [dummyState]",{"range":"307","text":"308"},"Update the dependencies array to be: [auth, setCached]",{"range":"309","text":"310"},{"range":"311","text":"300"},[1472,1497],"[ISRItem, ISRItem.detail_customer]",[1156,1162],"[detailStyle, item]",[1227,1229],"[dispatch]",[961,963],[1889,1898],"[ISRItem, item]",[887,889],[1829,1842],"[details, searchInput]",[1718,1720],"[dummyState]",[943,949],"[auth, setCached]",[390,392]]