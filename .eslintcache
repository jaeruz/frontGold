[{"D:\\PROJECTS\\frontgold\\src\\index.js":"1","D:\\PROJECTS\\frontgold\\src\\App.js":"2","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js":"3","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js":"4","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js":"5","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js":"6","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js":"7","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js":"8","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js":"9","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js":"10","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js":"11","D:\\PROJECTS\\frontgold\\src\\api\\index.js":"12","D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js":"13","D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js":"14","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js":"15","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js":"16","D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js":"17","D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js":"18","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js":"19","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js":"20","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js":"21","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js":"22","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js":"23","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js":"24","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js":"25","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js":"26","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js":"27","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js":"28","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js":"29","D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js":"30","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js":"31","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js":"32","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js":"33","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashCard.js":"34","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashPie.js":"35","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTodayTable.js":"36","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardStatusMonitoring.js":"37","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusTableReducer.js":"38","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusListReducer.js":"39","D:\\PROJECTS\\frontgold\\src\\reducers\\RouteTableReducer.js":"40","D:\\PROJECTS\\frontgold\\src\\actions\\StatusActions.js":"41"},{"size":1649,"mtime":1611092794737,"results":"42","hashOfConfig":"43"},{"size":1853,"mtime":1611215129889,"results":"44","hashOfConfig":"43"},{"size":3646,"mtime":1611214801730,"results":"45","hashOfConfig":"43"},{"size":3156,"mtime":1610609959039,"results":"46","hashOfConfig":"43"},{"size":3704,"mtime":1611211130996,"results":"47","hashOfConfig":"43"},{"size":3887,"mtime":1611415642926,"results":"48","hashOfConfig":"43"},{"size":1953,"mtime":1611215101235,"results":"49","hashOfConfig":"43"},{"size":11774,"mtime":1611418030657,"results":"50","hashOfConfig":"43"},{"size":3174,"mtime":1611128650204,"results":"51","hashOfConfig":"43"},{"size":9571,"mtime":1610603135317,"results":"52","hashOfConfig":"43"},{"size":5295,"mtime":1610603191118,"results":"53","hashOfConfig":"43"},{"size":4261,"mtime":1611403080623,"results":"54","hashOfConfig":"43"},{"size":558,"mtime":1611403875618,"results":"55","hashOfConfig":"43"},{"size":259,"mtime":1609223499265,"results":"56","hashOfConfig":"43"},{"size":273,"mtime":1609608821128,"results":"57","hashOfConfig":"43"},{"size":604,"mtime":1609889429429,"results":"58","hashOfConfig":"43"},{"size":530,"mtime":1611403910296,"results":"59","hashOfConfig":"43"},{"size":560,"mtime":1611086016608,"results":"60","hashOfConfig":"43"},{"size":2439,"mtime":1611085432036,"results":"61","hashOfConfig":"43"},{"size":3958,"mtime":1611079126076,"results":"62","hashOfConfig":"43"},{"size":2997,"mtime":1611086237420,"results":"63","hashOfConfig":"43"},{"size":1453,"mtime":1611085371445,"results":"64","hashOfConfig":"43"},{"size":1036,"mtime":1611086342970,"results":"65","hashOfConfig":"43"},{"size":4656,"mtime":1611087565384,"results":"66","hashOfConfig":"43"},{"size":9298,"mtime":1611195962237,"results":"67","hashOfConfig":"43"},{"size":3695,"mtime":1610637531544,"results":"68","hashOfConfig":"43"},{"size":479,"mtime":1610289807696,"results":"69","hashOfConfig":"43"},{"size":886,"mtime":1610639967552,"results":"70","hashOfConfig":"43"},{"size":156,"mtime":1610040170685,"results":"71","hashOfConfig":"43"},{"size":188,"mtime":1610040379997,"results":"72","hashOfConfig":"43"},{"size":13565,"mtime":1611162005284,"results":"73","hashOfConfig":"43"},{"size":4273,"mtime":1611162009950,"results":"74","hashOfConfig":"43"},{"size":4463,"mtime":1611162014762,"results":"75","hashOfConfig":"43"},{"size":393,"mtime":1611177347058,"results":"76","hashOfConfig":"43"},{"size":862,"mtime":1611401679714,"results":"77","hashOfConfig":"43"},{"size":3194,"mtime":1611417040348,"results":"78","hashOfConfig":"43"},{"size":4418,"mtime":1611209621993,"results":"79","hashOfConfig":"43"},{"size":183,"mtime":1611403823526,"results":"80","hashOfConfig":"43"},{"size":180,"mtime":1611403855905,"results":"81","hashOfConfig":"43"},{"size":180,"mtime":1611403854495,"results":"82","hashOfConfig":"43"},{"size":802,"mtime":1611404699801,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"17d0ngb",{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"87"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"87"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"87"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"87"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"87"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"87"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"87"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"87"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"87"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"87"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"87"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"87"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"87"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"87"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"87"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"87"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"87"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"D:\\PROJECTS\\frontgold\\src\\index.js",["195","196"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers/RootReducer'\n\nimport { transitions, positions,types, Provider as AlertProvider } from 'react-alert'\n// import AlertTemplate from 'react-alert-template-basic'\n\n\nconst options = {\n  // you can also just use 'bottom center'\n  position: 'top right',\n  timeout: 3000,\n  // offset: '70px',\n  // you can also just use 'scale'\n  \n  transition: transitions.SCALE,\n  containerStyle: {\n    zIndex: 80000\n  }\n}\n\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    {message}\n    {/* <button onClick={close}>X</button> */}\n  </div>\n)\n\n\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nstore.subscribe(() => {\n  // const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n  // console.log(cachedCreds.token)\n  console.log(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <App />\n        </AlertProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["197","198"],"D:\\PROJECTS\\frontgold\\src\\App.js",["199","200","201","202","203"],"import { useEffect, useState } from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { logout } from \"./actions/AuthActions\"\nimport SignIn from \"./components/auth/SignIn\"\nimport MyNavbar from \"./components/layout/MyNavbar\"\nimport Pages from \"./components/pages/Pages\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nfunction App() {\n  const [sidebar, setSidebar] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [cached, setCached] = useState(null)\n  const dispatch = useDispatch()\n  const [isMain, setIsMain] = useState(false)\n\n  document.onkeydown = function (evt) {\n    evt = evt || window.event\n    var isEscape = false\n    if (\"key\" in evt) {\n      isEscape = evt.key === \"Escape\" || evt.key === \"Esc\"\n    } else {\n      isEscape = evt.keyCode === 27\n    }\n    if (isEscape) {\n      setSidebar(false)\n    }\n  }\n  const auth = useSelector((state) => state.auth)\n\n  const handleLogout = () => {\n    dispatch(logout())\n\n    setSidebar(false)\n  }\n\n  useEffect(() => {\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\n    setCached(cacheCreds)\n  }, [auth])\n\n  if (cached) {\n    return (\n      <BrowserRouter>\n        <div className=\"nav\">\n          {\" \"}\n          {/*onMouseLeave={() => { setSidebar(false)}}>*/}\n          <MyNavbar\n            sidebar={sidebar}\n            setSidebar={setSidebar}\n            isAdmin={cached.is_Admin}\n            setIsAdmin={setIsAdmin}\n            handleLogout={handleLogout}\n            isMain={isMain}\n          />\n        </div>\n        <Pages sidebar={sidebar} setSidebar={setSidebar} isMain={isMain} />\n      </BrowserRouter>\n    )\n  } else {\n    //signin\n    return <SignIn setCached={setCached} cached={cached} />\n  }\n}\n\nexport default App\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js",["204","205"],"import React from \"react\"\r\nimport { Link, withRouter } from \"react-router-dom\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { SideBarDataAdmin, SideBarDataStaff } from \"./SideBarData\"\r\nimport { IconContext } from \"react-icons\"\r\nimport SideBarMenu from \"./SideBarMenu\"\r\nimport * as RiIcons from \"react-icons/ri\"\r\nimport { GiConsoleController } from \"react-icons/gi\"\r\n\r\nfunction MyNavbar({\r\n  sidebar,\r\n  setSidebar,\r\n  isAdmin,\r\n  setIsAdmin,\r\n  handleLogout,\r\n  history,\r\n  isMain,\r\n}) {\r\n  const showSidebar = () => setSidebar(!sidebar)\r\n\r\n  const handleClick = () => {\r\n    handleLogout()\r\n    window.localStorage.clear()\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"white\" }}>\r\n        <div className=\"navbar\">\r\n          <Link to=\"#\" className=\"menu-bars\">\r\n            <FaIcons.FaBars onClick={showSidebar} />\r\n          </Link>\r\n\r\n          {isAdmin ? (\r\n            <div\r\n              onClick={() => {\r\n                setIsAdmin(!isAdmin)\r\n              }}\r\n            >\r\n              <FaIcons.FaUserTie style={{ fontSize: \"30px\" }} />\r\n              <span style={{ color: \"white\", marginRight: \"10px\" }}>Admin</span>\r\n            </div>\r\n          ) : (\r\n            <div\r\n              onClick={() => {\r\n                setIsAdmin(!isAdmin)\r\n              }}\r\n            >\r\n              <FaIcons.FaUserInjured style={{ fontSize: \"30px\" }} />\r\n              <span style={{ color: \"white\", marginRight: \"10px\" }}>Staff</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n          <ul className=\"nav-menu-items\">\r\n            {/* <li className=\"navbar-toggle\">\r\n                        <Link to=\"#\" className=\"menu-bars\">\r\n                            <AiIcons.AiOutlineClose onClick={showSidebar}/>\r\n                        </Link>\r\n                    </li> */}\r\n            {isAdmin\r\n              ? SideBarDataAdmin.map((item, index) => {\r\n                  if (isMain) {\r\n                    if (item.title !== \"Orders\") {\r\n                      return (\r\n                        <SideBarMenu\r\n                          item={item}\r\n                          key={index}\r\n                          isMain={isMain}\r\n                          showSidebar={showSidebar}\r\n                        />\r\n                      )\r\n                    }\r\n                  } else {\r\n                    return (\r\n                      <SideBarMenu\r\n                        item={item}\r\n                        key={index}\r\n                        isMain={isMain}\r\n                        showSidebar={showSidebar}\r\n                      />\r\n                    )\r\n                  }\r\n                })\r\n              : SideBarDataStaff.map((item, index) => {\r\n                  return (\r\n                    <SideBarMenu\r\n                      item={item}\r\n                      key={index}\r\n                      showSidebar={showSidebar}\r\n                    />\r\n                  )\r\n                })}\r\n            {/* {SideBarDataAdmin.map((item, index) => {\r\n                        return (\r\n                           <SideBarMenu item={item} key={index}/>\r\n                        )\r\n                    })} */}\r\n\r\n            <li\r\n              style={{ display: \"block\", width: \"100%\" }}\r\n              className=\"nav-text\"\r\n              onClick={handleClick}\r\n            >\r\n              <RiIcons.RiLogoutBoxLine />\r\n              <span>LOGOUT</span>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(MyNavbar)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js",["206"],"import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as AiIcons from 'react-icons/ai'\r\nimport * as IoIcons from 'react-icons/io'\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GiIcons from 'react-icons/gi';\r\nimport * as VscIcons from 'react-icons/vsc';\r\n\r\n\r\nexport const SideBarDataAdmin = [\r\n    {\r\n        title: 'Dashboard',\r\n        path: '/',\r\n        icon: <RiIcons.RiDashboardLine />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Items',\r\n        path: '#',\r\n        icon: <GiIcons.GiGloves />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Add Item',\r\n                path: '/items/add',\r\n                icon: <FaIcons.FaPlus />\r\n            },\r\n            {\r\n                title: 'View Items',\r\n                path: '/items/view',\r\n                icon: <IoIcons.IoIosPaper />\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Orders',\r\n        path: '#',\r\n        icon: <VscIcons.VscGear />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Create PO',\r\n                path: '/process/isr',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n           \r\n            {\r\n                title: 'View PO',\r\n                path: '/po/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            \r\n        ]\r\n    },\r\n    {\r\n        title: 'Barcodes',\r\n        path: '#',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        subNav: [\r\n            {\r\n                title: 'Generate Barcodes',\r\n                path: '/process/po',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'View Barcodes',\r\n                path: '/barcodes/view',\r\n                icon: <FaIcons.FaPrint />\r\n            },\r\n            {\r\n                title: 'Barcode Scan',\r\n                path: '/process/scan',\r\n                icon: <FaIcons.FaBarcode />,\r\n                class_name: 'nav-text',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: 'Admin Page',\r\n        path: '/adminpage',\r\n        icon: <FaIcons.FaUsers />,\r\n        class_name: 'nav-text',\r\n    },\r\n]\r\n\r\nexport const SideBarDataStaff = [\r\n    // {\r\n    //     title: 'Home',\r\n    //     path: '/',\r\n    //     icon: <AiIcons.AiFillHome />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n    {\r\n        title: 'Barcode Scan',\r\n        path: '/process/scan',\r\n        icon: <FaIcons.FaBarcode />,\r\n        class_name: 'nav-text',\r\n    },\r\n    {\r\n        title: 'Routing Info',\r\n        path: '/info',\r\n        icon: <FaIcons.FaBook />,\r\n        class_name: 'nav-text',\r\n    },\r\n    // {\r\n    //     title: 'Logs',\r\n    //     path: '/logs',\r\n    //     icon: <FaIcons.FaBook />,\r\n    //     class_name: 'nav-text',\r\n    // },\r\n]","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js",["207","208"],"import React, { useEffect, useState } from \"react\"\r\nimport { Route, Switch, withRouter } from \"react-router-dom\"\r\nimport Dashboard from \"./dashboard/Dashboard\"\r\nimport AddItem from \"./items/AddItem\"\r\nimport PageUnavailable from \"./home/PageUnavailable\"\r\nimport Home from \"./home/Home\"\r\nimport BarcodeScan from \"./process/BarcodeScan.js/BarcodeScan\"\r\nimport ISR from \"./process/ISR/ISR\"\r\nimport PO from \"./process/PO/PO\"\r\nimport SignIn from \"../auth/SignIn\"\r\nimport ViewItems from \"./items/ViewItems\"\r\nimport ViewBarcodes from \"./process/PO/ViewBarcodes\"\r\nimport ViewDetails from \"./process/ISR/ViewDetails\"\r\n\r\nfunction Pages({ sidebar, history, setSidebar, isMain }) {\r\n  const [cachedCreds, setCachedCreds] = useState(null)\r\n\r\n  history.listen((location, action) => {\r\n    // console.log(history)\r\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n    setCachedCreds(cacheCreds)\r\n  })\r\n\r\n  useEffect(() => {\r\n    const cacheCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n    setCachedCreds(cacheCreds)\r\n  }, [])\r\n\r\n  return (\r\n    <div className={sidebar ? \"main-container-active\" : \"main-container\"}>\r\n      {cachedCreds ? (\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? Dashboard\r\n                : () => {\r\n                    window.location.href =\r\n                      window.location.protocol +\r\n                      \"//\" +\r\n                      window.location.host +\r\n                      \"/process/scan\"\r\n                  }\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/items/add\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => <AddItem isMain={isMain} />\r\n                : PageUnavailable\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/process/isr\"\r\n            component={cachedCreds.is_Admin ? ISR : PageUnavailable}\r\n          />\r\n          {/* <Route exact path=\"/signin\" component={cachedCreds ? PageUnavailable :  SignIn } /> */}\r\n          <Route\r\n            exact\r\n            path=\"/process/scan\"\r\n            component={cachedCreds.is_Admin ? BarcodeScan : BarcodeScan}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/process/po\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => <PO setSidebar={setSidebar} sidebar={sidebar} />\r\n                : PageUnavailable\r\n            }\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/items/view\"\r\n            component={cachedCreds.is_Admin ? ViewItems : PageUnavailable}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/po/view\"\r\n            component={cachedCreds.is_Admin ? ViewDetails : PageUnavailable}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/barcodes/view\"\r\n            component={cachedCreds.is_Admin ? ViewBarcodes : PageUnavailable}\r\n          />\r\n\r\n          <Route\r\n            exact\r\n            path=\"/adminpage\"\r\n            component={\r\n              cachedCreds.is_Admin\r\n                ? () => {\r\n                    window.location.href =\r\n                      window.location.protocol +\r\n                      \"//\" +\r\n                      window.location.hostname +\r\n                      \":8000\" +\r\n                      \"/admin\"\r\n                    return <h4>Session Expired</h4>\r\n                  }\r\n                : PageUnavailable\r\n            }\r\n          />\r\n        </Switch>\r\n      ) : (\r\n        <p>Loading..</p>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Pages)\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js",["209","210","211"],"import React, { useState, useEffect } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchDetails } from \"../../../actions/DetailsActions\"\r\nimport DashCard from \"./DashCard\"\r\nimport DashPie from \"./DashPie\"\r\nimport * as GiIcons from \"react-icons/gi\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport DashboardTodayTable from \"./DashboardTodayTable\"\r\nimport DashboardStatusMonitoring from \"./DashboardStatusMonitoring\"\r\nimport moment from \"moment\"\r\nimport {\r\n  getRouteTable,\r\n  getStatusList,\r\n  getStatusTable,\r\n} from \"../../../actions/StatusActions\"\r\n\r\nfunction Dashboard() {\r\n  const dispatch = useDispatch()\r\n  const routeTable = useSelector((state) => state.routeTable)\r\n  const statusTable = useSelector((state) => state.statusTable)\r\n  const statusList = useSelector((state) => state.statusList)\r\n\r\n  const [tableFlag, setTableFlag] = useState(false)\r\n  const [perProcessToday, setPerProcessToday] = useState({\r\n    KNITTING: 0,\r\n    CUTTING: 0,\r\n    RECEIPTS: 0,\r\n    STEAMING: 0,\r\n    EXAMINING: 0,\r\n    SEWING: 0,\r\n    STEAMING_1: 0,\r\n    EXAMINING_1: 0,\r\n    TAGGING: 0,\r\n    METALDETECT: 0,\r\n    BOXING: 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(getRouteTable())\r\n    dispatch(getStatusList())\r\n    dispatch(getStatusTable())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(routeTable)\r\n  }, [routeTable])\r\n\r\n  useEffect(() => {\r\n    console.log(statusTable)\r\n    todayQuantityPerProcess()\r\n  }, [statusTable])\r\n\r\n  useEffect(() => {\r\n    console.log(statusList)\r\n  }, [statusList])\r\n\r\n  const todayQuantityPerProcess = () => {\r\n    if (statusTable && statusTable.length) {\r\n      const dateNow = new Date(Date.now())\r\n      const dateFmt = moment(dateNow).format(\"YYYY-MM-DD\")\r\n\r\n      const filterTodayData = statusTable.filter((s) => s.date === dateFmt)\r\n\r\n      let tempPPT = {\r\n        KNITTING: 0,\r\n        CUTTING: 0,\r\n        RECEIPTS: 0,\r\n        STEAMING: 0,\r\n        EXAMINING: 0,\r\n        SEWING: 0,\r\n        STEAMING_1: 0,\r\n        EXAMINING_1: 0,\r\n        TAGGING: 0,\r\n        METALDETECT: 0,\r\n        BOXING: 0,\r\n      }\r\n      filterTodayData.forEach((ftd) => {\r\n        Object.keys(tempPPT).forEach((ppt) => {\r\n          if (ppt.toString() === ftd.process.toString().toUpperCase()) {\r\n            tempPPT[ppt] += ftd.qty\r\n          }\r\n        })\r\n      })\r\n      console.log(tempPPT)\r\n      setPerProcessToday(tempPPT)\r\n      setTableFlag(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dash-wrapper\">\r\n      <div className=\"dash-container\">\r\n        <h5>DASHBOARD</h5>\r\n\r\n        <h4>Volume Today</h4>\r\n        <Row>\r\n          <Col lg={3}>\r\n            <DashCard\r\n              stylclass={\"dash-card-1\"}\r\n              icon={<FaIcons.FaCalendarCheck fontSize={45} />}\r\n              val={353}\r\n              caption={\"CUMULATIVE OUTPUT\"}\r\n            />\r\n            <DashCard\r\n              stylclass={\"dash-card-2\"}\r\n              icon={<FaIcons.FaExclamationCircle fontSize={45} />}\r\n              val={185}\r\n              caption={\"REMAINING BALANCE\"}\r\n            />\r\n            <DashCard\r\n              stylclass={\"dash-card-3\"}\r\n              icon={<GiIcons.GiKnapsack fontSize={45} />}\r\n              val={130}\r\n              caption={\"TOTAL SACKS CREATED\"}\r\n            />\r\n          </Col>\r\n          <Col lg={9}>\r\n            <DashPie />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <div>\r\n          {tableFlag ? (\r\n            <DashboardTodayTable perProcessToday={perProcessToday} />\r\n          ) : (\r\n            <p>Loading..</p>\r\n          )}\r\n        </div>\r\n        <br />\r\n        <hr />\r\n        <br />\r\n        <div className=\"dash-status-monitoring-div\">\r\n          <DashboardStatusMonitoring />\r\n        </div>\r\n        <div style={{ paddingBottom: \"500px\" }}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js",["212"],"import React, { useState, useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction SideBarMenu({ item, showSidebar, isMain }) {\r\n  const [subnav, setSubnav] = useState(false)\r\n  const showSubnav = () => setSubnav(!subnav)\r\n  useEffect(() => {\r\n    console.log(subnav)\r\n  }, [subnav])\r\n  return (\r\n    <li>\r\n      <Link\r\n        to={item.path}\r\n        className={item.class_name}\r\n        onClick={item.subNav && showSubnav}\r\n      >\r\n        <div>\r\n          {item.icon}\r\n          <span>{item.title}</span>\r\n        </div>\r\n        <div>\r\n          {item.subNav && subnav\r\n            ? item.iconOpened\r\n            : item.subNav\r\n            ? item.iconClosed\r\n            : null}\r\n        </div>\r\n      </Link>\r\n      {subnav &&\r\n        item.subNav.map((item, index) => {\r\n          if (isMain) {\r\n            if (item.title !== \"Generate Barcodes\") {\r\n              return (\r\n                <Link\r\n                  to={item.path}\r\n                  key={index}\r\n                  className=\"sub-links\"\r\n                  onClick={\r\n                    item.path === \"/process/scan\" || item.path === \"/process/po\"\r\n                      ? () => showSidebar()\r\n                      : null\r\n                  }\r\n                >\r\n                  {item.icon}\r\n                  <span>{item.title}</span>\r\n                </Link>\r\n              )\r\n            }\r\n          } else {\r\n            return (\r\n              <Link\r\n                to={item.path}\r\n                key={index}\r\n                className=\"sub-links\"\r\n                onClick={\r\n                  item.path === \"/process/scan\" || item.path === \"/process/po\"\r\n                    ? () => showSidebar()\r\n                    : null\r\n                }\r\n              >\r\n                {item.icon}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            )\r\n          }\r\n        })}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default SideBarMenu\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js",["213"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js",["214","215"],"import React,{useEffect, useState} from 'react'\r\nimport { Col, Row,Button } from 'react-bootstrap'\r\nimport ISRForm from './ISRForm'\r\nimport ISRPrintComponent from './ISRPrintComponent'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction ISR() {\r\n    const [ISRItem, setISRItem] = useState({\r\n        detail_customer: '',\r\n        po_number:'',\r\n        total_sack: '',\r\n        description: '',\r\n        color: '',\r\n        size:'',\r\n        total: '',\r\n        qty_sack: '',\r\n        ship_date: '',\r\n        detail_style: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        let totalSack = document.getElementById('total_sack');\r\n        let poNum = document.getElementById('po_number');\r\n        let description = document.getElementById('description');\r\n        let color = document.getElementById('color');\r\n        let total = document.getElementById('total');\r\n        let qty_sack = document.getElementById('qty_sack');\r\n        let size = document.getElementById('size');\r\n        let ship_date = document.getElementById('ship_date');\r\n\r\n        totalSack.value = ''\r\n        poNum.value = ''\r\n        description.value = ''\r\n        color.value = ''\r\n        total.value = ''\r\n        qty_sack.value = ''\r\n        ship_date.value = ''\r\n        size.value = ''\r\n        \r\n        setISRItem({\r\n            ...ISRItem,\r\n            po_number:'',\r\n            total_sack: '',\r\n            description: '',\r\n            size:'',\r\n            color: '',\r\n            total: '',\r\n            qty_sack: '',\r\n            ship_date: '',\r\n        })\r\n        \r\n    }, [ISRItem.detail_customer])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n\t\thtml2canvas(input)\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 0, 0,width,height);\r\n\t\t\tpdf.save(\"download.pdf\");  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"isr-wrapper\">\r\n        <div className=\"isr-container\">\r\n            <Row style={{ margin: \"0 auto\" }}>\r\n                {/* <Col lg={1}></Col> */}\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-form\">\r\n                        <div style={{ marginBottom: \"15px\" }}>\r\n                            <h3 className=\"form-title\">ISR</h3> \r\n                        </div>\r\n                        <ISRForm\r\n                            ISRItem={ISRItem}\r\n                            setISRItem={setISRItem}\r\n                            handlePrint={handlePrint} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-print\" id=\"printForm\">\r\n                        <ISRPrintComponent\r\n                            ISRItem={ISRItem} />\r\n                    </div>\r\n                </Col>\r\n                {/* <Col lg={1}></Col> */}\r\n            </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ISR\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js",["216","217"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { addDetails } from '../../../../actions/DetailsActions'\r\nimport { getItems } from '../../../../actions/ItemActions'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport { useAlert } from 'react-alert'\r\n\r\nfunction ISRForm({ISRItem,setISRItem,handlePrint}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n    const item = useSelector(state => state.item)\r\n    const [detailStyle, setdetailStyle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            if (item.length) {\r\n                let customerList = []\r\n                for (let i = 0; i !== item.length; i++){\r\n                    customerList.push(item[i].customer)\r\n                }\r\n\r\n                let UniqueCustomerList = [...new Set(customerList)]\r\n\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    customerList: UniqueCustomerList\r\n                })\r\n            }\r\n        }\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setdetailStyle({\r\n            customerList:[],\r\n            styleDict: [],\r\n        })    \r\n    }, [])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const res = await dispatch(addDetails(ISRItem))\r\n        console.log(res)\r\n        if (res) {\r\n            alert.show(\r\n                <div className=\"alert-suc\"><FaIcons.FaCheck/> The PO has been created!</div>\r\n            )\r\n        } else {\r\n            alert.show(\r\n                <div className=\"alert-err\"><BiIcons.BiError/> Unable to create PO!</div>\r\n            )\r\n        }\r\n        document.getElementById('form-isr').reset();\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        let customer = document.getElementById(\"detail_customer\");\r\n        let style = document.getElementById('detail_style');\r\n        let poNum = document.getElementById('po_number');\r\n        let total = document.getElementById('total');\r\n        let qtySack = document.getElementById('qty_sack');\r\n        let totalSack = document.getElementById('total_sack');\r\n        \r\n\r\n        if (customer.value !== \"NONE\") {\r\n            let filteredItem = item.filter(i => i.customer === customer.value)\r\n            let styleDict = []\r\n            \r\n            for (let i = 0; i !== filteredItem.length; i++){\r\n                styleDict.push({\r\n                    id: filteredItem[i].id,\r\n                    style: filteredItem[i].style\r\n                })\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    styleDict: styleDict\r\n                })\r\n            }\r\n        } else {\r\n            setdetailStyle({\r\n                ...detailStyle,\r\n                styleDict: [],\r\n            })\r\n        }\r\n        \r\n       \r\n        if (style.value !== \"\" && poNum.value !== \"\" && customer.value !== \"NONE\") {\r\n            if (total.value !== \"\" && qtySack.value !== \"\") {\r\n                if (total.value%qtySack.value !== 0) {\r\n                    totalSack.value=(Math.trunc(total.value/qtySack.value))+1\r\n                } else {\r\n                    totalSack.value=(total.value/qtySack.value)\r\n                }\r\n            }\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n                total_sack: totalSack.value\r\n                // barcode: (style.options[style.selectedIndex].innerHTML +\"-\"+ poNum.value +\"-\"+ sackNum.value).toUpperCase()\r\n            })\r\n            \r\n        } else if (customer.value===\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                // barcode: '',\r\n                detail_customer: '',\r\n            })\r\n         }else {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n            })\r\n            \r\n        } \r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit} id=\"form-isr\">\r\n                <Form.Group as={Row} controlId=\"detail_customer\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Customer:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} className=\"form-caps\">\r\n                            <option key={0} value=\"NONE\">NONE</option>\r\n                            {detailStyle ? detailStyle.customerList.map((customer,index) => {\r\n                                return <option key={index}>{customer}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"detail_style\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Style:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required as=\"select\" onChange={handleChange} placeholder=\"Choose Customer\" className=\"form-caps\">\r\n                            {detailStyle ? detailStyle.styleDict.map((style,index) => {\r\n                                return <option key={index} value={style.style}>{style.style}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"po_number\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>PO Number:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"description\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"color\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Color:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"size\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Size:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"number\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"qty_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Quantity / Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ship_date\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Ship Date:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control required type=\"date\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                {/* <Form.Group as={Row} controlId=\"barcode\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Barcode:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" className=\"form-caps\" disabled />\r\n                    </Col>\r\n                </Form.Group> */}\r\n                <div>\r\n                    <Button type=\"submit\" className=\"form-btn-dark\" block>\r\n                        Submit\r\n                    </Button>\r\n                    {/* <Button className=\"form-btn-light\" style={{ float: 'right' }} onClick={handlePrint}>\r\n                        Print\r\n                    </Button> */}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ISRForm\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js",["218","219","220","221"],"import React, {useEffect, useState} from 'react'\r\nimport { Col, Container, Table, Row } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getItems } from '../../../../actions/ItemActions';\r\n\r\n\r\nfunction ISRPrintComponent({ ISRItem }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [routeList, setRouteList] = useState([])\r\n    \r\n    // const [bar, setBar] = useState('null')\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: bar ? bar:'null',\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     setBar(ISRItem.barcode)\r\n    // }, [ISRItem.barcode,ISRItem.detail_customer])\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        console.log(routeList)\r\n    }, [routeList])\r\n\r\n    useEffect(() => {\r\n        let styleField = document.getElementById('style-field');\r\n        let style = document.getElementById('detail_style');\r\n        if (style.selectedIndex!==-1) {\r\n         styleField.textContent= style.options[style.selectedIndex].innerHTML   \r\n        }\r\n        if (styleField.textContent !== null) {\r\n            let filteredStyle = item.filter(i => i.style === styleField.textContent)\r\n            if (filteredStyle.length) {\r\n                if (filteredStyle[0].process.length) {\r\n                    filteredStyle[0].process.unshift('ISR')\r\n                    let uniqueFilteredStyle = [...new Set(filteredStyle[0].process)]\r\n                    setRouteList(uniqueFilteredStyle)\r\n                }\r\n            }     \r\n        }\r\n    }, [ISRItem])\r\n\r\n    return ( \r\n        <Container className=\"print-form\">\r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    <ul>\r\n                        <li>CUSTOMER: <span>{ISRItem.detail_customer}</span></li>\r\n                        <li>PO #: <span>{ ISRItem.po_number}</span></li>\r\n                        <li>STYLE: <span id=\"style-field\">0</span> </li>\r\n                        <li>DESCRIPTION: <span>{ ISRItem.description}</span></li>\r\n                        <li>COLOR: <span>{ISRItem.color}</span></li>\r\n                        <li>SIZE: <span>{ISRItem.size}</span></li>\r\n                        <li>TOTAL Q'TY: <span>{ ISRItem.total}</span></li>\r\n                        <li>Q'TY/SACK: <span>{ ISRItem.qty_sack}</span></li>\r\n                        <li>SHIPDATE: <span>{ISRItem.ship_date}</span></li>\r\n                    </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> 0 / { ISRItem.total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={{padding:\"30px\"}}></div> */}\r\n            {/* <div className=\"print-barcode\">\r\n                <Image ref={inputRef} />\r\n            </div> */}\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {/* <tr>\r\n                        <td>ISR</td>\r\n                        <td></td>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        <td>FINAL EXAM</td>\r\n                        <td></td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ISRPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\api\\index.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js",["222"],"export default (item = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ITEMS':\r\n            return action.payload\r\n        case 'CREATE_ITEM':\r\n            return [...item, action.payload]\r\n        default:\r\n            return item\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js",["223"],"export default (details = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DETAILS':\r\n            return action.payload\r\n        case 'CREATE_DETAILS':\r\n            return [...details, action.payload]\r\n        default:\r\n            return details\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js",[],"D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\BarcodeScanReducer.js",["224"],"export default (barcodeScanResult = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_BARCODE':\r\n            return action.payload\r\n        case 'POST_BARCODE':\r\n            return action.payload\r\n        case 'INSERT_BR':\r\n            return action.payload\r\n        case 'POST_BARCODE_ERROR':\r\n            // alert(action.error)\r\n            barcodeScanResult = []\r\n            return barcodeScanResult\r\n        case 'FETCH_BARCODE_ERROR':\r\n            return barcodeScanResult\r\n        default:\r\n            return barcodeScanResult\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScan.js",["225"],"import React, { useState,useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport BarcodeScanPanel from './BarcodeScanPanel';\r\nimport BarcodeScanResult from './BarcodeScanResult';\r\nimport { useDispatch } from 'react-redux'\r\nimport { clearResults, postBarcodeDetails } from '../../../../actions/BarcodeScanActions';\r\n\r\nfunction BarcodeScan() {\r\n    \r\n    const dispatch = useDispatch()\r\n    \r\n    \r\n    const [barcodeInput, setBarcodeInput] = useState({\r\n        barcode:''\r\n    })\r\n    const [barcodeCopy, setBarcodeCopy] = useState({\r\n        barcode:''\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n         e.preventDefault();\r\n        let barcodeField = document.getElementById('barcodeInput')\r\n        barcodeField.value = ''\r\n        const undbtn = document.getElementById('undo-btn')\r\n        undbtn.disabled = true;\r\n        //dispatch\r\n        setBarcodeCopy(barcodeInput)\r\n        dispatch(postBarcodeDetails(barcodeInput))\r\n    }\r\n   \r\n    useEffect(() => {\r\n\r\n        const undbtn = document.getElementById('undo-btn')\r\n        undbtn.disabled = true;\r\n        dispatch(clearResults())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (barcodeCopy.barcode !== \"\") {\r\n            const undbtn = document.getElementById('undo-btn')\r\n            undbtn.disabled = false;\r\n        }\r\n        \r\n    }, [barcodeCopy])\r\n    return (\r\n        <div className=\"barcode-wrapper\">\r\n            <div className=\"barcode-scan-container\">\r\n                <div className=\"barcode-primary-div\">\r\n                    <Row>\r\n                        <Col xl={5} lg={4} md={10} sm={10}>\r\n                            <BarcodeScanPanel\r\n                                barcodeInput={barcodeInput}\r\n                                handleSubmit={handleSubmit}\r\n                                setBarcodeInput={setBarcodeInput} \r\n                                setBarcodeCopy={setBarcodeCopy}\r\n                                barcodeCopy={barcodeCopy}\r\n                                />\r\n                        </Col>\r\n                        <Col xl={7} lg={7} md={10} sm={10} className=\"col-res\">         \r\n                            <BarcodeScanResult\r\n                                barcodeCopy={barcodeCopy}\r\n                            />\r\n                        </Col>\r\n                    \r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScan\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\PO.js",["226","227","228","229","230","231","232"],"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Table, Col, Row, Button, Form, Card, ButtonGroup } from 'react-bootstrap'\r\nimport POPrintComponent from './POPrintComponent'\r\nimport POTable from './POTable'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { fetchDetails } from '../../../../actions/DetailsActions'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction PO({setSidebar,sidebar}) {\r\n\r\n    const [searchInput, setSearchInput] = useState(null)\r\n    const [searchResult, setSearchResult] = useState(null)\r\n    const [selectedPO, setSelectedPO] = useState(null)\r\n    const [routeList, setRouteList] = useState([])\r\n    const [generatedBarcode, setGeneratedBarcode] = useState(null)\r\n    const [dummyState, setDummyState] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const details = useSelector(state => state.details)\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchDetails())\r\n    }, [dummyState])\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(generatedBarcode)\r\n    }, [generatedBarcode])\r\n\r\n    useEffect(() => {\r\n        console.log(selectedPO)\r\n        if (selectedPO) {\r\n            if (selectedPO.length) {\r\n                selectedPO[0].detail_style.process.unshift('ISR')\r\n                let uniqueFilteredRoute = [...new Set(selectedPO[0].detail_style.process)]\r\n                setRouteList(uniqueFilteredRoute)\r\n            }\r\n        }\r\n    }, [selectedPO])\r\n\r\n    useEffect(() => {\r\n        const resultfilt = details.filter(det => (det.active ===true))  \r\n        setSearchResult(resultfilt)\r\n        \r\n    }, [details])\r\n\r\n    useEffect(() => {\r\n    \r\n        if (details) {\r\n            if (details.length) {\r\n                const searchResult = details.filter(det => ((det.po_number.includes(searchInput) || det.detail_customer.toUpperCase().includes(searchInput)) && det.active ===true))  \r\n                setSearchResult(searchResult)\r\n            }\r\n        }\r\n        \r\n        \r\n    }, [searchInput])\r\n\r\n    useEffect(() => {\r\n        console.log(searchResult)\r\n    }, [searchResult])\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n        html2canvas(input, {\r\n            width: 794,\r\n            height: 1123\r\n        })\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 18, 5,width,height);\r\n\t\t\tpdf.save(generatedBarcode);  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"po-wrapper\">\r\n        <div className=\"po-container\"> \r\n            <Row>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POTable\r\n                        generatedBarcode={generatedBarcode}\r\n                        setGeneratedBarcode={setGeneratedBarcode}\r\n                        handlePrint={handlePrint}\r\n                        searchResult={searchResult}\r\n                        details={details}\r\n                        selectedPO={selectedPO}\r\n                        searchInput={searchInput}\r\n                        setSearchInput={setSearchInput}\r\n                        setSelectedPO={setSelectedPO}\r\n                        dummyState={dummyState}\r\n                        setDummyState={setDummyState}\r\n                        setSidebar={setSidebar}\r\n                        sidebar={sidebar}\r\n                    />\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <POPrintComponent\r\n                        generatedBarcode={generatedBarcode}\r\n                        routeList={routeList}\r\n                        selectedPO={selectedPO}\r\n                    />\r\n                    \r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default PO\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanPanel.js",["233","234"],"import React,{useEffect,useState} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FocusLock from 'react-focus-lock';\r\nimport { undoScan } from '../../../../api';\r\nimport { useAlert } from 'react-alert'\r\nimport * as FaIcons from 'react-icons/fa'\r\nimport { useDispatch } from 'react-redux'\r\nimport { insertBR } from '../../../../actions/BarcodeScanActions';\r\n\r\nfunction BarcodeScanPanel({ setBarcodeInput,handleSubmit,barcodeCopy,barcodeInput,setBarcodeCopy }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const alert = useAlert()\r\n\r\n    const handleChange = (e) => {\r\n        setTimeout(() => {\r\n            if (document.getElementById(\"barcodeInput\") !== null) {\r\n                if (document.getElementById(\"barcodeInput\").value !== \"\") {\r\n                    document.getElementById(\"barcodeInput\").value = \"\"\r\n                }\r\n                // setBarcodeCopy({\r\n                //     barcode: \"\"\r\n                // })\r\n                // const undbtn = document.getElementById('undo-btn')\r\n                // undbtn.disabled = true;\r\n            }\r\n        }, 10000);\r\n        \r\n        \r\n        setBarcodeInput({\r\n            barcode: e.target.value\r\n        })\r\n        \r\n    }\r\n    useEffect(() => {\r\n        console.log(barcodeInput)\r\n    }, [barcodeInput])\r\n\r\n\r\n    const handleUndo = async () => {\r\n        if (barcodeCopy.barcode !== null) {\r\n            const res = await undoScan(barcodeCopy)\r\n            console.log(res)\r\n            \r\n            \r\n            if (res.data) {\r\n                dispatch(insertBR(res.data))\r\n                alert.show(\r\n                    <div className=\"alert-suc\"><FaIcons.FaCheck /> {'\"'+res.data+'\"'+' process complete!'}</div>\r\n                )\r\n            } else {\r\n                alert.show(\r\n                    <div className=\"alert-err\"><FaIcons.FaCheck /> Undo Error! ask admin for help.</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"barcode-scan-panel\">\r\n            <h4 className=\"form-title\" style={{textAlign:'center'}}>Barcode Scan</h4>\r\n            <br/>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"barcodeInput\">\r\n                    <Form.Label>Scan:</Form.Label>\r\n                    <FocusLock>\r\n                        <Form.Control type=\"text\" placeholder=\"Scan here\" onChange={handleChange}/>\r\n                    </FocusLock>\r\n                </Form.Group>\r\n            </Form>\r\n            <br/>\r\n            <Button variant=\"danger\" className=\"btn-undo\" block id=\"undo-btn\" onClick={handleUndo}>UNDO SCAN</Button>\r\n            <hr />\r\n            <h5>Instructions</h5>\r\n            <p>1. Make sure the cursor is focused on the text box</p>\r\n            <p>2. Scan the barcode located at the bottom of the route sheet</p>\r\n            <h5>Reminder</h5>\r\n            <p>* Scanning should be done once for each sack on each process *</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScanPanel\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\BarcodeScan.js\\BarcodeScanResult.js",["235"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {Row} from 'react-bootstrap'\r\n\r\nfunction BarcodeScanResult({barcodeCopy}) {\r\n\r\n    const barcodeScanResult = useSelector(state => state.barcodeScanResult)\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(barcodeScanResult)\r\n        console.log(barcodeScanResult.length)\r\n    }, [barcodeScanResult])\r\n    return (\r\n        <div className=\"barcode-scan-result\">\r\n            <h4 className=\"form-title\" style={{ textAlign: 'center' }}>Result</h4>\r\n            <br />\r\n            <br />\r\n            \r\n            {barcodeScanResult.length && barcodeCopy.barcode ? (\r\n                <div className=\"details-result\">\r\n                    <p><span>{barcodeCopy.barcode}</span></p>\r\n                    <h2>PO Number:<span>{barcodeCopy.barcode.split('-')[1]}</span></h2>\r\n                    <h2>STYLE:<span>{barcodeCopy.barcode.split('-')[0]}</span></h2>\r\n                    <h2>COLOR:<span>{barcodeCopy.barcode.split('-')[2]}</span></h2>\r\n                    <h2>SACK #:<span>{barcodeCopy.barcode.split('-')[3]}</span></h2>\r\n                    <h2>CURRENT PROCESS:<span>{barcodeScanResult.split(',')[0]}</span></h2>\r\n                    <h2>NEXT PROCESS:<span>{barcodeScanResult.split(',')[1]}</span></h2>\r\n                        \r\n                    </div>\r\n                ): <p>No Result</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarcodeScanResult\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\BarcodeScanActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POPrintComponent.js",["236","237","238","239","240","241","242"],"import React, {useState,useEffect}from 'react'\r\nimport { Col, Container, Table, Row,Image } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport ReactBarcode from 'react-barcode'\r\nimport QRCode from 'qrcode.react'\r\n\r\nfunction POTable({ selectedPO, routeList,generatedBarcode }) {\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: localBar,\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <div className=\"po-container-print-div\">\r\n            {selectedPO ? (selectedPO.length ? (\r\n                <>\r\n        <Container className=\"po-container-print\" id=\"printForm\">\r\n            \r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    \r\n                        <ul>\r\n                            <li>CUSTOMER: <span>{selectedPO[0].detail_customer}</span></li>\r\n                            <li>PO #: <span>{ selectedPO[0].po_number}</span></li>\r\n                            <li>STYLE: <span>{ selectedPO[0].detail_style.style}</span> </li>\r\n                            <li>DESCRIPTION: <span>{ selectedPO[0].description}</span></li>\r\n                            <li>COLOR: <span>{selectedPO[0].color}</span></li>\r\n                            <li>TOTAL Q'TY: <span>{selectedPO[0].total}</span></li>\r\n                                    <li>Q'TY/SACK:\r\n                                    <span>{generatedBarcode.split('-')[5] == selectedPO[0].total_sack ?\r\n                                        (selectedPO[0].qty_sack - ((selectedPO[0].qty_sack * selectedPO[0].total_sack) - selectedPO[0].total))\r\n                                        :\r\n                                        (selectedPO[0].qty_sack)}\r\n                                    </span>\r\n                                    </li>\r\n                            <li>SHIPDATE: <span>{selectedPO[0].ship_date}</span></li>\r\n                        </ul>\r\n                    \r\n                    \r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <p>SACK NO.</p>\r\n                        <p> {generatedBarcode.split('-')[5]} / { selectedPO[0].total_sack}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n                    </Row>\r\n                    \r\n                        <div style={{display:'flex',justifyContent:'space-between',marginLeft:'35px',marginRight:'35px'}}>\r\n                            {/* <div className=\"print-barcode\">\r\n                                <ReactBarcode value={generatedBarcode} width={0.4} height={55} margin={0} fontSize={6} />\r\n                            </div> */}\r\n                            <QRCode value={generatedBarcode} style={{ display: 'block', marginRight: '30px', width: '50px', height: '50px' }} />\r\n                            <p style={{fontSize:'10px'}}>{generatedBarcode}</p>\r\n                        </div>\r\n                        \r\n                    </Container>\r\n                    \r\n                    </>\r\n                ):(<p>loading..</p>)):(<p style={{marginTop:'48%',textAlign:'center'}}>SELECT PO TO GENERATE ROUTE SHEET</p>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default POTable","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\POTable.js",["243","244","245","246"],"import React, { useEffect, useState } from \"react\"\r\nimport { Table, Col, Row, Button, Form, Card } from \"react-bootstrap\"\r\nimport { fetchPurchase, addPurchase } from \"../../../../api\"\r\nimport Moment from \"react-moment\"\r\nimport \"moment-timezone\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport * as BiIcons from \"react-icons/bi\"\r\n\r\nimport { useAlert } from \"react-alert\"\r\nimport axios from \"axios\"\r\n\r\nfunction POPrintComponent({\r\n  sidebar,\r\n  setSidebar,\r\n  setSearchInput,\r\n  setSelectedPO,\r\n  details,\r\n  selectedPO,\r\n  searchResult,\r\n  handlePrint,\r\n  setGeneratedBarcode,\r\n  generatedBarcode,\r\n  dummyState,\r\n  setDummyState,\r\n}) {\r\n  const alert = useAlert()\r\n\r\n  const handleChange = (e) => {\r\n    setSearchInput(e.target.value.toUpperCase())\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleProcess = async () => {\r\n    if (!sidebar) {\r\n      const res = await addPurchase(purchaseToSubmit)\r\n      console.log(res)\r\n\r\n      if (res !== null) {\r\n        alert.show(\r\n          <div className=\"alert-suc\">\r\n            <FaIcons.FaCheck /> {generatedBarcode} is on-process!{\" \"}\r\n          </div>\r\n        )\r\n      } else {\r\n        alert.show(\r\n          <div className=\"alert-err\">\r\n            <BiIcons.BiError /> Unable to process {generatedBarcode}!\r\n          </div>\r\n        )\r\n      }\r\n      //update\r\n\r\n      console.log(generatedBarcode.split(\"-\")[3])\r\n      console.log(selectedPO[0].total_sack)\r\n      if (\r\n        generatedBarcode.split(\"-\")[5].toString() ===\r\n        selectedPO[0].total_sack.toString()\r\n      ) {\r\n        await axios\r\n          .post(\r\n            window.location.protocol +\r\n              \"//\" +\r\n              window.location.hostname +\r\n              \":8000/api/detail-update/\" +\r\n              selectedPO[0].id,\r\n            { active: \"false\" },\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"token \" +\r\n                  JSON.parse(window.localStorage.getItem(\"credentials\")).token,\r\n              },\r\n            }\r\n          )\r\n          .then(() => {\r\n            setDummyState(!dummyState)\r\n            handlePrint()\r\n            setSelectedPO(null)\r\n            console.log(\"active false\")\r\n          })\r\n          .catch((err) => console.log(err))\r\n        console.log(\"request finished\")\r\n      } else {\r\n        setDummyState(!dummyState)\r\n        handlePrint()\r\n        setSelectedPO(null)\r\n      }\r\n    } else {\r\n      alert.show(\r\n        <div className=\"alert-err\">\r\n          <BiIcons.BiError /> Please close the sidebar before printing!\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  const [purchaseResult, setpurchaseResult] = useState(null)\r\n  const [filteredPurchaseResult, setfilteredPurchaseResult] = useState(null)\r\n  const [purchaseActive, setPurchaseActive] = useState([])\r\n\r\n  const [purchaseToSubmit, setpurchaseToSubmit] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setDummyState(!dummyState)\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    let flag = true\r\n    if (flag) {\r\n      const purchaseResult = await fetchPurchase()\r\n\r\n      setpurchaseResult(purchaseResult.data)\r\n    }\r\n    return () => {\r\n      flag = false\r\n    }\r\n  }, [dummyState])\r\n\r\n  useEffect(() => {\r\n    if (purchaseResult && searchResult) {\r\n      if (searchResult.length) {\r\n        console.log(purchaseResult)\r\n        let purchaseResActive = []\r\n        for (let j = 0; j != searchResult.length; j++) {\r\n          let ctr = 0\r\n          for (let i = 0; i != purchaseResult.length; i++) {\r\n            if (\r\n              purchaseResult[i].po_number.po_number ===\r\n                searchResult[j].po_number &&\r\n              purchaseResult[i].po_number.color === searchResult[j].color &&\r\n              purchaseResult[i].po_number.size === searchResult[j].size &&\r\n              purchaseResult[i].po_number.detail_style.style ===\r\n                searchResult[j].detail_style.style\r\n            ) {\r\n              ctr++\r\n            }\r\n          }\r\n          purchaseResActive.push(ctr)\r\n        }\r\n\r\n        setPurchaseActive(purchaseResActive)\r\n      }\r\n    }\r\n  }, [purchaseResult, searchResult])\r\n\r\n  useEffect(() => {\r\n    if (filteredPurchaseResult && selectedPO) {\r\n      if (selectedPO.length) {\r\n        setpurchaseToSubmit({\r\n          po_number: selectedPO[0].id,\r\n          barcode: generatedBarcode,\r\n          sack_number: filteredPurchaseResult.length + 1,\r\n        })\r\n      }\r\n    }\r\n  }, [generatedBarcode, selectedPO, filteredPurchaseResult])\r\n\r\n  const handleSelect = (po, color, size, style, index) => {\r\n    let selectedDetails = details.filter((det) => {\r\n      return det.po_number === po && det.color === color && det.size === size\r\n    })\r\n    console.log(selectedDetails)\r\n    // const purchaseResult = await fetchPurchase()\r\n    let filterPurchase = purchaseResult.filter((pr) => {\r\n      return (\r\n        pr.po_number.po_number === po &&\r\n        pr.po_number.color === color &&\r\n        pr.po_number.size === size &&\r\n        pr.po_number.detail_style.style === style\r\n      )\r\n    })\r\n    setfilteredPurchaseResult(filterPurchase)\r\n    let qtyS =\r\n      selectedDetails[0].total_sack === filterPurchase.length + 1\r\n        ? selectedDetails[0].qty_sack -\r\n          (selectedDetails[0].qty_sack * selectedDetails[0].total_sack -\r\n            selectedDetails[0].total)\r\n        : selectedDetails[0].qty_sack\r\n    let genCode =\r\n      selectedDetails[0].detail_style.style +\r\n      \"-\" +\r\n      selectedDetails[0].po_number +\r\n      \"-\" +\r\n      selectedDetails[0].color +\r\n      \"$\" +\r\n      selectedDetails[0].size +\r\n      \"-\" +\r\n      selectedDetails[0].total +\r\n      \"-\" +\r\n      qtyS +\r\n      \"-\" +\r\n      (filterPurchase.length + 1)\r\n    setGeneratedBarcode(genCode)\r\n    setSelectedPO(selectedDetails)\r\n  }\r\n\r\n  return (\r\n    <div className=\"po-container-form\">\r\n      <div style={{ marginBottom: \"15px\" }}>\r\n        <h3 className=\"form-title\">PURCHASE ORDERS</h3>\r\n      </div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label style={{ color: \"white\" }}>SEARCH:</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            className=\"isr-form\"\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n      <div className=\"po-container-table\">\r\n        <Table\r\n          striped\r\n          bordered\r\n          hover\r\n          style={{ backgroundColor: \"white\", borderRadius: \"10px\" }}\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th>DATE CREATED</th>\r\n              <th>PO</th>\r\n              <th>COLOR</th>\r\n              <th>SIZE</th>\r\n              <th>TOTAL SACK</th>\r\n              <th>PENDING</th>\r\n              <th>ACTIVE</th>\r\n              <th>SELECT</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {searchResult && purchaseActive.length && searchResult.length ? (\r\n              searchResult.map((det, index) => {\r\n                return (\r\n                  <tr style={{ fontSize: \"15px\" }} key={index}>\r\n                    <td>\r\n                      <Moment format=\"YYYY-MM-DD hh:mm:ss\">\r\n                        {det.create_on}\r\n                      </Moment>\r\n                    </td>\r\n                    <td>{det.po_number}</td>\r\n                    <td>{det.color}</td>\r\n                    <td>{det.size}</td>\r\n                    <td>{det.total_sack}</td>\r\n                    <td>{det.total_sack - purchaseActive[index]}</td>\r\n                    <td>{purchaseActive[index]}</td>\r\n                    <td>\r\n                      <Button\r\n                        onClick={() =>\r\n                          handleSelect(\r\n                            det.po_number,\r\n                            det.color,\r\n                            det.size,\r\n                            det.detail_style.style,\r\n                            index\r\n                          )\r\n                        }\r\n                      >\r\n                        SELECT\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              })\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"8\" style={{ textAlign: \"center\" }}>\r\n                  No Result\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <br />\r\n      <Card className=\"po-card\">\r\n        <Card.Body as={Row}>\r\n          {selectedPO && purchaseToSubmit ? (\r\n            <>\r\n              <Col sm={9}>\r\n                <Card.Title style={{ fontSize: \"35px\" }}>\r\n                  {selectedPO[0].po_number}\r\n                </Card.Title>\r\n                <Card.Text style={{ fontStyle: \"italic\" }}>\r\n                  CUSTOMER: {selectedPO[0].detail_customer}\r\n                </Card.Text>\r\n              </Col>\r\n              <Col sm={2}>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  style={{ padding: \"20px 20px 20px 20px\" }}\r\n                  onClick={handleProcess}\r\n                >\r\n                  PROCESS 1 SACK\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          ) : (\r\n            <p style={{ margin: \"21px\" }}>Select PO</p>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default POPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\components\\auth\\SignIn.js",["247"],"import React, { useEffect,useState } from 'react'\r\nimport { Button,Alert,Form } from 'react-bootstrap'\r\nimport { postCredentials } from '../../actions/AuthActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nfunction SignIn({setCached}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const [creds, setCreds] = useState({\r\n        username: '',\r\n        password: ''\r\n    })\r\n    useEffect(() => {\r\n        const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        \r\n        // window.location.href = 'http://localhost:000/';\r\n        if (cachedCreds==null && window.location.href !== window.location.protocol+'//'+window.location.hostname+':'+window.location.port+'/') {\r\n            window.location.href = window.location.protocol+'//'+window.location.hostname+':'+window.location.port+'/'\r\n        }\r\n        console.log(window.location.href)\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const cachedCreds = JSON.parse(window.localStorage.getItem(\"credentials\"))\r\n        setCached(cachedCreds)\r\n    }, [auth])\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault();\r\n        const res = await dispatch(postCredentials(creds))\r\n        console.log(res)\r\n        // if (res==200) {\r\n        //     window.location.reload(); \r\n        // }\r\n        // console.log(res)/\\\r\n         if (res === '400') {\r\n            document.getElementById('login-error').textContent=\"Incorrect Username or Password\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        } else {\r\n            document.getElementById('login-error').textContent=\"Unknown error\"\r\n            document.getElementById('login-error').style.visibility =\"visible\"\r\n        }\r\n        \r\n        \r\n    }\r\n    const handleChange = (e) => {\r\n        document.getElementById('login-error').style.visibility =\"hidden\"\r\n        setCreds({\r\n            ...creds,\r\n            [e.target.id]:e.target.value\r\n        },console.log(creds))\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"signin-container\">\r\n                <h4 style={{ textAlign: 'center' }} className=\"form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES, INC</h4>\r\n                <br />\r\n                <br/>\r\n                <h1 className=\"form-title\" style={{ textAlign: 'center' }}>Login</h1><br/>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group controlId=\"username\">\r\n                        <Form.Label>Username</Form.Label>\r\n                        <Form.Control required type=\"text\" placeholder=\"Enter Username\" onChange={ handleChange }/>\r\n                        <Form.Text className=\"text-muted\">\r\n                        We'll never share your Username with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" onChange={ handleChange }/>\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" block>\r\n                        Login\r\n                    </Button>\r\n                    <br/>\r\n                    <Alert variant=\"danger\" id=\"login-error\" style={{textAlign:'center'}}>\r\n                        Incorrect Username or Password\r\n                    </Alert>\r\n                </Form>\r\n                \r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\AuthReducer.js",["248"],"export default (auth = [], action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_SESSION':\r\n            window.localStorage.setItem(\"credentials\",JSON.stringify(action.payload))\r\n            return action.payload\r\n        case 'LOGOUT':\r\n             window.localStorage.clear();\r\n            return action.payload\r\n        case 'AUTH_ERROR':\r\n            window.localStorage.clear();\r\n            return action.error\r\n        default:\r\n            return auth\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\AuthActions.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\Home.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\home\\PageUnavailable.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\ViewItems.js",["249","250","251","252","253","254","255","256","257","258","259","260"],"import React, { useEffect, useState } from \"react\"\r\nimport { Container, Table, Form, Button, Modal } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getItems } from \"../../../actions/ItemActions\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { MDBDataTable } from \"mdbreact\"\r\nimport { CSVLink } from \"react-csv\"\r\nimport moment from \"moment\"\r\n\r\nfunction ViewItems() {\r\n  const dispatch = useDispatch()\r\n  const item = useSelector((state) => state.item)\r\n\r\n  //modal\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const [searchInput, setSearchInput] = useState(null)\r\n  const [searchResult, setSearchResult] = useState(null)\r\n  //modal\r\n\r\n  const [rowData, setRowData] = useState([])\r\n  const [csvdata, setCsvdata] = useState([])\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Customer\",\r\n        field: \"customer\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Style\",\r\n        field: \"style\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Process\",\r\n        field: \"process\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Action\",\r\n        field: \"action\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: rowData,\r\n  }\r\n\r\n  const [ItemClass, setItemClass] = useState({\r\n    process: [],\r\n    customer: \"\",\r\n    style: \"\",\r\n  })\r\n\r\n  useEffect(() => {\r\n    dispatch(getItems())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(item)\r\n    if (item && item.length) {\r\n      const data = item.map((i) => {\r\n        return {\r\n          date: moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          customer: i.customer.toUpperCase(),\r\n          style: i.style.toUpperCase(),\r\n          process: i.process.map((p, index) => {\r\n            if (index !== i.process.length - 1) {\r\n              return (p + \", \").toUpperCase()\r\n            } else {\r\n              return p.toUpperCase()\r\n            }\r\n          }),\r\n          action: (\r\n            <Button\r\n              variant=\"info\"\r\n              size=\"sm\"\r\n              onClick={() => handleEdit(i)}\r\n              block\r\n            >\r\n              <FaIcons.FaEdit /> Edit\r\n            </Button>\r\n          ),\r\n        }\r\n      })\r\n      console.log(data)\r\n      setRowData(data)\r\n      let csvd = item.map((i) => {\r\n        return [\r\n          moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          i.customer.toUpperCase(),\r\n          i.style.toUpperCase(),\r\n          i.process.map((p, index) => {\r\n            if (index !== i.process.length - 1) {\r\n              return (p + \", \").toUpperCase()\r\n            } else {\r\n              return p.toUpperCase()\r\n            }\r\n          }),\r\n        ]\r\n      })\r\n      csvd.unshift([\"date\", \"customer\", \"style\", \"process\"])\r\n      console.log(csvd)\r\n      setCsvdata(csvd)\r\n    }\r\n  }, [item])\r\n\r\n  const handleFormChange = (e) => {\r\n    setItemClass({\r\n      ...ItemClass,\r\n      [e.target.id]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let processList = []\r\n    let checkboxes = document.querySelectorAll(\"input[type=checkbox]:checked\")\r\n    for (let i = 0; i < checkboxes.length; i++) {\r\n      processList.push(checkboxes[i].value)\r\n    }\r\n    setItemClass({\r\n      ...ItemClass,\r\n      process: processList,\r\n    })\r\n  }\r\n\r\n  const [selectedItems, setSelectedItems] = useState(null)\r\n\r\n  const handleEdit = (i) => {\r\n    const selItem = item.filter((it) => {\r\n      return it.style === i.style\r\n    })\r\n    setSelectedItems(selItem)\r\n    setItemClass({\r\n      style: i.style.toUpperCase(),\r\n      customer: i.customer.toUpperCase(),\r\n      process: i.process,\r\n    })\r\n    handleShow()\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      let processCheckbox = document.getElementById(\"check1\")\r\n      if (processCheckbox && selectedItems && setSelectedItems.length) {\r\n        console.log(processCheckbox.length)\r\n        let checklength =\r\n          selectedItems[0].customer.toUpperCase() === \"TOTES\" ? 14 : 12\r\n        console.log(checklength)\r\n        for (let i = 1; i != checklength; i++) {\r\n          for (let j = 0; j != selectedItems[0].process.length; j++) {\r\n            if (\r\n              document.getElementById(`check${i}`).value ===\r\n              selectedItems[0].process[j]\r\n            ) {\r\n              document.getElementById(`check${i}`).checked = true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [show])\r\n\r\n  return (\r\n    <div className=\"view-item-wrapper\">\r\n      <div className=\"view-item-container\">\r\n        <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          animation={false}\r\n          centered\r\n          size=\"lg\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"example-modal-sizes-title-lg\">\r\n              Edit Item\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {selectedItems && selectedItems.length ? (\r\n              <div className=\"modal-edit\">\r\n                <Form id=\"form-add-item\">\r\n                  <Form.Group controlId=\"customer\">\r\n                    <Form.Label>Customer:</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Customer\"\r\n                      defaultValue={selectedItems[0].customer}\r\n                      onChange={handleFormChange}\r\n                      className=\"form-caps\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"style\">\r\n                    <Form.Label>Style:</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      placeholder=\"Style\"\r\n                      defaultValue={selectedItems[0].style}\r\n                      onChange={handleFormChange}\r\n                      className=\"form-caps\"\r\n                    />\r\n                  </Form.Group>\r\n                  {selectedItems[0].customer.toUpperCase() === \"TOTES\" ? (\r\n                    <Form.Group>\r\n                      <Form.Label>Process:</Form.Label>\r\n                      <Form.Check\r\n                        label=\"Knitting\"\r\n                        value=\"knitting\"\r\n                        id=\"check1\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 1\"\r\n                        value=\"isr_1\"\r\n                        id=\"check2\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"B1 Receipts\"\r\n                        value=\"reciepts\"\r\n                        id=\"check3\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming\"\r\n                        value=\"steaming\"\r\n                        id=\"check4\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Examining\"\r\n                        value=\"examining\"\r\n                        id=\"check5\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 2\"\r\n                        value=\"isr_2\"\r\n                        id=\"check6\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Sewing\"\r\n                        value=\"sewing\"\r\n                        id=\"check7\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 3\"\r\n                        value=\"isr_3\"\r\n                        id=\"check8\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming 1\"\r\n                        value=\"steaming_1\"\r\n                        id=\"check9\"\r\n                        onChange={handleChange}\r\n                      />\r\n\r\n                      <Form.Check\r\n                        label=\"Examining 1\"\r\n                        value=\"examining_1\"\r\n                        id=\"check10\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Tagging\"\r\n                        value=\"tagging\"\r\n                        id=\"check11\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Metal Detection\"\r\n                        value=\"metaldetect\"\r\n                        id=\"check12\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Boxing\"\r\n                        value=\"boxing\"\r\n                        id=\"check13\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  ) : (\r\n                    <Form.Group>\r\n                      <Form.Label>Process:</Form.Label>\r\n                      <Form.Check\r\n                        label=\"Knitting\"\r\n                        value=\"knitting\"\r\n                        id=\"check1\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Cutting\"\r\n                        value=\"cutting\"\r\n                        id=\"check2\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 1\"\r\n                        value=\"isr_1\"\r\n                        id=\"check3\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Sewing\"\r\n                        value=\"sewing\"\r\n                        id=\"check4\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"ISR 2\"\r\n                        value=\"isr_2\"\r\n                        id=\"check5\"\r\n                        onChange={handleChange}\r\n                      />\r\n\r\n                      <Form.Check\r\n                        label=\"B1 Receipts\"\r\n                        value=\"reciepts\"\r\n                        id=\"check6\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Steaming\"\r\n                        value=\"steaming\"\r\n                        id=\"check7\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Tagging\"\r\n                        value=\"tagging\"\r\n                        id=\"check8\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Final Examination\"\r\n                        value=\"finalexam\"\r\n                        id=\"check9\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Metal Detection\"\r\n                        value=\"metaldetect\"\r\n                        id=\"check10\"\r\n                        onChange={handleChange}\r\n                      />\r\n                      <Form.Check\r\n                        label=\"Boxing\"\r\n                        value=\"boxing\"\r\n                        id=\"check11\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  )}\r\n                </Form>\r\n              </div>\r\n            ) : (\r\n              <p>loading</p>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h5 className=\"form-title\">ITEMS</h5>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px 30px 20px 30px\",\r\n            // borderRadius: '5px',\r\n            height: \"90%\",\r\n            overflow: \"scroll\",\r\n            overflowX: \"hidden\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <MDBDataTable\r\n            entries={8}\r\n            striped\r\n            bordered\r\n            small\r\n            entriesOptions={[5, 8, 10, 15]}\r\n            striped\r\n            hover\r\n            style={{ height: \"100% !important\" }}\r\n            data={data}\r\n            sortable={true}\r\n            // exportToCSV\r\n          />\r\n          {csvdata.length ? (\r\n            <CSVLink data={csvdata} filename={\"items_data.csv\"}>\r\n              Export CSV\r\n            </CSVLink>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewItems\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\PO\\ViewBarcodes.js",["261","262","263","264"],"import React, { useEffect, useState } from \"react\"\r\nimport { Button, Table, Form } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchPurchaseDetails } from \"../../../../actions/BarcodeScanActions\"\r\nimport { MDBDataTable } from \"mdbreact\"\r\nimport { CSVLink } from \"react-csv\"\r\nimport moment from \"moment\"\r\n\r\nfunction ViewBarcodes() {\r\n  const dispatch = useDispatch()\r\n  const barcodeScanResult = useSelector((state) => state.barcodeScanResult)\r\n  const [rowData, setRowData] = useState([])\r\n  const [csvdata, setCsvdata] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPurchaseDetails())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(barcodeScanResult)\r\n    if (barcodeScanResult.length && barcodeScanResult[0].create_on) {\r\n      const data = barcodeScanResult.map((i) => {\r\n        return {\r\n          date: moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          barcode: i.barcode.toUpperCase(),\r\n          style: i.po_number.detail_style.style,\r\n          po: i.po_number.po_number.toUpperCase(),\r\n          color: i.po_number.color.toUpperCase(),\r\n          size: i.po_number.size.toUpperCase(),\r\n          qtysack: i.barcode.split(\"-\")[4],\r\n          sackno: i.barcode.split(\"-\")[5],\r\n          action: (\r\n            <Button variant=\"danger\" size=\"sm\">\r\n              DELETE\r\n            </Button>\r\n          ),\r\n        }\r\n      })\r\n      console.log(data)\r\n      setRowData(data)\r\n      let csvd = barcodeScanResult.map((i) => {\r\n        return [\r\n          moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          i.barcode.toUpperCase(),\r\n          i.po_number.detail_style.style,\r\n          i.po_number.po_number.toUpperCase(),\r\n          i.po_number.color.toUpperCase(),\r\n          i.po_number.size.toUpperCase(),\r\n          i.barcode.split(\"-\")[4],\r\n          i.barcode.split(\"-\")[5],\r\n        ]\r\n      })\r\n      csvd.unshift([\r\n        \"date\",\r\n        \"barcode\",\r\n        \"style\",\r\n        \"po#\",\r\n        \"color\",\r\n        \"size\",\r\n        \"qty/sack\",\r\n        \"sack#\",\r\n      ])\r\n      console.log(csvd)\r\n      setCsvdata(csvd)\r\n    }\r\n  }, [barcodeScanResult])\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Barcode\",\r\n        field: \"barcode\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Style\",\r\n        field: \"style\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Po #\",\r\n        field: \"po\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Color\",\r\n        field: \"color\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Size\",\r\n        field: \"size\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Qty/Sack\",\r\n        field: \"qtysack\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Sack #\",\r\n        field: \"sackno\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Actions\",\r\n        field: \"action\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: rowData,\r\n  }\r\n  return (\r\n    <div className=\"view-item-wrapper\">\r\n      <div className=\"view-item-container\">\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h5 className=\"form-title\">BARCODES</h5>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            // borderRadius: '5px',\r\n            height: \"90%\",\r\n            overflow: \"scroll\",\r\n            overflowX: \"hidden\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <MDBDataTable\r\n            entries={8}\r\n            striped\r\n            bordered\r\n            small\r\n            entriesOptions={[5, 8, 10, 15]}\r\n            striped\r\n            hover\r\n            style={{ height: \"100% !important\" }}\r\n            data={data}\r\n          />\r\n          {csvdata.length ? (\r\n            <CSVLink data={csvdata} filename={\"barcodes_data.csv\"}>\r\n              Export CSV\r\n            </CSVLink>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewBarcodes\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ViewDetails.js",["265","266","267","268","269","270","271","272"],"import React, { useEffect, useState } from \"react\"\r\nimport { Button, Table, Form } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { fetchDetails } from \"../../../../actions/DetailsActions\"\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { MDBDataTable } from \"mdbreact\"\r\nimport { CSVLink } from \"react-csv\"\r\nimport moment from \"moment\"\r\n\r\nfunction ViewDetails() {\r\n  const dispatch = useDispatch()\r\n  const details = useSelector((state) => state.details)\r\n  const [searchInput, setSearchInput] = useState(null)\r\n  const [searchResult, setSearchResult] = useState(null)\r\n  const [rowData, setRowData] = useState([])\r\n  const [csvdata, setCsvdata] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchDetails())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(details)\r\n    if (details.length && details[0].create_on) {\r\n      const data = details.map((i) => {\r\n        return {\r\n          date: moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          customer: i.detail_customer.toUpperCase(),\r\n          style: i.detail_style.style,\r\n          po: i.po_number.toUpperCase(),\r\n          shipdate: i.ship_date.toUpperCase(),\r\n          color: i.color.toUpperCase(),\r\n          size: i.size.toUpperCase(),\r\n          total: i.total,\r\n          totalsack: i.total_sack,\r\n          action: (\r\n            <Button variant=\"danger\">\r\n              <FaIcons.FaTrashAlt /> Delete\r\n            </Button>\r\n          ),\r\n        }\r\n      })\r\n      console.log(data)\r\n      setRowData(data)\r\n      let csvd = details.map((i) => {\r\n        return [\r\n          moment(i.create_on).format(\"YYYY-MM-DD HH:MM\"),\r\n          i.detail_customer.toUpperCase(),\r\n          i.detail_style.style,\r\n          i.po_number.toUpperCase(),\r\n          i.ship_date.toUpperCase(),\r\n          i.color.toUpperCase(),\r\n          i.size.toUpperCase(),\r\n          i.total,\r\n          i.total_sack,\r\n        ]\r\n      })\r\n      csvd.unshift([\r\n        \"date\",\r\n        \"customer\",\r\n        \"style\",\r\n        \"po#\",\r\n        \"shipdate\",\r\n        \"color\",\r\n        \"size\",\r\n        \"total\",\r\n        \"totalSack\",\r\n      ])\r\n      console.log(csvd)\r\n      setCsvdata(csvd)\r\n    }\r\n  }, [details])\r\n\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: \"Date\",\r\n        field: \"date\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Customer\",\r\n        field: \"customer\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Style\",\r\n        field: \"style\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"PO #\",\r\n        field: \"po\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Ship Date\",\r\n        field: \"shipdate\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Color\",\r\n        field: \"color\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Size\",\r\n        field: \"size\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Total\",\r\n        field: \"total\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Total sack\",\r\n        field: \"totalsack\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n      {\r\n        label: \"Actions\",\r\n        field: \"action\",\r\n        sort: \"asc\",\r\n        width: 150,\r\n      },\r\n    ],\r\n    rows: rowData,\r\n  }\r\n\r\n  return (\r\n    <div className=\"view-item-wrapper\">\r\n      <div className=\"view-item-container\">\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <h5 className=\"form-title\">PURCHASE ORDERS</h5>\r\n        </div>\r\n        <div\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"20px\",\r\n            // borderRadius: '5px',\r\n            height: \"90%\",\r\n            overflow: \"scroll\",\r\n            overflowX: \"hidden\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          <MDBDataTable\r\n            entries={8}\r\n            striped\r\n            bordered\r\n            small\r\n            entriesOptions={[5, 8, 10, 15]}\r\n            striped\r\n            hover\r\n            style={{ height: \"100% !important\" }}\r\n            data={data}\r\n          />\r\n          {csvdata.length ? (\r\n            <CSVLink data={csvdata} filename={\"details_data.csv\"}>\r\n              Export CSV\r\n            </CSVLink>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ViewDetails\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashCard.js",["273","274"],"import React from \"react\"\r\nimport { Row, Col } from \"react-bootstrap\"\r\n\r\nfunction DashCard({ stylclass, icon, val, caption }) {\r\n  return (\r\n    <div className={stylclass}>\r\n      <div style={{ marginTop: \"10px\" }}>{icon}</div>\r\n\r\n      <div>\r\n        <span id=\"val-card\">{val}</span>\r\n        <span id=\"lbl-card\">{caption}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashCard\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashPie.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardTodayTable.js",["275"],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\DashboardStatusMonitoring.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\StatusTableReducer.js",["276"],"export default (statusTable = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_STATUS_TABLE\":\r\n      return action.payload\r\n    default:\r\n      return statusTable\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\StatusListReducer.js",["277"],"export default (statusList = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_STATUS_LIST\":\r\n      return action.payload\r\n    default:\r\n      return statusList\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\reducers\\RouteTableReducer.js",["278"],"export default (routeTable = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_ROUTE_TABLE\":\r\n      return action.payload\r\n    default:\r\n      return routeTable\r\n  }\r\n}\r\n","D:\\PROJECTS\\frontgold\\src\\actions\\StatusActions.js",[],{"ruleId":"279","severity":1,"message":"280","line":15,"column":23,"nodeType":"281","messageId":"282","endLine":15,"endColumn":32},{"ruleId":"279","severity":1,"message":"283","line":15,"column":33,"nodeType":"281","messageId":"282","endLine":15,"endColumn":38},{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"279","severity":1,"message":"288","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":16},{"ruleId":"279","severity":1,"message":"289","line":12,"column":10,"nodeType":"281","messageId":"282","endLine":12,"endColumn":17},{"ruleId":"279","severity":1,"message":"290","line":13,"column":10,"nodeType":"281","messageId":"282","endLine":13,"endColumn":18},{"ruleId":"279","severity":1,"message":"291","line":13,"column":20,"nodeType":"281","messageId":"282","endLine":13,"endColumn":31},{"ruleId":"279","severity":1,"message":"292","line":16,"column":18,"nodeType":"281","messageId":"282","endLine":16,"endColumn":27},{"ruleId":"279","severity":1,"message":"293","line":8,"column":10,"nodeType":"281","messageId":"282","endLine":8,"endColumn":29},{"ruleId":"294","severity":1,"message":"295","line":64,"column":52,"nodeType":"296","messageId":"297","endLine":64,"endColumn":54},{"ruleId":"279","severity":1,"message":"298","line":3,"column":13,"nodeType":"281","messageId":"282","endLine":3,"endColumn":20},{"ruleId":"279","severity":1,"message":"299","line":6,"column":8,"nodeType":"281","messageId":"282","endLine":6,"endColumn":12},{"ruleId":"279","severity":1,"message":"300","line":10,"column":8,"nodeType":"281","messageId":"282","endLine":10,"endColumn":14},{"ruleId":"279","severity":1,"message":"301","line":4,"column":10,"nodeType":"281","messageId":"282","endLine":4,"endColumn":22},{"ruleId":"302","severity":1,"message":"303","line":43,"column":6,"nodeType":"304","endLine":43,"endColumn":8,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"306","line":52,"column":6,"nodeType":"304","endLine":52,"endColumn":19,"suggestions":"307"},{"ruleId":"294","severity":1,"message":"295","line":30,"column":39,"nodeType":"296","messageId":"297","endLine":30,"endColumn":41},{"ruleId":"279","severity":1,"message":"308","line":2,"column":16,"nodeType":"281","messageId":"282","endLine":2,"endColumn":25},{"ruleId":"279","severity":1,"message":"288","line":2,"column":19,"nodeType":"281","messageId":"282","endLine":2,"endColumn":25},{"ruleId":"302","severity":1,"message":"309","line":53,"column":8,"nodeType":"304","endLine":53,"endColumn":33,"suggestions":"310"},{"ruleId":"302","severity":1,"message":"311","line":33,"column":8,"nodeType":"304","endLine":33,"endColumn":14,"suggestions":"312"},{"ruleId":"302","severity":1,"message":"303","line":37,"column":8,"nodeType":"304","endLine":37,"endColumn":10,"suggestions":"313"},{"ruleId":"279","severity":1,"message":"314","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":20},{"ruleId":"302","severity":1,"message":"303","line":31,"column":8,"nodeType":"304","endLine":31,"endColumn":10,"suggestions":"315"},{"ruleId":"302","severity":1,"message":"316","line":57,"column":8,"nodeType":"304","endLine":57,"endColumn":17,"suggestions":"317"},{"ruleId":"294","severity":1,"message":"295","line":99,"column":68,"nodeType":"296","messageId":"297","endLine":99,"endColumn":70},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":10,"endColumn":2},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":10,"endColumn":2},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":18,"endColumn":2},{"ruleId":"302","severity":1,"message":"303","line":36,"column":8,"nodeType":"304","endLine":36,"endColumn":10,"suggestions":"321"},{"ruleId":"279","severity":1,"message":"322","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":15},{"ruleId":"279","severity":1,"message":"288","line":3,"column":27,"nodeType":"281","messageId":"282","endLine":3,"endColumn":33},{"ruleId":"279","severity":1,"message":"323","line":3,"column":35,"nodeType":"281","messageId":"282","endLine":3,"endColumn":39},{"ruleId":"279","severity":1,"message":"324","line":3,"column":41,"nodeType":"281","messageId":"282","endLine":3,"endColumn":45},{"ruleId":"279","severity":1,"message":"325","line":3,"column":47,"nodeType":"281","messageId":"282","endLine":3,"endColumn":58},{"ruleId":"302","severity":1,"message":"303","line":25,"column":8,"nodeType":"304","endLine":25,"endColumn":20,"suggestions":"326"},{"ruleId":"302","severity":1,"message":"327","line":59,"column":8,"nodeType":"304","endLine":59,"endColumn":21,"suggestions":"328"},{"ruleId":"279","severity":1,"message":"329","line":1,"column":25,"nodeType":"281","messageId":"282","endLine":1,"endColumn":33},{"ruleId":"330","severity":1,"message":"331","line":49,"column":85,"nodeType":"332","messageId":"333","endLine":49,"endColumn":86},{"ruleId":"279","severity":1,"message":"334","line":3,"column":9,"nodeType":"281","messageId":"282","endLine":3,"endColumn":12},{"ruleId":"279","severity":1,"message":"329","line":1,"column":16,"nodeType":"281","messageId":"282","endLine":1,"endColumn":24},{"ruleId":"279","severity":1,"message":"335","line":1,"column":25,"nodeType":"281","messageId":"282","endLine":1,"endColumn":34},{"ruleId":"279","severity":1,"message":"336","line":2,"column":37,"nodeType":"281","messageId":"282","endLine":2,"endColumn":42},{"ruleId":"279","severity":1,"message":"314","line":3,"column":10,"nodeType":"281","messageId":"282","endLine":3,"endColumn":20},{"ruleId":"279","severity":1,"message":"337","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":37,"column":75,"nodeType":"332","messageId":"340","endLine":37,"endColumn":77},{"ruleId":"294","severity":1,"message":"295","line":67,"column":68,"nodeType":"296","messageId":"297","endLine":67,"endColumn":70},{"ruleId":"302","severity":1,"message":"341","line":108,"column":6,"nodeType":"304","endLine":108,"endColumn":8,"suggestions":"342"},{"ruleId":"302","severity":1,"message":"343","line":110,"column":13,"nodeType":"296","endLine":120,"endColumn":4},{"ruleId":"338","severity":1,"message":"344","line":127,"column":27,"nodeType":"332","messageId":"340","endLine":127,"endColumn":29},{"ruleId":"338","severity":1,"message":"344","line":129,"column":29,"nodeType":"332","messageId":"340","endLine":129,"endColumn":31},{"ruleId":"302","severity":1,"message":"345","line":30,"column":8,"nodeType":"304","endLine":30,"endColumn":14,"suggestions":"346"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":15,"endColumn":2},{"ruleId":"279","severity":1,"message":"308","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":19},{"ruleId":"279","severity":1,"message":"322","line":2,"column":21,"nodeType":"281","messageId":"282","endLine":2,"endColumn":26},{"ruleId":"279","severity":1,"message":"347","line":19,"column":10,"nodeType":"281","messageId":"282","endLine":19,"endColumn":21},{"ruleId":"279","severity":1,"message":"348","line":19,"column":23,"nodeType":"281","messageId":"282","endLine":19,"endColumn":37},{"ruleId":"279","severity":1,"message":"349","line":20,"column":10,"nodeType":"281","messageId":"282","endLine":20,"endColumn":22},{"ruleId":"279","severity":1,"message":"350","line":20,"column":24,"nodeType":"281","messageId":"282","endLine":20,"endColumn":39},{"ruleId":"302","severity":1,"message":"303","line":70,"column":6,"nodeType":"304","endLine":70,"endColumn":8,"suggestions":"351"},{"ruleId":"302","severity":1,"message":"352","line":119,"column":6,"nodeType":"304","endLine":119,"endColumn":12,"suggestions":"353"},{"ruleId":"338","severity":1,"message":"344","line":163,"column":27,"nodeType":"332","messageId":"340","endLine":163,"endColumn":29},{"ruleId":"338","severity":1,"message":"344","line":164,"column":29,"nodeType":"332","messageId":"340","endLine":164,"endColumn":31},{"ruleId":"302","severity":1,"message":"354","line":175,"column":6,"nodeType":"304","endLine":175,"endColumn":12,"suggestions":"355"},{"ruleId":"356","severity":1,"message":"357","line":409,"column":13,"nodeType":"358","endLine":409,"endColumn":20},{"ruleId":"279","severity":1,"message":"322","line":2,"column":18,"nodeType":"281","messageId":"282","endLine":2,"endColumn":23},{"ruleId":"279","severity":1,"message":"323","line":2,"column":25,"nodeType":"281","messageId":"282","endLine":2,"endColumn":29},{"ruleId":"302","severity":1,"message":"303","line":17,"column":6,"nodeType":"304","endLine":17,"endColumn":8,"suggestions":"359"},{"ruleId":"356","severity":1,"message":"357","line":151,"column":13,"nodeType":"358","endLine":151,"endColumn":20},{"ruleId":"279","severity":1,"message":"322","line":2,"column":18,"nodeType":"281","messageId":"282","endLine":2,"endColumn":23},{"ruleId":"279","severity":1,"message":"323","line":2,"column":25,"nodeType":"281","messageId":"282","endLine":2,"endColumn":29},{"ruleId":"279","severity":1,"message":"347","line":13,"column":10,"nodeType":"281","messageId":"282","endLine":13,"endColumn":21},{"ruleId":"279","severity":1,"message":"348","line":13,"column":23,"nodeType":"281","messageId":"282","endLine":13,"endColumn":37},{"ruleId":"279","severity":1,"message":"349","line":14,"column":10,"nodeType":"281","messageId":"282","endLine":14,"endColumn":22},{"ruleId":"279","severity":1,"message":"350","line":14,"column":24,"nodeType":"281","messageId":"282","endLine":14,"endColumn":39},{"ruleId":"302","severity":1,"message":"303","line":20,"column":6,"nodeType":"304","endLine":20,"endColumn":8,"suggestions":"360"},{"ruleId":"356","severity":1,"message":"357","line":163,"column":13,"nodeType":"358","endLine":163,"endColumn":20},{"ruleId":"279","severity":1,"message":"334","line":2,"column":10,"nodeType":"281","messageId":"282","endLine":2,"endColumn":13},{"ruleId":"279","severity":1,"message":"361","line":2,"column":15,"nodeType":"281","messageId":"282","endLine":2,"endColumn":18},{"ruleId":"302","severity":1,"message":"362","line":15,"column":6,"nodeType":"304","endLine":15,"endColumn":8,"suggestions":"363"},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":8,"endColumn":2},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":8,"endColumn":2},{"ruleId":"318","severity":1,"message":"319","line":1,"column":1,"nodeType":"320","endLine":8,"endColumn":2},"no-unused-vars","'positions' is defined but never used.","Identifier","unusedVar","'types' is defined but never used.","no-native-reassign",["364"],"no-negated-in-lhs",["365"],"'Button' is defined but never used.","'isAdmin' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'setIsMain' is assigned a value but never used.","'GiConsoleController' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'AiIcons' is defined but never used.","'Home' is defined but never used.","'SignIn' is defined but never used.","'fetchDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["366"],"React Hook useEffect has a missing dependency: 'todayQuantityPerProcess'. Either include it or remove the dependency array.",["367"],"'Container' is defined but never used.","React Hook useEffect has a missing dependency: 'ISRItem'. Either include it or remove the dependency array. You can also do a functional update 'setISRItem(I => ...)' if you only need 'ISRItem' in the 'setISRItem' call.",["368"],"React Hook useEffect has a missing dependency: 'detailStyle'. Either include it or remove the dependency array. You can also do a functional update 'setdetailStyle(d => ...)' if you only need 'detailStyle' in the 'setdetailStyle' call.",["369"],["370"],"'useBarcode' is defined but never used.",["371"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["372"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["373"],"'Table' is defined but never used.","'Form' is defined but never used.","'Card' is defined but never used.","'ButtonGroup' is defined but never used.",["374"],"React Hook useEffect has a missing dependency: 'details'. Either include it or remove the dependency array.",["375"],"'useState' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Row' is defined but never used.","'useEffect' is defined but never used.","'Image' is defined but never used.","'ReactBarcode' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has missing dependencies: 'dummyState' and 'setDummyState'. Either include them or remove the dependency array. If 'setDummyState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["376"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'setCached'. Either include it or remove the dependency array. If 'setCached' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["377"],"'searchInput' is assigned a value but never used.","'setSearchInput' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'setSearchResult' is assigned a value but never used.",["378"],"React Hook useEffect has a missing dependency: 'handleEdit'. Either include it or remove the dependency array.",["379"],"React Hook useEffect has a missing dependency: 'selectedItems'. Either include it or remove the dependency array.",["380"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["381"],["382"],"'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'perProcessToday'. Either include it or remove the dependency array.",["383"],"no-global-assign","no-unsafe-negation",{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"384","fix":"392"},{"desc":"384","fix":"393"},{"desc":"394","fix":"395"},{"desc":"384","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"384","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"384","fix":"410"},{"desc":"384","fix":"411"},{"desc":"412","fix":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},"Update the dependencies array to be: [statusTable, todayQuantityPerProcess]",{"range":"416","text":"417"},"Update the dependencies array to be: [ISRItem, ISRItem.detail_customer]",{"range":"418","text":"419"},"Update the dependencies array to be: [detailStyle, item]",{"range":"420","text":"421"},{"range":"422","text":"415"},{"range":"423","text":"415"},"Update the dependencies array to be: [ISRItem, item]",{"range":"424","text":"425"},{"range":"426","text":"415"},"Update the dependencies array to be: [dispatch, dummyState]",{"range":"427","text":"428"},"Update the dependencies array to be: [details, searchInput]",{"range":"429","text":"430"},"Update the dependencies array to be: [dummyState, setDummyState]",{"range":"431","text":"432"},"Update the dependencies array to be: [auth, setCached]",{"range":"433","text":"434"},{"range":"435","text":"415"},"Update the dependencies array to be: [handleEdit, item]",{"range":"436","text":"437"},"Update the dependencies array to be: [selectedItems, show]",{"range":"438","text":"439"},{"range":"440","text":"415"},{"range":"441","text":"415"},"Update the dependencies array to be: [perProcessToday]",{"range":"442","text":"443"},[1326,1328],"[dispatch]",[1492,1505],"[statusTable, todayQuantityPerProcess]",[1590,1615],"[ISRItem, ISRItem.detail_customer]",[1156,1162],"[detailStyle, item]",[1227,1229],[961,963],[1889,1898],"[ISRItem, item]",[1126,1128],[967,979],"[dispatch, dummyState]",[2000,2013],"[details, searchInput]",[2948,2950],"[dummyState, setDummyState]",[1175,1181],"[auth, setCached]",[1664,1666],[3075,3081],"[handleEdit, item]",[4657,4663],"[selectedItems, show]",[647,649],[763,765],[447,449],"[perProcessToday]"]