[{"D:\\PROJECTS\\frontgold\\src\\index.js":"1","D:\\PROJECTS\\frontgold\\src\\App.js":"2","D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js":"3","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js":"4","D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js":"5","D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js":"6","D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js":"7","D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js":"8","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js":"9","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js":"10","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js":"11","D:\\PROJECTS\\frontgold\\src\\api\\index.js":"12","D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js":"13","D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js":"14","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js":"15","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js":"16","D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js":"17"},{"size":777,"mtime":1609260570795,"results":"18","hashOfConfig":"19"},{"size":561,"mtime":1609519644625,"results":"20","hashOfConfig":"19"},{"size":2570,"mtime":1609519663968,"results":"21","hashOfConfig":"19"},{"size":2459,"mtime":1609667638081,"results":"22","hashOfConfig":"19"},{"size":631,"mtime":1609667638089,"results":"23","hashOfConfig":"19"},{"size":227,"mtime":1609231550424,"results":"24","hashOfConfig":"19"},{"size":1151,"mtime":1609177949973,"results":"25","hashOfConfig":"19"},{"size":4807,"mtime":1609667638105,"results":"26","hashOfConfig":"19"},{"size":2815,"mtime":1609667638113,"results":"27","hashOfConfig":"19"},{"size":8161,"mtime":1609667638129,"results":"28","hashOfConfig":"19"},{"size":1950,"mtime":1609667638129,"results":"29","hashOfConfig":"19"},{"size":690,"mtime":1609667638081,"results":"30","hashOfConfig":"19"},{"size":197,"mtime":1609667638193,"results":"31","hashOfConfig":"19"},{"size":259,"mtime":1609223499265,"results":"32","hashOfConfig":"19"},{"size":273,"mtime":1609608821128,"results":"33","hashOfConfig":"19"},{"size":595,"mtime":1609667638069,"results":"34","hashOfConfig":"19"},{"size":589,"mtime":1609301082169,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"17d0ngb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\PROJECTS\\frontgold\\src\\index.js",[],["76","77"],"D:\\PROJECTS\\frontgold\\src\\App.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\MyNavbar.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarData.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\Pages.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\dashboard\\Dashboard.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\layout\\SideBarMenu.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\items\\AddItem.js",[],"D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISR.js",["78","79","80"],"import React,{useEffect, useState} from 'react'\r\nimport { Col, Row,Button } from 'react-bootstrap'\r\nimport ISRForm from './ISRForm'\r\nimport ISRPrintComponent from './ISRPrintComponent'\r\nimport html2canvas from 'html2canvas'\r\nimport { jsPDF } from 'jspdf'\r\n\r\nfunction ISR() {\r\n\r\n    const [ISRItem, setISRItem] = useState({\r\n        detail_customer: '',\r\n        barcode: '',\r\n        po_number:'',\r\n        // sack_number: '',\r\n        total_sack: '',\r\n        description: '',\r\n        color: '',\r\n        total: '',\r\n        qty_sack: '',\r\n        ship_date: '',\r\n        detail_style: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        let sackNum = document.getElementById('sack_number');\r\n        let poNum = document.getElementById('po_number');\r\n        let description = document.getElementById('description');\r\n        let color = document.getElementById('color');\r\n        let total = document.getElementById('total');\r\n        let qty_sack = document.getElementById('qty_sack');\r\n        let ship_date = document.getElementById('ship_date');\r\n        let barcode = document.getElementById('barcode');\r\n\r\n        sackNum.value = ''\r\n        poNum.value = ''\r\n        description.value = ''\r\n        color.value = ''\r\n        total.value = ''\r\n        qty_sack.value = ''\r\n        ship_date.value = ''\r\n        // barcode.value = ''\r\n        \r\n        setISRItem({\r\n            ...ISRItem,\r\n            barcode: '',\r\n            po_number:'',\r\n            // sack_number: '',\r\n            total_sack: '',\r\n            description: '',\r\n            color: '',\r\n            total: '',\r\n            qty_sack: '',\r\n            ship_date: '',\r\n        })\r\n        \r\n    }, [ISRItem.detail_customer])\r\n    \r\n    // useEffect(() => {\r\n    //     let barcode = document.getElementById('barcode');\r\n    //     barcode.value=ISRItem.barcode\r\n    // }, [ISRItem.barcode])\r\n\r\n\r\n\r\n    const handlePrint = () => {\r\n\t\tconst input = document.getElementById('printForm');\r\n\r\n\t\thtml2canvas(input)\r\n\t\t.then((canvas) => {\r\n\t\t\tconst imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n            let width = pdf.internal.pageSize.getWidth();\r\n            let height = pdf.internal.pageSize.getHeight();\r\n\t\t\tpdf.addImage(imgData, 'JPEG', 0, 0,width,height);\r\n\t\t\tpdf.save(\"download.pdf\");  \r\n\t\t});\r\n\t}\r\n\r\n    return (\r\n        <div className=\"isr-container\">\r\n            <Row style={{ margin: \"0 auto\" }}>\r\n                {/* <Col lg={1}></Col> */}\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-form\">\r\n                        <div style={{ marginBottom: \"15px\" }}>\r\n                            <h3 className=\"form-title\">ISR</h3> \r\n                        </div>\r\n                        <ISRForm\r\n                            ISRItem={ISRItem}\r\n                            setISRItem={setISRItem}\r\n                            handlePrint={handlePrint} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} md={11} sm={11}>\r\n                    <div className=\"isr-container-print\" id=\"printForm\">\r\n                        <ISRPrintComponent\r\n                            ISRItem={ISRItem} />\r\n                    </div>\r\n                </Col>\r\n                {/* <Col lg={1}></Col> */}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ISR\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRForm.js",["81","82"],"import React, { useEffect, useState } from 'react'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { addDetails } from '../../../../actions/DetailsActions'\r\nimport { getItems } from '../../../../actions/ItemActions'\r\n\r\nfunction ISRForm({ISRItem,setISRItem,handlePrint}) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [detailStyle, setdetailStyle] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (item) {\r\n            if (item.length) {\r\n                let customerList = []\r\n                for (let i = 0; i !== item.length; i++){\r\n                    customerList.push(item[i].customer)\r\n                }\r\n\r\n                let UniqueCustomerList = [...new Set(customerList)]\r\n\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    customerList: UniqueCustomerList\r\n                })\r\n            }\r\n        }\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setdetailStyle({\r\n            customerList:[],\r\n            styleDict: [],\r\n        })    \r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addDetails(ISRItem))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        let customer = document.getElementById(\"detail_customer\");\r\n        let sackNum = document.getElementById('sack_number');\r\n        let style = document.getElementById('detail_style');\r\n        let poNum = document.getElementById('po_number');\r\n\r\n        if (customer.value !== \"NONE\") {\r\n            let filteredItem = item.filter(i => i.customer === customer.value)\r\n            let styleDict = []\r\n            \r\n            for (let i = 0; i !== filteredItem.length; i++){\r\n                styleDict.push({\r\n                    id: filteredItem[i].id,\r\n                    style: filteredItem[i].style\r\n                })\r\n                setdetailStyle({\r\n                    ...detailStyle,\r\n                    styleDict: styleDict\r\n                })\r\n            }\r\n        } else {\r\n            setdetailStyle({\r\n                ...detailStyle,\r\n                styleDict: [],\r\n            })\r\n        }\r\n        \r\n       \r\n        if (sackNum.value !== \"\" && style.value !== \"\" && poNum.value !== \"\" && customer.value!==\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n                barcode: (style.options[style.selectedIndex].innerHTML +\"-\"+ poNum.value +\"-\"+ sackNum.value).toUpperCase()\r\n            })\r\n            \r\n        } else if (customer.value===\"NONE\") {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                barcode: '',\r\n                detail_customer: '',\r\n            })\r\n         }else {\r\n            setISRItem({\r\n                ...ISRItem,\r\n                [e.target.id]: e.target.value.toUpperCase(),\r\n                detail_style: style.value,\r\n            })\r\n            \r\n        } \r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group as={Row} controlId=\"detail_customer\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Customer:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control as=\"select\" onChange={handleChange} className=\"form-caps\">\r\n                            <option key={0} value=\"NONE\">NONE</option>\r\n                            {detailStyle ? detailStyle.customerList.map((customer,index) => {\r\n                                return <option key={index}>{customer}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"detail_style\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Style:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control as=\"select\" onChange={handleChange} placeholder=\"Choose Customer\" className=\"form-caps\">\r\n                            {detailStyle ? detailStyle.styleDict.map((style,index) => {\r\n                                return <option key={index} value={style.id}>{style.style}</option>\r\n                            }):null}\r\n                        </Form.Control>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"po_number\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>PO Number:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"sack_number\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"description\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"color\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Color:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"total\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Total:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"qty_sack\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Quantity / Sack:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} controlId=\"ship_date\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Ship Date:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"date\" onChange={handleChange} className=\"form-caps\"/>\r\n                    </Col>\r\n                </Form.Group>\r\n                {/* <Form.Group as={Row} controlId=\"barcode\">\r\n                    <Col sm=\"4\">\r\n                        <Form.Label>Barcode:</Form.Label>\r\n                    </Col>\r\n                    <Col sm=\"8\">\r\n                        <Form.Control type=\"text\" className=\"form-caps\" disabled />\r\n                    </Col>\r\n                </Form.Group> */}\r\n                <div>\r\n                    <Button type=\"submit\" className=\"form-btn-dark\" block>\r\n                        Submit\r\n                    </Button>\r\n                    {/* <Button className=\"form-btn-light\" style={{ float: 'right' }} onClick={handlePrint}>\r\n                        Print\r\n                    </Button> */}\r\n                </div>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ISRForm\r\n","D:\\PROJECTS\\frontgold\\src\\components\\pages\\process\\ISR\\ISRPrintComponent.js",["83","84","85","86"],"import React, {useEffect, useState} from 'react'\r\nimport { Col, Container, Table, Row } from 'react-bootstrap';\r\nimport { useBarcode } from '@createnextapp/react-barcode';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getItems } from '../../../../actions/ItemActions';\r\n\r\n\r\nfunction ISRPrintComponent({ ISRItem }) {\r\n    \r\n    const dispatch = useDispatch()\r\n    const item = useSelector(state => state.item)\r\n    const [routeList, setRouteList] = useState([])\r\n    \r\n    // const [bar, setBar] = useState('null')\r\n\r\n    // let {inputRef}  = useBarcode({\r\n    //     value: bar ? bar:'null',\r\n    //     options: {\r\n    //         background: '#ffffff',\r\n    //         width: 1,\r\n    //         height: 40,\r\n    //         fontSize: 13\r\n    //     }\r\n    // });\r\n\r\n    // useEffect(() => {\r\n    //     setBar(ISRItem.barcode)\r\n    // }, [ISRItem.barcode,ISRItem.detail_customer])\r\n    useEffect(() => {\r\n        dispatch(getItems())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(item)\r\n    }, [item])\r\n\r\n    useEffect(() => {\r\n        console.log(routeList)\r\n    }, [routeList])\r\n\r\n    useEffect(() => {\r\n        let styleField = document.getElementById('style-field');\r\n        let style = document.getElementById('detail_style');\r\n        if (style.selectedIndex!==-1) {\r\n         styleField.textContent= style.options[style.selectedIndex].innerHTML   \r\n        }\r\n        if (styleField.textContent !== null) {\r\n            let filteredStyle = item.filter(i => i.style === styleField.textContent)\r\n            if (filteredStyle.length) {\r\n                if (filteredStyle[0].process.length) {\r\n                    filteredStyle[0].process.unshift('ISR')\r\n                    let uniqueFilteredStyle = [...new Set(filteredStyle[0].process)]\r\n                    setRouteList(uniqueFilteredStyle)\r\n                }\r\n            }     \r\n        }\r\n    }, [ISRItem])\r\n\r\n    return ( \r\n        <Container className=\"print-form\">\r\n            <p className=\"print-form-title\">GOLDEN ZONE GARMENTS AND ACCESSORIES,INC ROUTE SHEET</p>\r\n            <Row>\r\n                <Col sm={6} className=\"print-form-details\">\r\n                    <ul>\r\n                        <li>CUSTOMER: <span>{ISRItem.detail_customer}</span></li>\r\n                        <li>PO #: <span>{ ISRItem.po_number}</span></li>\r\n                        <li>STYLE: <span id=\"style-field\">0</span> </li>\r\n                        <li>DESCRIPTION: <span>{ ISRItem.description}</span></li>\r\n                        <li>COLOR: <span>{ISRItem.color}</span></li>\r\n                        <li>TOTAL Q'TY: <span>{ ISRItem.total}</span></li>\r\n                        <li>Q'TY/SACK: <span>{ ISRItem.qty_sack}</span></li>\r\n                        <li>SHIPDATE: <span>{ISRItem.ship_date}</span></li>\r\n                    </ul>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <div className=\"print-sack-number\">\r\n                        <h5>SACK NO.</h5>\r\n                        <h6> 0 / { ISRItem.sack_number}</h6>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {/* <div style={{padding:\"30px\"}}></div> */}\r\n            {/* <div className=\"print-barcode\">\r\n                <Image ref={inputRef} />\r\n            </div> */}\r\n            <Row>\r\n                <Col lg={11}>\r\n                    <Table bordered className=\"route-table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>OPERATION</th>\r\n                        <th>TRANSFERRED BY (NAME/DATE)</th>\r\n                        <th>TRANSFER TO</th>\r\n                        <th>RECEIVED BY (NAME/DATE)</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {routeList && routeList.map((route, index) => {\r\n                            if (routeList.length !== index+1) {\r\n                                return (\r\n                                    <tr key={index}>\r\n                                        <td>{route.toUpperCase()}</td>\r\n                                        <td></td>\r\n                                        <td>{routeList[index + 1].toUpperCase()}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            \r\n                        })}\r\n                        {/* <tr>\r\n                        <td>ISR</td>\r\n                        <td></td>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>KNITTING</td>\r\n                        <td></td>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        </tr>\r\n                        <tr>\r\n                        <td>SEWING</td>\r\n                        <td></td>\r\n                        <td>FINAL EXAM</td>\r\n                        <td></td>\r\n                        </tr> */}\r\n                    </tbody>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n     );\r\n}\r\n\r\nexport default ISRPrintComponent\r\n","D:\\PROJECTS\\frontgold\\src\\api\\index.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\RootReducer.js",[],"D:\\PROJECTS\\frontgold\\src\\reducers\\ItemReducer.js",["87"],"export default (item = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_ITEMS':\r\n            return action.payload\r\n        case 'CREATE_ITEM':\r\n            return [...item, action.payload]\r\n        default:\r\n            return item\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\reducers\\DetailsReducer.js",["88"],"export default (details = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DETAILS':\r\n            return action.payload\r\n        case 'CREATE_DETAILS':\r\n            return [...details, action.payload]\r\n        default:\r\n            return details\r\n    }\r\n}","D:\\PROJECTS\\frontgold\\src\\actions\\DetailsActions.js",[],"D:\\PROJECTS\\frontgold\\src\\actions\\ItemActions.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":19,"nodeType":"95","messageId":"96","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"97","line":32,"column":13,"nodeType":"95","messageId":"96","endLine":32,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":56,"column":8,"nodeType":"100","endLine":56,"endColumn":33,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":29,"column":8,"nodeType":"100","endLine":29,"endColumn":14,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"104","line":33,"column":8,"nodeType":"100","endLine":33,"endColumn":10,"suggestions":"105"},{"ruleId":"93","severity":1,"message":"106","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":20},{"ruleId":"98","severity":1,"message":"104","line":31,"column":8,"nodeType":"100","endLine":31,"endColumn":10,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"108","line":57,"column":8,"nodeType":"100","endLine":57,"endColumn":17,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":98,"column":68,"nodeType":"112","messageId":"113","endLine":98,"endColumn":70},{"ruleId":"114","severity":1,"message":"115","line":1,"column":1,"nodeType":"116","endLine":10,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":1,"column":1,"nodeType":"116","endLine":10,"endColumn":2},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'barcode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ISRItem'. Either include it or remove the dependency array. You can also do a functional update 'setISRItem(I => ...)' if you only need 'ISRItem' in the 'setISRItem' call.","ArrayExpression",["119"],"React Hook useEffect has a missing dependency: 'detailStyle'. Either include it or remove the dependency array. You can also do a functional update 'setdetailStyle(d => ...)' if you only need 'detailStyle' in the 'setdetailStyle' call.",["120"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["121"],"'useBarcode' is defined but never used.",["122"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array.",["123"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [ISRItem, ISRItem.detail_customer]",{"range":"133","text":"134"},"Update the dependencies array to be: [detailStyle, item]",{"range":"135","text":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},{"range":"139","text":"138"},"Update the dependencies array to be: [ISRItem, item]",{"range":"140","text":"141"},[1671,1696],"[ISRItem, ISRItem.detail_customer]",[999,1005],"[detailStyle, item]",[1070,1072],"[dispatch]",[961,963],[1889,1898],"[ISRItem, item]"]